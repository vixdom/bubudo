{"ast":null,"code":"import { Meridiem } from \"../../../types.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nexport default class FRCasualTimeParser extends AbstractParserWithWordBoundaryChecking {\n  innerPattern(context) {\n    return /(cet?)?\\s*(matin|soir|après-midi|aprem|a midi|à minuit)(?=\\W|$)/i;\n  }\n  innerExtract(context, match) {\n    const suffixLower = match[2].toLowerCase();\n    const component = context.createParsingComponents();\n    switch (suffixLower) {\n      case \"après-midi\":\n      case \"aprem\":\n        component.imply(\"hour\", 14);\n        component.imply(\"minute\", 0);\n        component.imply(\"meridiem\", Meridiem.PM);\n        break;\n      case \"soir\":\n        component.imply(\"hour\", 18);\n        component.imply(\"minute\", 0);\n        component.imply(\"meridiem\", Meridiem.PM);\n        break;\n      case \"matin\":\n        component.imply(\"hour\", 8);\n        component.imply(\"minute\", 0);\n        component.imply(\"meridiem\", Meridiem.AM);\n        break;\n      case \"a midi\":\n        component.imply(\"hour\", 12);\n        component.imply(\"minute\", 0);\n        component.imply(\"meridiem\", Meridiem.AM);\n        break;\n      case \"à minuit\":\n        component.imply(\"hour\", 0);\n        component.imply(\"meridiem\", Meridiem.AM);\n        break;\n    }\n    return component;\n  }\n}","map":{"version":3,"names":["Meridiem","AbstractParserWithWordBoundaryChecking","FRCasualTimeParser","innerPattern","context","innerExtract","match","suffixLower","toLowerCase","component","createParsingComponents","imply","PM","AM"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/fr/parsers/FRCasualTimeParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { ParsingComponents, ParsingResult } from \"../../../results\";\nimport { Meridiem } from \"../../../types\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\n\nexport default class FRCasualTimeParser extends AbstractParserWithWordBoundaryChecking {\n    innerPattern(context: ParsingContext): RegExp {\n        return /(cet?)?\\s*(matin|soir|après-midi|aprem|a midi|à minuit)(?=\\W|$)/i;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents | ParsingResult {\n        const suffixLower = match[2].toLowerCase();\n        const component = context.createParsingComponents();\n\n        switch (suffixLower) {\n            case \"après-midi\":\n            case \"aprem\":\n                component.imply(\"hour\", 14);\n                component.imply(\"minute\", 0);\n                component.imply(\"meridiem\", Meridiem.PM);\n                break;\n\n            case \"soir\":\n                component.imply(\"hour\", 18);\n                component.imply(\"minute\", 0);\n                component.imply(\"meridiem\", Meridiem.PM);\n                break;\n\n            case \"matin\":\n                component.imply(\"hour\", 8);\n                component.imply(\"minute\", 0);\n                component.imply(\"meridiem\", Meridiem.AM);\n                break;\n\n            case \"a midi\":\n                component.imply(\"hour\", 12);\n                component.imply(\"minute\", 0);\n                component.imply(\"meridiem\", Meridiem.AM);\n                break;\n\n            case \"à minuit\":\n                component.imply(\"hour\", 0);\n                component.imply(\"meridiem\", Meridiem.AM);\n                break;\n        }\n\n        return component;\n    }\n}\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,mBAAiB;AAC1C,SAASC,sCAAsC,QAAQ,2DAAyD;AAEhH,eAAc,MAAOC,kBAAmB,SAAQD,sCAAsC;EAClFE,YAAYA,CAACC,OAAuB;IAChC,OAAO,kEAAkE;EAC7E;EAEAC,YAAYA,CAACD,OAAuB,EAAEE,KAAuB;IACzD,MAAMC,WAAW,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;IAC1C,MAAMC,SAAS,GAAGL,OAAO,CAACM,uBAAuB,EAAE;IAEnD,QAAQH,WAAW;MACf,KAAK,YAAY;MACjB,KAAK,OAAO;QACRE,SAAS,CAACE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;QAC3BF,SAAS,CAACE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5BF,SAAS,CAACE,KAAK,CAAC,UAAU,EAAEX,QAAQ,CAACY,EAAE,CAAC;QACxC;MAEJ,KAAK,MAAM;QACPH,SAAS,CAACE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;QAC3BF,SAAS,CAACE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5BF,SAAS,CAACE,KAAK,CAAC,UAAU,EAAEX,QAAQ,CAACY,EAAE,CAAC;QACxC;MAEJ,KAAK,OAAO;QACRH,SAAS,CAACE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;QAC1BF,SAAS,CAACE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5BF,SAAS,CAACE,KAAK,CAAC,UAAU,EAAEX,QAAQ,CAACa,EAAE,CAAC;QACxC;MAEJ,KAAK,QAAQ;QACTJ,SAAS,CAACE,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC;QAC3BF,SAAS,CAACE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC5BF,SAAS,CAACE,KAAK,CAAC,UAAU,EAAEX,QAAQ,CAACa,EAAE,CAAC;QACxC;MAEJ,KAAK,UAAU;QACXJ,SAAS,CAACE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;QAC1BF,SAAS,CAACE,KAAK,CAAC,UAAU,EAAEX,QAAQ,CAACa,EAAE,CAAC;QACxC;;IAGR,OAAOJ,SAAS;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}