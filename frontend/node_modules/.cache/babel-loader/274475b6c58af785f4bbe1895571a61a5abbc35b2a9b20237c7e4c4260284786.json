{"ast":null,"code":"import { AbstractTimeExpressionParser } from \"../../../common/parsers/AbstractTimeExpressionParser.js\";\nexport default class PTTimeExpressionParser extends AbstractTimeExpressionParser {\n  primaryPrefix() {\n    return \"(?:(?:ao?|às?|das|da|de|do)\\\\s*)?\";\n  }\n  followingPhase() {\n    return \"\\\\s*(?:\\\\-|\\\\–|\\\\~|\\\\〜|a(?:o)?|\\\\?)\\\\s*\";\n  }\n}","map":{"version":3,"names":["AbstractTimeExpressionParser","PTTimeExpressionParser","primaryPrefix","followingPhase"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/pt/parsers/PTTimeExpressionParser.ts"],"sourcesContent":["import { AbstractTimeExpressionParser } from \"../../../common/parsers/AbstractTimeExpressionParser\";\n\nexport default class PTTimeExpressionParser extends AbstractTimeExpressionParser {\n    primaryPrefix(): string {\n        return \"(?:(?:ao?|às?|das|da|de|do)\\\\s*)?\";\n    }\n\n    followingPhase(): string {\n        return \"\\\\s*(?:\\\\-|\\\\–|\\\\~|\\\\〜|a(?:o)?|\\\\?)\\\\s*\";\n    }\n\n    // extractPrimaryTimeComponents(context: ParsingContext, match: RegExpMatchArray): ParsingComponents | null {\n    //     // This looks more like a year e.g. 2020\n    //     // if (match[0].match(/^\\s*\\d{4}\\s*$/)) {\n    //     //     return null;\n    //     // }\n    //\n    //     return super.extractPrimaryTimeComponents(context, match);\n    // }\n}\n"],"mappings":"AAAA,SAASA,4BAA4B,QAAQ,yDAAuD;AAEpG,eAAc,MAAOC,sBAAuB,SAAQD,4BAA4B;EAC5EE,aAAaA,CAAA;IACT,OAAO,mCAAmC;EAC9C;EAEAC,cAAcA,CAAA;IACV,OAAO,yCAAyC;EACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}