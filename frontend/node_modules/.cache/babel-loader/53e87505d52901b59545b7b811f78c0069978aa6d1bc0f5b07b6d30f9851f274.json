{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab, AppBar, Toolbar, Paper } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport { themes } from './theme';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nconst themeKeys = ['sunbeam', 'fresh', 'night'];\nimport { deleteUserTasksById } from './services/supabaseTasksService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // ...all hooks and logic above...\n\n  // Set browser tab title\n  useEffect(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n  const [tasks, setTasks] = useState([]);\n  const [promptSelection, setPromptSelection] = useState('A');\n  const [user, setUser] = useState(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored)) return stored;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n  const handleTabChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter(task => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map(task => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async taskData => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => {\n        var _st$completed;\n        return {\n          ...st,\n          completed: (_st$completed = st.completed) !== null && _st$completed !== void 0 ? _st$completed : false\n        };\n      })\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal = {\n      ...newTaskForSupabase,\n      id: tempId\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({\n          id,\n          ...rest\n        }) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async taskId => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({\n            ...sub,\n            completed: newCompletedStatus\n          }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId, subTaskId) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.filter(sub => sub.id !== subTaskId);\n        // If all subtasks gone, mark task incomplete\n        return {\n          ...task,\n          subTasks: updatedSubTasks,\n          completed: updatedSubTasks.length > 0 ? updatedSubTasks.every(st => st.completed) : false\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask delete to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId, subTaskId, newTitle) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.map(sub => sub.id === subTaskId ? {\n          ...sub,\n          title: newTitle\n        } : sub);\n        return {\n          ...task,\n          subTasks: updatedSubTasks\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask edit to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to toggle a single subtask and update parent task if needed\n  const handleToggleSubTask = async (taskId, subTaskId) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        let allSubTasksCompleted = true;\n        const updatedSubTasks = task.subTasks.map(sub => {\n          if (sub.id === subTaskId) {\n            const newSubCompletedStatus = !sub.completed;\n            if (!newSubCompletedStatus) allSubTasksCompleted = false;\n            return {\n              ...sub,\n              completed: newSubCompletedStatus\n            };\n          } else {\n            if (!sub.completed) allSubTasksCompleted = false;\n          }\n          return sub;\n        });\n        return {\n          ...task,\n          subTasks: updatedSubTasks,\n          completed: allSubTasksCompleted\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Function to toggle prompt\n  const togglePrompt = () => {\n    setPromptSelection(prev => prev === 'A' ? 'B' : 'A');\n  };\n\n  // Theme selector handlers\n  // Theme selector handlers\n  const handleThemeClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => setAnchorEl(null);\n  const handleThemeSelect = key => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      color: \"primary\",\n      elevation: 0,\n      sx: {\n        borderRadius: '0 0 24px 24px',\n        px: 2,\n        py: 1,\n        minHeight: 64,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        boxShadow: '0 2px 10px 0 rgba(0,0,0,0.04)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        sx: {\n          width: '100%',\n          minHeight: 64,\n          px: 0,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flex: 1,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: 700,\n            color: \"primary.contrastText\",\n            sx: {\n              letterSpacing: 1,\n              fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n            },\n            children: \"Bubu Do [preview]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 0.5,\n              bgcolor: 'primary.light',\n              px: 1.5,\n              py: 0.5,\n              borderRadius: 8,\n              boxShadow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              width: \"20\",\n              fill: \"#FFA000\",\n              style: {\n                marginRight: 4\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 0h24v24H0z\",\n                fill: \"none\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 140\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 177\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"primary.contrastText\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"My Rewards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleThemeClick,\n            sx: {\n              width: 32,\n              height: 32,\n              p: 0.5,\n              border: '2px solid #fff'\n            },\n            \"aria-label\": \"Change theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Popover, {\n            open: Boolean(anchorEl),\n            anchorEl: anchorEl,\n            onClose: handleThemeClose,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'left'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'left'\n            },\n            PaperProps: {\n              sx: {\n                p: 2,\n                display: 'flex',\n                gap: 2,\n                boxShadow: 4\n              }\n            },\n            children: themeKeys.map(key => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                mx: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                sx: {\n                  width: 32,\n                  height: 32,\n                  p: 0.5,\n                  border: themeKey === key ? '2.5px solid #333' : '2px solid #eee',\n                  background: themes[key].theme.palette.primary.main,\n                  boxShadow: themeKey === key ? 4 : 1,\n                  mb: 0.5,\n                  transition: 'border 0.2s, box-shadow 0.2s',\n                  '&:hover': {\n                    boxShadow: 6,\n                    background: themes[key].theme.palette.primary.dark || themes[key].theme.palette.primary.main\n                  }\n                },\n                \"aria-label\": `Switch to ${themes[key].name} theme`,\n                onClick: () => handleThemeSelect(key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  color: themeKey === key ? '#333' : '#888',\n                  fontWeight: themeKey === key ? 700 : 400,\n                  fontSize: 12\n                },\n                \"aria-label\": themes[key].name,\n                children: themes[key].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1,\n              ml: 1\n            },\n            children: [user.avatar_url && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar_url,\n              alt: user.full_name,\n              style: {\n                width: 32,\n                height: 32,\n                borderRadius: '50%',\n                objectFit: 'cover',\n                marginRight: 4\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"primary.contrastText\",\n              sx: {\n                fontWeight: 500\n              },\n              children: user.full_name || user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"small\",\n              color: \"secondary\",\n              sx: {\n                ml: 1,\n                borderRadius: 8\n              },\n              onClick: async () => {\n                await import('./services/supabaseClient').then(({\n                  supabase\n                }) => supabase.auth.signOut());\n                setUser(null);\n              },\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'background.default',\n        minHeight: '100vh',\n        pt: 10,\n        pb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        sx: {\n          px: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2,\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: togglePrompt,\n            sx: {\n              borderRadius: 8,\n              fontWeight: 500,\n              fontSize: 16,\n              fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n            },\n            children: [\"Using Prompt: \", promptSelection, \" (Click to Switch)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            p: 3,\n            borderRadius: 16,\n            mb: 3,\n            bgcolor: 'background.paper',\n            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)'\n          },\n          children: /*#__PURE__*/_jsxDEV(AddTaskForm, {\n            onAddTask: addTask,\n            currentPrompt: promptSelection,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          sx: {\n            borderRadius: 16,\n            p: 2,\n            bgcolor: 'background.paper',\n            boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            value: tab,\n            onChange: handleTabChange,\n            variant: \"fullWidth\",\n            sx: {\n              mb: 2,\n              borderRadius: 8,\n              minHeight: 48\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"To Do\",\n              sx: {\n                fontWeight: 600,\n                fontSize: 16,\n                fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"My Accomplishments\",\n              sx: {\n                fontWeight: 600,\n                fontSize: 16,\n                fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 11\n          }, this), tab === 0 && /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: incompleteTasks,\n            onToggleTask: handleToggleTask,\n            onToggleSubTask: handleToggleSubTask,\n            onDeleteTask: handleDeleteTask,\n            onDeleteSubTask: handleDeleteSubTask,\n            onEditSubTask: handleEditSubTask,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), tab === 1 && /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: completedTasks,\n            onToggleTask: handleToggleTask,\n            onToggleSubTask: handleToggleSubTask,\n            onDeleteTask: handleDeleteTask,\n            onDeleteSubTask: handleDeleteSubTask,\n            onEditSubTask: handleEditSubTask,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: mergeNotice,\n      autoHideDuration: 4000,\n      onClose: () => setMergeNotice(false),\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setMergeNotice(false),\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Local tasks have been uploaded and merged with your account!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: deleteNotice,\n      autoHideDuration: 3000,\n      onClose: () => setDeleteNotice(false),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setDeleteNotice(false),\n        severity: \"info\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Task deleted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"2p0cQlmHGUXsFB7rsjD8MLKZQIE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","Snackbar","Alert","ThemeProvider","CssBaseline","Tabs","Tab","AppBar","Toolbar","Paper","TaskList","AddTaskForm","fetchUserTasks","upsertUserTasks","themes","Popover","IconButton","APP_VERSION","themeKeys","deleteUserTasksById","jsxDEV","_jsxDEV","App","_s","document","title","tasks","setTasks","promptSelection","setPromptSelection","user","setUser","mergeNotice","setMergeNotice","tab","setTab","deleteNotice","setDeleteNotice","themeKey","setThemeKey","stored","localStorage","getItem","includes","anchorEl","setAnchorEl","currentTheme","theme","setItem","handleTabChange","_event","newValue","incompleteTasks","filter","t","completed","completedTasks","storedTasks","parsedTasks","JSON","parse","tasksWithDates","map","task","dueDate","Date","console","log","error","handleDeleteTask","taskId","prev","id","tasksArr","stringify","err","tasksToStore","toISOString","doSync","cloudTasks","localTasks","cloudIds","Set","newLocalTasks","has","mergedTasks","length","removeItem","addTask","taskData","newTaskForSupabase","subTasks","st","_st$completed","tempId","now","toString","Math","random","substring","newTaskForLocal","updatedTasks","tasksForSupabase","rest","handleToggleTask","updated","newCompletedStatus","sub","handleDeleteSubTask","subTaskId","updatedSubTasks","every","handleEditSubTask","newTitle","handleToggleSubTask","allSubTasksCompleted","newSubCompletedStatus","togglePrompt","handleThemeClick","event","currentTarget","handleThemeClose","handleThemeSelect","key","children","fileName","_jsxFileName","lineNumber","columnNumber","position","color","elevation","sx","borderRadius","px","py","minHeight","display","justifyContent","alignItems","boxShadow","disableGutters","width","flex","variant","fontWeight","letterSpacing","fontFamily","gap","bgcolor","xmlns","height","viewBox","fill","style","marginRight","d","size","onClick","p","border","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","flexDirection","mx","background","palette","primary","main","mb","transition","dark","name","fontSize","ml","avatar_url","src","alt","full_name","objectFit","email","then","supabase","auth","signOut","pt","pb","maxWidth","mt","onAddTask","currentPrompt","value","onChange","label","onToggleTask","onToggleSubTask","onDeleteTask","onDeleteSubTask","onEditSubTask","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab, AppBar, Toolbar, Paper } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AuthHeader from './components/AuthHeader';\nimport { TaskWithSubTasks, SubTask, PromptSelection } from './services/geminiService';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport theme, { themes } from './theme';\nimport { createTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nexport interface Task { // Base Task interface (for potential future use without subtasks)\n  id: string;\n  title: string;\n  completed: boolean;\n}\n\ntype ThemeKey = 'sunbeam' | 'fresh' | 'night';\nconst themeKeys: ThemeKey[] = ['sunbeam', 'fresh', 'night'];\n\nimport { deleteUserTasks, deleteUserTasksById } from './services/supabaseTasksService';\n\nconst App: React.FC = () => {\n  // ...all hooks and logic above...\n\n  // Set browser tab title\n  useEffect(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n\n  const [tasks, setTasks] = useState<TaskWithSubTasks[]>([]);\n  const [promptSelection, setPromptSelection] = useState<PromptSelection>('A');\n  const [user, setUser] = useState<any>(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState<ThemeKey>(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored as ThemeKey)) return stored as ThemeKey;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTab(newValue);\n  };\n\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks: TaskWithSubTasks[] = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async (taskId: string) => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter((task: any) => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks: TaskWithSubTasks[] = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks: TaskWithSubTasks[] = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map((task: any) => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async (taskData: Omit<TaskWithSubTasks, 'id' | 'completed'>) => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => ({...st, completed: st.completed ?? false }))\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal: TaskWithSubTasks = {\n      ...newTaskForSupabase,\n      id: tempId,\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({id, ...rest}) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async (taskId: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({ ...sub, completed: newCompletedStatus }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.filter(sub => sub.id !== subTaskId);\n        // If all subtasks gone, mark task incomplete\n        return { ...task, subTasks: updatedSubTasks, completed: updatedSubTasks.length > 0 ? updatedSubTasks.every(st => st.completed) : false };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask delete to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId: string, subTaskId: string | number, newTitle: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.map(sub => sub.id === subTaskId ? { ...sub, title: newTitle } : sub);\n        return { ...task, subTasks: updatedSubTasks };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask edit to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to toggle a single subtask and update parent task if needed\n  const handleToggleSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        let allSubTasksCompleted = true;\n        const updatedSubTasks = task.subTasks.map(sub => {\n          if (sub.id === subTaskId) {\n            const newSubCompletedStatus = !sub.completed;\n            if (!newSubCompletedStatus) allSubTasksCompleted = false;\n            return { ...sub, completed: newSubCompletedStatus };\n          } else {\n            if (!sub.completed) allSubTasksCompleted = false;\n          }\n          return sub;\n        });\n        return { ...task, subTasks: updatedSubTasks, completed: allSubTasksCompleted };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Function to toggle prompt\n  const togglePrompt = () => {\n    setPromptSelection(prev => (prev === 'A' ? 'B' : 'A'));\n  };\n\n  // Theme selector handlers\n  // Theme selector handlers\n  const handleThemeClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => setAnchorEl(null);\n  const handleThemeSelect = (key: ThemeKey) => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n\n\n  return (\n    \n      <ThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      {/* Restore AuthHeader for Google login and user state sync */}\n      {/* iOS-like Top AppBar */}\n      <AppBar position=\"fixed\" color=\"primary\" elevation={0} sx={{ borderRadius: '0 0 24px 24px', px: 2, py: 1, minHeight: 64, display: 'flex', justifyContent: 'center', alignItems: 'center', boxShadow: '0 2px 10px 0 rgba(0,0,0,0.04)' }}>\n        <Toolbar disableGutters sx={{ width: '100%', minHeight: 64, px: 0, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          {/* Left: App Name Centered */}\n          <Box sx={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <Typography variant=\"h6\" fontWeight={700} color=\"primary.contrastText\" sx={{ letterSpacing: 1, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }}>\n              Bubu Do [preview]\n            </Typography>\n          </Box>\n          {/* Right: Rewards, Theme, User */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n            {/* My Rewards */}\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5, bgcolor: 'primary.light', px: 1.5, py: 0.5, borderRadius: 8, boxShadow: 1 }}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\" fill=\"#FFA000\" style={{ marginRight: 4 }}><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/></svg>\n              <Typography variant=\"caption\" color=\"primary.contrastText\" sx={{ fontWeight: 600 }}>My Rewards</Typography>\n            </Box>\n            {/* Theme Switcher */}\n            <IconButton\n              size=\"small\"\n              onClick={handleThemeClick}\n              sx={{\n                width: 32, height: 32, p: 0.5,\n                border: '2px solid #fff',\n              }}\n              aria-label=\"Change theme\"\n            />\n            <Popover\n              open={Boolean(anchorEl)}\n              anchorEl={anchorEl}\n              onClose={handleThemeClose}\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n              PaperProps={{ sx: { p: 2, display: 'flex', gap: 2, boxShadow: 4 } }}\n            >\n              {themeKeys.map((key) => (\n                <Box key={key} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mx: 1 }}>\n                  <IconButton\n                    size=\"small\"\n                    sx={{\n                      width: 32, height: 32, p: 0.5,\n                      border: themeKey === key ? '2.5px solid #333' : '2px solid #eee',\n                      background: themes[key].theme.palette.primary.main,\n                      boxShadow: themeKey === key ? 4 : 1,\n                      mb: 0.5,\n                      transition: 'border 0.2s, box-shadow 0.2s',\n                      '&:hover': { boxShadow: 6, background: themes[key].theme.palette.primary.dark || themes[key].theme.palette.primary.main }\n                    }}\n                    aria-label={`Switch to ${themes[key].name} theme`}\n                    onClick={() => handleThemeSelect(key)}\n                  />\n                  <Typography\n                    variant=\"caption\"\n                    sx={{ color: themeKey === key ? '#333' : '#888', fontWeight: themeKey === key ? 700 : 400, fontSize: 12 }}\n                    aria-label={themes[key].name}\n                  >\n                    {themes[key].name}\n                  </Typography>\n                </Box>\n              ))}\n            </Popover>\n          {/* User Info */}\n          {user && (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, ml: 1 }}>\n              {user.avatar_url && <img src={user.avatar_url} alt={user.full_name} style={{ width: 32, height: 32, borderRadius: '50%', objectFit: 'cover', marginRight: 4 }} />}\n              <Typography variant=\"body2\" color=\"primary.contrastText\" sx={{ fontWeight: 500 }}>{user.full_name || user.email}</Typography>\n              <Button variant=\"contained\" size=\"small\" color=\"secondary\" sx={{ ml: 1, borderRadius: 8 }} onClick={async () => { await import('./services/supabaseClient').then(({ supabase }) => supabase.auth.signOut()); setUser(null); }}>Logout</Button>\n            </Box>\n          )}\n        </Box>\n      </Toolbar>\n    </AppBar>\n    {/* Main Content below AppBar */}\n    <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', pt: 10, pb: 4 }}>\n      <Container maxWidth=\"sm\" sx={{ px: 0 }}>\n        {/* Prompt Toggle Button */}\n        <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2, mt: 2 }}>\n          <Button variant=\"outlined\" onClick={togglePrompt} sx={{ borderRadius: 8, fontWeight: 500, fontSize: 16, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }}>\n            Using Prompt: {promptSelection} (Click to Switch)\n          </Button>\n        </Box>\n        {/* Add Task Form */}\n        <Paper elevation={2} sx={{ p: 3, borderRadius: 16, mb: 3, bgcolor: 'background.paper', boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)' }}>\n          <AddTaskForm onAddTask={addTask} currentPrompt={promptSelection} user={user} />\n        </Paper>\n        {/* Tabs and Task Lists */}\n        <Paper elevation={2} sx={{ borderRadius: 16, p: 2, bgcolor: 'background.paper', boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)' }}>\n          <Tabs value={tab} onChange={handleTabChange} variant=\"fullWidth\" sx={{ mb: 2, borderRadius: 8, minHeight: 48 }}>\n            <Tab label=\"To Do\" sx={{ fontWeight: 600, fontSize: 16, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }} />\n            <Tab label=\"My Accomplishments\" sx={{ fontWeight: 600, fontSize: 16, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }} />\n          </Tabs>\n          {tab === 0 && (\n            <TaskList \n              tasks={incompleteTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n          {tab === 1 && (\n            <TaskList \n              tasks={completedTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n        </Paper>\n      </Container>\n    </Box>\n    <Snackbar open={mergeNotice} autoHideDuration={4000} onClose={() => setMergeNotice(false)} anchorOrigin={{vertical:'top',horizontal:'center'}}>\n      <Alert onClose={() => setMergeNotice(false)} severity=\"success\" sx={{ width: '100%' }}>\n        Local tasks have been uploaded and merged with your account!\n      </Alert>\n    </Snackbar>\n    <Snackbar open={deleteNotice} autoHideDuration={3000} onClose={() => setDeleteNotice(false)} anchorOrigin={{vertical:'bottom',horizontal:'center'}}>\n      <Alert onClose={() => setDeleteNotice(false)} severity=\"info\" sx={{ width: '100%' }}>\n        Task deleted!\n      </Alert>\n    </Snackbar>\n  </ThemeProvider>\n  );\n}\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}