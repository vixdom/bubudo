{"ast":null,"code":"import { parseTimeUnits, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { reverseTimeUnits } from \"../../../utils/timeunits.js\";\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n  constructor(strictMode) {\n    super();\n    this.strictMode = strictMode;\n  }\n  innerPattern() {\n    return this.strictMode ? STRICT_PATTERN : PATTERN;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseTimeUnits(match[1]);\n    if (!timeUnits) {\n      return null;\n    }\n    const outputTimeUnits = reverseTimeUnits(timeUnits);\n    return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n  }\n}","map":{"version":3,"names":["parseTimeUnits","TIME_UNITS_NO_ABBR_PATTERN","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","reverseTimeUnits","PATTERN","RegExp","STRICT_PATTERN","ENTimeUnitAgoFormatParser","constructor","strictMode","innerPattern","innerExtract","context","match","timeUnits","outputTimeUnits","createRelativeFromReference","reference"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/en/parsers/ENTimeUnitAgoFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseTimeUnits, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { reverseTimeUnits } from \"../../../utils/timeunits\";\n\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(?:ago|before|earlier)(?=\\\\W|$)`, \"i\");\n\nexport default class ENTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private strictMode: boolean) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const timeUnits = parseTimeUnits(match[1]);\n        if (!timeUnits) {\n            return null;\n        }\n        const outputTimeUnits = reverseTimeUnits(timeUnits);\n        return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n    }\n}\n"],"mappings":"AACA,SAASA,cAAc,EAAEC,0BAA0B,EAAEC,kBAAkB,QAAQ,iBAAe;AAC9F,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,gBAAgB,QAAQ,6BAA2B;AAE5D,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,IAAIL,kBAAkB,0CAA0C,EAAE,GAAG,CAAC;AACjG,MAAMM,cAAc,GAAG,IAAID,MAAM,CAAC,IAAIN,0BAA0B,0CAA0C,EAAE,GAAG,CAAC;AAEhH,eAAc,MAAOQ,yBAA0B,SAAQL,sCAAsC;EACzFM,YAAoBC,UAAmB;IACnC,KAAK,EAAE;IADS,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACD,UAAU,GAAGH,cAAc,GAAGF,OAAO;EACrD;EAEAO,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,SAAS,GAAGhB,cAAc,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACC,SAAS,EAAE;MACZ,OAAO,IAAI;;IAEf,MAAMC,eAAe,GAAGZ,gBAAgB,CAACW,SAAS,CAAC;IACnD,OAAOb,iBAAiB,CAACe,2BAA2B,CAACJ,OAAO,CAACK,SAAS,EAAEF,eAAe,CAAC;EAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}