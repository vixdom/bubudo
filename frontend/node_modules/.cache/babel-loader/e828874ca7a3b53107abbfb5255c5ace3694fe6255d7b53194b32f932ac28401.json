{"ast":null,"code":"import React from'react';import{List,ListItem,ListItemText,ListItemIcon,Checkbox,Paper}from'@mui/material';import{formatDate}from'../utils/timeUtils';import SubtaskList from'./SubtaskList';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=_ref=>{let{tasks,onToggleTask,onToggleSubTask}=_ref;return/*#__PURE__*/_jsx(Paper,{elevation:2,sx:{mt:3,p:2},children:tasks.length===0?/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"No tasks yet. Add one above!\"})}):/*#__PURE__*/_jsx(List,{children:tasks.map(task=>/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{mb:2,p:2,opacity:task.completed?0.6:1},children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(Checkbox,{checked:task.completed,onChange:()=>onToggleTask(task.id)})}),/*#__PURE__*/_jsx(ListItemText,{primary:task.title,primaryTypographyProps:{variant:'h6',sx:{textDecoration:task.completed?'line-through':'none'}},secondary:`${formatDate(task.dueDate)}`,secondaryTypographyProps:{variant:'caption'}})]}),task.subTasks&&task.subTasks.length>0&&/*#__PURE__*/_jsx(SubtaskList,{subtasks:task.subTasks,onToggleSubTask:subTaskId=>onToggleSubTask(task.id,subTaskId)})]},task.id))})});};export default TaskList;","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Paper","formatDate","SubtaskList","jsx","_jsx","jsxs","_jsxs","TaskList","_ref","tasks","onToggleTask","onToggleSubTask","elevation","sx","mt","p","children","length","primary","map","task","mb","opacity","completed","checked","onChange","id","title","primaryTypographyProps","variant","textDecoration","secondary","dueDate","secondaryTypographyProps","subTasks","subtasks","subTaskId"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper, Typography, Box } from '@mui/material';\nimport { TaskWithSubTasks } from '../services/geminiService'; \nimport { formatDate } from '../utils/timeUtils';\nimport SubtaskList from './SubtaskList'; \n\ninterface TaskListProps {\n  tasks: TaskWithSubTasks[];\n  onToggleTask: (taskId: string) => void;\n  onToggleSubTask: (taskId: string, subTaskId: string | number) => void; \n  user?: any;\n}\n\n\nconst TaskList: React.FC<TaskListProps> = ({ tasks, onToggleTask, onToggleSubTask }) => {\n  return (\n    <Paper elevation={2} sx={{ mt: 3, p: 2 }}>\n      {tasks.length === 0 ? (\n        <ListItem>\n          <ListItemText primary=\"No tasks yet. Add one above!\" />\n        </ListItem>\n      ) : (\n        <List>\n          {tasks.map((task) => (\n            <Paper key={task.id} elevation={2} sx={{ mb: 2, p: 2, opacity: task.completed ? 0.6 : 1 }}>\n              <ListItem>\n                <ListItemIcon>\n                  <Checkbox \n                    checked={task.completed} \n                    onChange={() => onToggleTask(task.id)} \n                  />\n                </ListItemIcon>\n                <ListItemText \n                  primary={task.title} \n                  primaryTypographyProps={{\n                    variant: 'h6', \n                    sx: { textDecoration: task.completed ? 'line-through' : 'none' } \n                  }}\n                  secondary={\n                    `${formatDate(task.dueDate)}` \n                  }\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n              </ListItem>\n              {task.subTasks && task.subTasks.length > 0 && (\n                <SubtaskList \n                  subtasks={task.subTasks} \n                  onToggleSubTask={(subTaskId) => onToggleSubTask(task.id, subTaskId)} \n                />\n              )}\n            </Paper>\n          ))}\n        </List>\n      )}\n    </Paper>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,QAAQ,CAAEC,YAAY,CAAEC,YAAY,CAAEC,QAAQ,CAAEC,KAAK,KAAyB,eAAe,CAE5G,OAASC,UAAU,KAAQ,oBAAoB,CAC/C,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAUxC,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAA8C,IAA7C,CAAEC,KAAK,CAAEC,YAAY,CAAEC,eAAgB,CAAC,CAAAH,IAAA,CACjF,mBACEJ,IAAA,CAACJ,KAAK,EAACY,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAE,CAAAC,QAAA,CACtCP,KAAK,CAACQ,MAAM,GAAK,CAAC,cACjBb,IAAA,CAACR,QAAQ,EAAAoB,QAAA,cACPZ,IAAA,CAACP,YAAY,EAACqB,OAAO,CAAC,8BAA8B,CAAE,CAAC,CAC/C,CAAC,cAEXd,IAAA,CAACT,IAAI,EAAAqB,QAAA,CACFP,KAAK,CAACU,GAAG,CAAEC,IAAI,eACdd,KAAA,CAACN,KAAK,EAAeY,SAAS,CAAE,CAAE,CAACC,EAAE,CAAE,CAAEQ,EAAE,CAAE,CAAC,CAAEN,CAAC,CAAE,CAAC,CAAEO,OAAO,CAAEF,IAAI,CAACG,SAAS,CAAG,GAAG,CAAG,CAAE,CAAE,CAAAP,QAAA,eACxFV,KAAA,CAACV,QAAQ,EAAAoB,QAAA,eACPZ,IAAA,CAACN,YAAY,EAAAkB,QAAA,cACXZ,IAAA,CAACL,QAAQ,EACPyB,OAAO,CAAEJ,IAAI,CAACG,SAAU,CACxBE,QAAQ,CAAEA,CAAA,GAAMf,YAAY,CAACU,IAAI,CAACM,EAAE,CAAE,CACvC,CAAC,CACU,CAAC,cACftB,IAAA,CAACP,YAAY,EACXqB,OAAO,CAAEE,IAAI,CAACO,KAAM,CACpBC,sBAAsB,CAAE,CACtBC,OAAO,CAAE,IAAI,CACbhB,EAAE,CAAE,CAAEiB,cAAc,CAAEV,IAAI,CAACG,SAAS,CAAG,cAAc,CAAG,MAAO,CACjE,CAAE,CACFQ,SAAS,CACP,GAAG9B,UAAU,CAACmB,IAAI,CAACY,OAAO,CAAC,EAC5B,CACDC,wBAAwB,CAAE,CAAEJ,OAAO,CAAE,SAAU,CAAE,CAClD,CAAC,EACM,CAAC,CACVT,IAAI,CAACc,QAAQ,EAAId,IAAI,CAACc,QAAQ,CAACjB,MAAM,CAAG,CAAC,eACxCb,IAAA,CAACF,WAAW,EACViC,QAAQ,CAAEf,IAAI,CAACc,QAAS,CACxBvB,eAAe,CAAGyB,SAAS,EAAKzB,eAAe,CAACS,IAAI,CAACM,EAAE,CAAEU,SAAS,CAAE,CACrE,CACF,GAzBShB,IAAI,CAACM,EA0BV,CACR,CAAC,CACE,CACP,CACI,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAnB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}