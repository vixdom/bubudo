{"ast":null,"code":"import { includeCommonConfiguration } from \"../../configurations.js\";\nimport { Chrono } from \"../../chrono.js\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results.js\";\nimport { Meridiem, Weekday } from \"../../types.js\";\nimport FRCasualDateParser from \"./parsers/FRCasualDateParser.js\";\nimport FRCasualTimeParser from \"./parsers/FRCasualTimeParser.js\";\nimport SlashDateFormatParser from \"../../common/parsers/SlashDateFormatParser.js\";\nimport FRTimeExpressionParser from \"./parsers/FRTimeExpressionParser.js\";\nimport FRMergeDateTimeRefiner from \"./refiners/FRMergeDateTimeRefiner.js\";\nimport FRMergeDateRangeRefiner from \"./refiners/FRMergeDateRangeRefiner.js\";\nimport FRWeekdayParser from \"./parsers/FRWeekdayParser.js\";\nimport FRSpecificTimeExpressionParser from \"./parsers/FRSpecificTimeExpressionParser.js\";\nimport FRMonthNameLittleEndianParser from \"./parsers/FRMonthNameLittleEndianParser.js\";\nimport FRTimeUnitAgoFormatParser from \"./parsers/FRTimeUnitAgoFormatParser.js\";\nimport FRTimeUnitWithinFormatParser from \"./parsers/FRTimeUnitWithinFormatParser.js\";\nimport FRTimeUnitRelativeFormatParser from \"./parsers/FRTimeUnitRelativeFormatParser.js\";\nexport { Chrono, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Meridiem, Weekday };\nexport const casual = new Chrono(createCasualConfiguration());\nexport const strict = new Chrono(createConfiguration(true));\nexport function parse(text, ref, option) {\n  return casual.parse(text, ref, option);\n}\nexport function parseDate(text, ref, option) {\n  return casual.parseDate(text, ref, option);\n}\nexport function createCasualConfiguration() {\n  let littleEndian = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const option = createConfiguration(false, littleEndian);\n  option.parsers.unshift(new FRCasualDateParser());\n  option.parsers.unshift(new FRCasualTimeParser());\n  option.parsers.unshift(new FRTimeUnitRelativeFormatParser());\n  return option;\n}\nexport function createConfiguration() {\n  let strictMode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  let littleEndian = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return includeCommonConfiguration({\n    parsers: [new SlashDateFormatParser(littleEndian), new FRMonthNameLittleEndianParser(), new FRTimeExpressionParser(), new FRSpecificTimeExpressionParser(), new FRTimeUnitAgoFormatParser(), new FRTimeUnitWithinFormatParser(), new FRWeekdayParser()],\n    refiners: [new FRMergeDateTimeRefiner(), new FRMergeDateRangeRefiner()]\n  }, strictMode);\n}","map":{"version":3,"names":["includeCommonConfiguration","Chrono","ParsingResult","ParsingComponents","ReferenceWithTimezone","Meridiem","Weekday","FRCasualDateParser","FRCasualTimeParser","SlashDateFormatParser","FRTimeExpressionParser","FRMergeDateTimeRefiner","FRMergeDateRangeRefiner","FRWeekdayParser","FRSpecificTimeExpressionParser","FRMonthNameLittleEndianParser","FRTimeUnitAgoFormatParser","FRTimeUnitWithinFormatParser","FRTimeUnitRelativeFormatParser","casual","createCasualConfiguration","strict","createConfiguration","parse","text","ref","option","parseDate","littleEndian","arguments","length","undefined","parsers","unshift","strictMode","refiners"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/fr/index.ts"],"sourcesContent":["/**\n * Chrono components for French support (*parsers*, *refiners*, and *configuration*)\n *\n * @module\n */\n\nimport { includeCommonConfiguration } from \"../../configurations\";\nimport { Chrono, Configuration, Parser, Refiner } from \"../../chrono\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results\";\nimport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday } from \"../../types\";\nimport FRCasualDateParser from \"./parsers/FRCasualDateParser\";\nimport FRCasualTimeParser from \"./parsers/FRCasualTimeParser\";\nimport SlashDateFormatParser from \"../../common/parsers/SlashDateFormatParser\";\nimport FRTimeExpressionParser from \"./parsers/FRTimeExpressionParser\";\nimport FRMergeDateTimeRefiner from \"./refiners/FRMergeDateTimeRefiner\";\nimport FRMergeDateRangeRefiner from \"./refiners/FRMergeDateRangeRefiner\";\nimport FRWeekdayParser from \"./parsers/FRWeekdayParser\";\nimport FRSpecificTimeExpressionParser from \"./parsers/FRSpecificTimeExpressionParser\";\nimport FRMonthNameLittleEndianParser from \"./parsers/FRMonthNameLittleEndianParser\";\nimport FRTimeUnitAgoFormatParser from \"./parsers/FRTimeUnitAgoFormatParser\";\nimport FRTimeUnitWithinFormatParser from \"./parsers/FRTimeUnitWithinFormatParser\";\nimport FRTimeUnitRelativeFormatParser from \"./parsers/FRTimeUnitRelativeFormatParser\";\n\nexport { Chrono, Parser, Refiner, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday };\n\n// Shortcuts\nexport const casual = new Chrono(createCasualConfiguration());\nexport const strict = new Chrono(createConfiguration(true));\n\nexport function parse(text: string, ref?: ParsingReference | Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\nexport function parseDate(text: string, ref?: ParsingReference | Date, option?: ParsingOption): Date {\n    return casual.parseDate(text, ref, option);\n}\n\n/**\n * @ignore (to be documented later)\n */\nexport function createCasualConfiguration(littleEndian = true): Configuration {\n    const option = createConfiguration(false, littleEndian);\n    option.parsers.unshift(new FRCasualDateParser());\n    option.parsers.unshift(new FRCasualTimeParser());\n    option.parsers.unshift(new FRTimeUnitRelativeFormatParser());\n    return option;\n}\n\n/**\n * @ignore (to be documented later)\n */\nexport function createConfiguration(strictMode = true, littleEndian = true): Configuration {\n    return includeCommonConfiguration(\n        {\n            parsers: [\n                new SlashDateFormatParser(littleEndian),\n                new FRMonthNameLittleEndianParser(),\n                new FRTimeExpressionParser(),\n                new FRSpecificTimeExpressionParser(),\n                new FRTimeUnitAgoFormatParser(),\n                new FRTimeUnitWithinFormatParser(),\n                new FRWeekdayParser(),\n            ],\n            refiners: [new FRMergeDateTimeRefiner(), new FRMergeDateRangeRefiner()],\n        },\n        strictMode\n    );\n}\n"],"mappings":"AAMA,SAASA,0BAA0B,QAAQ,yBAAuB;AAClE,SAASC,MAAM,QAAwC,iBAAe;AACtE,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,kBAAgB;AACxF,SAAmEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAc;AAC1G,OAAOC,kBAAkB,MAAM,iCAA+B;AAC9D,OAAOC,kBAAkB,MAAM,iCAA+B;AAC9D,OAAOC,qBAAqB,MAAM,+CAA6C;AAC/E,OAAOC,sBAAsB,MAAM,qCAAmC;AACtE,OAAOC,sBAAsB,MAAM,sCAAoC;AACvE,OAAOC,uBAAuB,MAAM,uCAAqC;AACzE,OAAOC,eAAe,MAAM,8BAA4B;AACxD,OAAOC,8BAA8B,MAAM,6CAA2C;AACtF,OAAOC,6BAA6B,MAAM,4CAA0C;AACpF,OAAOC,yBAAyB,MAAM,wCAAsC;AAC5E,OAAOC,4BAA4B,MAAM,2CAAyC;AAClF,OAAOC,8BAA8B,MAAM,6CAA2C;AAEtF,SAASjB,MAAM,EAAmBC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB;AACzF,SAAmEC,QAAQ,EAAEC,OAAO;AAGpF,OAAO,MAAMa,MAAM,GAAG,IAAIlB,MAAM,CAACmB,yBAAyB,EAAE,CAAC;AAC7D,OAAO,MAAMC,MAAM,GAAG,IAAIpB,MAAM,CAACqB,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAE3D,OAAM,SAAUC,KAAKA,CAACC,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACrF,OAAOP,MAAM,CAACI,KAAK,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC1C;AAEA,OAAM,SAAUC,SAASA,CAACH,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACzF,OAAOP,MAAM,CAACQ,SAAS,CAACH,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC9C;AAKA,OAAM,SAAUN,yBAAyBA,CAAA,EAAoB;EAAA,IAAnBQ,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACzD,MAAMH,MAAM,GAAGJ,mBAAmB,CAAC,KAAK,EAAEM,YAAY,CAAC;EACvDF,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,IAAI1B,kBAAkB,EAAE,CAAC;EAChDmB,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,IAAIzB,kBAAkB,EAAE,CAAC;EAChDkB,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,IAAIf,8BAA8B,EAAE,CAAC;EAC5D,OAAOQ,MAAM;AACjB;AAKA,OAAM,SAAUJ,mBAAmBA,CAAA,EAAuC;EAAA,IAAtCY,UAAU,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAED,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACtE,OAAO7B,0BAA0B,CAC7B;IACIgC,OAAO,EAAE,CACL,IAAIvB,qBAAqB,CAACmB,YAAY,CAAC,EACvC,IAAIb,6BAA6B,EAAE,EACnC,IAAIL,sBAAsB,EAAE,EAC5B,IAAII,8BAA8B,EAAE,EACpC,IAAIE,yBAAyB,EAAE,EAC/B,IAAIC,4BAA4B,EAAE,EAClC,IAAIJ,eAAe,EAAE,CACxB;IACDsB,QAAQ,EAAE,CAAC,IAAIxB,sBAAsB,EAAE,EAAE,IAAIC,uBAAuB,EAAE;GACzE,EACDsB,UAAU,CACb;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}