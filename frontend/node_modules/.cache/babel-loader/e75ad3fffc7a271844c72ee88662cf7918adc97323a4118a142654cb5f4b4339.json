{"ast":null,"code":"import { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport * as references from \"../../../common/casualReferences.js\";\nexport default class PTCasualDateParser extends AbstractParserWithWordBoundaryChecking {\n  innerPattern(context) {\n    return /(agora|hoje|amanha|amanh達|ontem)(?=\\W|$)/i;\n  }\n  innerExtract(context, match) {\n    const lowerText = match[0].toLowerCase();\n    const component = context.createParsingComponents();\n    switch (lowerText) {\n      case \"agora\":\n        return references.now(context.reference);\n      case \"hoje\":\n        return references.today(context.reference);\n      case \"amanha\":\n      case \"amanh達\":\n        return references.tomorrow(context.reference);\n      case \"ontem\":\n        return references.yesterday(context.reference);\n    }\n    return component;\n  }\n}","map":{"version":3,"names":["AbstractParserWithWordBoundaryChecking","references","PTCasualDateParser","innerPattern","context","innerExtract","match","lowerText","toLowerCase","component","createParsingComponents","now","reference","today","tomorrow","yesterday"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/pt/parsers/PTCasualDateParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { ParsingComponents, ParsingResult } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport * as references from \"../../../common/casualReferences\";\n\nexport default class PTCasualDateParser extends AbstractParserWithWordBoundaryChecking {\n    innerPattern(context: ParsingContext): RegExp {\n        return /(agora|hoje|amanha|amanh達|ontem)(?=\\W|$)/i;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents | ParsingResult {\n        const lowerText = match[0].toLowerCase();\n        const component = context.createParsingComponents();\n\n        switch (lowerText) {\n            case \"agora\":\n                return references.now(context.reference);\n\n            case \"hoje\":\n                return references.today(context.reference);\n\n            case \"amanha\":\n            case \"amanh達\":\n                return references.tomorrow(context.reference);\n\n            case \"ontem\":\n                return references.yesterday(context.reference);\n        }\n\n        return component;\n    }\n}\n"],"mappings":"AAEA,SAASA,sCAAsC,QAAQ,2DAAyD;AAChH,OAAO,KAAKC,UAAU,MAAM,qCAAmC;AAE/D,eAAc,MAAOC,kBAAmB,SAAQF,sCAAsC;EAClFG,YAAYA,CAACC,OAAuB;IAChC,OAAO,2CAA2C;EACtD;EAEAC,YAAYA,CAACD,OAAuB,EAAEE,KAAuB;IACzD,MAAMC,SAAS,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;IACxC,MAAMC,SAAS,GAAGL,OAAO,CAACM,uBAAuB,EAAE;IAEnD,QAAQH,SAAS;MACb,KAAK,OAAO;QACR,OAAON,UAAU,CAACU,GAAG,CAACP,OAAO,CAACQ,SAAS,CAAC;MAE5C,KAAK,MAAM;QACP,OAAOX,UAAU,CAACY,KAAK,CAACT,OAAO,CAACQ,SAAS,CAAC;MAE9C,KAAK,QAAQ;MACb,KAAK,QAAQ;QACT,OAAOX,UAAU,CAACa,QAAQ,CAACV,OAAO,CAACQ,SAAS,CAAC;MAEjD,KAAK,OAAO;QACR,OAAOX,UAAU,CAACc,SAAS,CAACX,OAAO,CAACQ,SAAS,CAAC;;IAGtD,OAAOH,SAAS;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}