{"ast":null,"code":"import React,{useEffect,useState}from'react';import{AppBar,Toolbar,Typography,Button,Avatar,Box}from'@mui/material';import{supabase}from'../services/supabaseClient';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthHeader=_ref=>{let{onAuthChange}=_ref;const[user,setUser]=useState(null);useEffect(()=>{// Check for existing session\nconst session=supabase.auth.getSession().then(_ref2=>{let{data:{session}}=_ref2;if(session!==null&&session!==void 0&&session.user){setUser({id:session.user.id,email:session.user.email||'',avatar_url:session.user.user_metadata.avatar_url,full_name:session.user.user_metadata.full_name});onAuthChange({id:session.user.id,email:session.user.email||'',avatar_url:session.user.user_metadata.avatar_url,full_name:session.user.user_metadata.full_name});}else{setUser(null);onAuthChange(null);}});// Listen for login/logout\nconst{data:listener}=supabase.auth.onAuthStateChange((_event,session)=>{if(session!==null&&session!==void 0&&session.user){setUser({id:session.user.id,email:session.user.email||'',avatar_url:session.user.user_metadata.avatar_url,full_name:session.user.user_metadata.full_name});onAuthChange({id:session.user.id,email:session.user.email||'',avatar_url:session.user.user_metadata.avatar_url,full_name:session.user.user_metadata.full_name});}else{setUser(null);onAuthChange(null);}});return()=>{listener===null||listener===void 0?void 0:listener.subscription.unsubscribe();};},[onAuthChange]);const handleLogin=async()=>{await supabase.auth.signInWithOAuth({provider:'google'});};const handleLogout=async()=>{await supabase.auth.signOut();};return/*#__PURE__*/_jsx(AppBar,{position:\"static\",color:\"transparent\",elevation:0,children:/*#__PURE__*/_jsxs(Toolbar,{sx:{justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexGrow:1},children:\"AI Task Manager\"}),user?/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[user.avatar_url&&/*#__PURE__*/_jsx(Avatar,{src:user.avatar_url,alt:user.full_name}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:user.full_name||user.email}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleLogout,color:\"secondary\",children:\"Logout\"})]}):/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleLogin,color:\"primary\",children:\"Sign in with Google\"})]})});};export default AuthHeader;","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","Button","Avatar","Box","supabase","jsx","_jsx","jsxs","_jsxs","AuthHeader","_ref","onAuthChange","user","setUser","session","auth","getSession","then","_ref2","data","id","email","avatar_url","user_metadata","full_name","listener","onAuthStateChange","_event","subscription","unsubscribe","handleLogin","signInWithOAuth","provider","handleLogout","signOut","position","color","elevation","children","sx","justifyContent","variant","flexGrow","display","alignItems","gap","src","alt","onClick"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/AuthHeader.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, Avatar, Box } from '@mui/material';\nimport { supabase } from '../services/supabaseClient';\n\ninterface UserInfo {\n  id: string; // Supabase UUID\n  email: string;\n  avatar_url?: string;\n  full_name?: string;\n}\n\nconst AuthHeader: React.FC<{\n  onAuthChange: (user: UserInfo | null) => void;\n}> = ({ onAuthChange }) => {\n  const [user, setUser] = useState<UserInfo | null>(null);\n\n  useEffect(() => {\n    // Check for existing session\n    const session = supabase.auth.getSession().then(({ data: { session } }) => {\n      if (session?.user) {\n        setUser({\n          id: session.user.id,\n          email: session.user.email || '',\n          avatar_url: session.user.user_metadata.avatar_url,\n          full_name: session.user.user_metadata.full_name,\n        });\n        onAuthChange({\n          id: session.user.id,\n          email: session.user.email || '',\n          avatar_url: session.user.user_metadata.avatar_url,\n          full_name: session.user.user_metadata.full_name,\n        });\n      } else {\n        setUser(null);\n        onAuthChange(null);\n      }\n    });\n    // Listen for login/logout\n    const { data: listener } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (session?.user) {\n        setUser({\n          id: session.user.id,\n          email: session.user.email || '',\n          avatar_url: session.user.user_metadata.avatar_url,\n          full_name: session.user.user_metadata.full_name,\n        });\n        onAuthChange({\n          id: session.user.id,\n          email: session.user.email || '',\n          avatar_url: session.user.user_metadata.avatar_url,\n          full_name: session.user.user_metadata.full_name,\n        });\n      } else {\n        setUser(null);\n        onAuthChange(null);\n      }\n    });\n    return () => {\n      listener?.subscription.unsubscribe();\n    };\n  }, [onAuthChange]);\n\n  const handleLogin = async () => {\n    await supabase.auth.signInWithOAuth({ provider: 'google' });\n  };\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n      <Toolbar sx={{ justifyContent: 'space-between' }}>\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n          AI Task Manager\n        </Typography>\n        {user ? (\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            {user.avatar_url && <Avatar src={user.avatar_url} alt={user.full_name} />}\n            <Typography variant=\"body1\">{user.full_name || user.email}</Typography>\n            <Button variant=\"outlined\" onClick={handleLogout} color=\"secondary\">Logout</Button>\n          </Box>\n        ) : (\n          <Button variant=\"contained\" onClick={handleLogin} color=\"primary\">Sign in with Google</Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default AuthHeader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}