{"ast":null,"code":"import UKTimeUnitWithinFormatParser from \"./parsers/UKTimeUnitWithinFormatParser.js\";\nimport UKMonthNameLittleEndianParser from \"./parsers/UKMonthNameLittleEndianParser.js\";\nimport UkMonthNameParser from \"./parsers/UKMonthNameParser.js\";\nimport UKTimeExpressionParser from \"./parsers/UKTimeExpressionParser.js\";\nimport UKTimeUnitAgoFormatParser from \"./parsers/UKTimeUnitAgoFormatParser.js\";\nimport UKMergeDateRangeRefiner from \"./refiners/UKMergeDateRangeRefiner.js\";\nimport UKMergeDateTimeRefiner from \"./refiners/UKMergeDateTimeRefiner.js\";\nimport { includeCommonConfiguration } from \"../../configurations.js\";\nimport UKCasualDateParser from \"./parsers/UKCasualDateParser.js\";\nimport UKCasualTimeParser from \"./parsers/UKCasualTimeParser.js\";\nimport UKWeekdayParser from \"./parsers/UKWeekdayParser.js\";\nimport UKRelativeDateFormatParser from \"./parsers/UKRelativeDateFormatParser.js\";\nimport { Chrono } from \"../../chrono.js\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results.js\";\nimport { Meridiem, Weekday } from \"../../types.js\";\nimport SlashDateFormatParser from \"../../common/parsers/SlashDateFormatParser.js\";\nimport UKTimeUnitCasualRelativeFormatParser from \"./parsers/UKTimeUnitCasualRelativeFormatParser.js\";\nimport ISOFormatParser from \"../../common/parsers/ISOFormatParser.js\";\nexport { Chrono, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Meridiem, Weekday };\nexport const casual = new Chrono(createCasualConfiguration());\nexport const strict = new Chrono(createConfiguration(true));\nexport function createCasualConfiguration() {\n  const option = createConfiguration(false);\n  option.parsers.unshift(new UKCasualDateParser());\n  option.parsers.unshift(new UKCasualTimeParser());\n  option.parsers.unshift(new UkMonthNameParser());\n  option.parsers.unshift(new UKRelativeDateFormatParser());\n  option.parsers.unshift(new UKTimeUnitCasualRelativeFormatParser());\n  return option;\n}\nexport function createConfiguration(strictMode) {\n  return includeCommonConfiguration({\n    parsers: [new ISOFormatParser(), new SlashDateFormatParser(true), new UKTimeUnitWithinFormatParser(), new UKMonthNameLittleEndianParser(), new UKWeekdayParser(), new UKTimeExpressionParser(strictMode), new UKTimeUnitAgoFormatParser()],\n    refiners: [new UKMergeDateTimeRefiner(), new UKMergeDateRangeRefiner()]\n  }, strictMode);\n}\nexport function parse(text, ref, option) {\n  return casual.parse(text, ref, option);\n}\nexport function parseDate(text, ref, option) {\n  return casual.parseDate(text, ref, option);\n}","map":{"version":3,"names":["UKTimeUnitWithinFormatParser","UKMonthNameLittleEndianParser","UkMonthNameParser","UKTimeExpressionParser","UKTimeUnitAgoFormatParser","UKMergeDateRangeRefiner","UKMergeDateTimeRefiner","includeCommonConfiguration","UKCasualDateParser","UKCasualTimeParser","UKWeekdayParser","UKRelativeDateFormatParser","Chrono","ParsingResult","ParsingComponents","ReferenceWithTimezone","Meridiem","Weekday","SlashDateFormatParser","UKTimeUnitCasualRelativeFormatParser","ISOFormatParser","casual","createCasualConfiguration","strict","createConfiguration","option","parsers","unshift","strictMode","refiners","parse","text","ref","parseDate"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/uk/index.ts"],"sourcesContent":["/**\n * Chrono components for Ukrainian support (*parsers*, *refiners*, and *configuration*)\n *\n * @module\n */\n\nimport UKTimeUnitWithinFormatParser from \"./parsers/UKTimeUnitWithinFormatParser\";\nimport UKMonthNameLittleEndianParser from \"./parsers/UKMonthNameLittleEndianParser\";\nimport UkMonthNameParser from \"./parsers/UKMonthNameParser\";\nimport UKTimeExpressionParser from \"./parsers/UKTimeExpressionParser\";\nimport UKTimeUnitAgoFormatParser from \"./parsers/UKTimeUnitAgoFormatParser\";\nimport UKMergeDateRangeRefiner from \"./refiners/UKMergeDateRangeRefiner\";\nimport UKMergeDateTimeRefiner from \"./refiners/UKMergeDateTimeRefiner\";\n\nimport { includeCommonConfiguration } from \"../../configurations\";\nimport UKCasualDateParser from \"./parsers/UKCasualDateParser\";\nimport UKCasualTimeParser from \"./parsers/UKCasualTimeParser\";\nimport UKWeekdayParser from \"./parsers/UKWeekdayParser\";\nimport UKRelativeDateFormatParser from \"./parsers/UKRelativeDateFormatParser\";\n\nimport { Chrono, Configuration, Parser, Refiner } from \"../../chrono\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results\";\nimport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday } from \"../../types\";\nimport SlashDateFormatParser from \"../../common/parsers/SlashDateFormatParser\";\nimport UKTimeUnitCasualRelativeFormatParser from \"./parsers/UKTimeUnitCasualRelativeFormatParser\";\nimport ISOFormatParser from \"../../common/parsers/ISOFormatParser\";\n\nexport { Chrono, Parser, Refiner, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday };\n\n/**\n * Chrono object configured for parsing *casual* Ukrainian\n */\nexport const casual = new Chrono(createCasualConfiguration());\n\n/**\n * Chrono object configured for parsing *strict* Ukrainian\n */\nexport const strict = new Chrono(createConfiguration(true));\n\n/**\n * Create a default *casual* {@Link Configuration} for Ukrainian chrono.\n * It calls {@Link createConfiguration} and includes additional parsers.\n */\nexport function createCasualConfiguration(): Configuration {\n    const option = createConfiguration(false);\n    option.parsers.unshift(new UKCasualDateParser());\n    option.parsers.unshift(new UKCasualTimeParser());\n    option.parsers.unshift(new UkMonthNameParser());\n    option.parsers.unshift(new UKRelativeDateFormatParser());\n    option.parsers.unshift(new UKTimeUnitCasualRelativeFormatParser());\n    return option;\n}\n\n/**\n * Create a default {@Link Configuration} for Ukrainian chrono\n *\n * @param strictMode If the timeunit mentioning should be strict, not casual\n */\nexport function createConfiguration(strictMode: boolean): Configuration {\n    return includeCommonConfiguration(\n        {\n            parsers: [\n                new ISOFormatParser(),\n                new SlashDateFormatParser(true),\n                new UKTimeUnitWithinFormatParser(),\n                new UKMonthNameLittleEndianParser(),\n                new UKWeekdayParser(),\n                new UKTimeExpressionParser(strictMode),\n                new UKTimeUnitAgoFormatParser(),\n            ],\n            refiners: [new UKMergeDateTimeRefiner(), new UKMergeDateRangeRefiner()],\n        },\n        strictMode\n    );\n}\n\n/**\n * A shortcut for uk.casual.parse()\n */\nexport function parse(text: string, ref?: ParsingReference | Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\n/**\n * A shortcut for uk.casual.parseDate()\n */\nexport function parseDate(text: string, ref?: ParsingReference | Date, option?: ParsingOption): Date {\n    return casual.parseDate(text, ref, option);\n}\n"],"mappings":"AAMA,OAAOA,4BAA4B,MAAM,2CAAyC;AAClF,OAAOC,6BAA6B,MAAM,4CAA0C;AACpF,OAAOC,iBAAiB,MAAM,gCAA8B;AAC5D,OAAOC,sBAAsB,MAAM,qCAAmC;AACtE,OAAOC,yBAAyB,MAAM,wCAAsC;AAC5E,OAAOC,uBAAuB,MAAM,uCAAqC;AACzE,OAAOC,sBAAsB,MAAM,sCAAoC;AAEvE,SAASC,0BAA0B,QAAQ,yBAAuB;AAClE,OAAOC,kBAAkB,MAAM,iCAA+B;AAC9D,OAAOC,kBAAkB,MAAM,iCAA+B;AAC9D,OAAOC,eAAe,MAAM,8BAA4B;AACxD,OAAOC,0BAA0B,MAAM,yCAAuC;AAE9E,SAASC,MAAM,QAAwC,iBAAe;AACtE,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,kBAAgB;AACxF,SAAmEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAc;AAC1G,OAAOC,qBAAqB,MAAM,+CAA6C;AAC/E,OAAOC,oCAAoC,MAAM,mDAAiD;AAClG,OAAOC,eAAe,MAAM,yCAAuC;AAEnE,SAASR,MAAM,EAAmBC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB;AACzF,SAAmEC,QAAQ,EAAEC,OAAO;AAKpF,OAAO,MAAMI,MAAM,GAAG,IAAIT,MAAM,CAACU,yBAAyB,EAAE,CAAC;AAK7D,OAAO,MAAMC,MAAM,GAAG,IAAIX,MAAM,CAACY,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAM3D,OAAM,SAAUF,yBAAyBA,CAAA;EACrC,MAAMG,MAAM,GAAGD,mBAAmB,CAAC,KAAK,CAAC;EACzCC,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,IAAInB,kBAAkB,EAAE,CAAC;EAChDiB,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,IAAIlB,kBAAkB,EAAE,CAAC;EAChDgB,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,IAAIzB,iBAAiB,EAAE,CAAC;EAC/CuB,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,IAAIhB,0BAA0B,EAAE,CAAC;EACxDc,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,IAAIR,oCAAoC,EAAE,CAAC;EAClE,OAAOM,MAAM;AACjB;AAOA,OAAM,SAAUD,mBAAmBA,CAACI,UAAmB;EACnD,OAAOrB,0BAA0B,CAC7B;IACImB,OAAO,EAAE,CACL,IAAIN,eAAe,EAAE,EACrB,IAAIF,qBAAqB,CAAC,IAAI,CAAC,EAC/B,IAAIlB,4BAA4B,EAAE,EAClC,IAAIC,6BAA6B,EAAE,EACnC,IAAIS,eAAe,EAAE,EACrB,IAAIP,sBAAsB,CAACyB,UAAU,CAAC,EACtC,IAAIxB,yBAAyB,EAAE,CAClC;IACDyB,QAAQ,EAAE,CAAC,IAAIvB,sBAAsB,EAAE,EAAE,IAAID,uBAAuB,EAAE;GACzE,EACDuB,UAAU,CACb;AACL;AAKA,OAAM,SAAUE,KAAKA,CAACC,IAAY,EAAEC,GAA6B,EAAEP,MAAsB;EACrF,OAAOJ,MAAM,CAACS,KAAK,CAACC,IAAI,EAAEC,GAAG,EAAEP,MAAM,CAAC;AAC1C;AAKA,OAAM,SAAUQ,SAASA,CAACF,IAAY,EAAEC,GAA6B,EAAEP,MAAsB;EACzF,OAAOJ,MAAM,CAACY,SAAS,CAACF,IAAI,EAAEC,GAAG,EAAEP,MAAM,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}