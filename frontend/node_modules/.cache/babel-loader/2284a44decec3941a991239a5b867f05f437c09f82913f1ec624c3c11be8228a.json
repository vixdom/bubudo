{"ast":null,"code":"import { parseTimeUnits, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { reverseTimeUnits } from \"../../../utils/timeunits.js\";\nconst PATTERN = new RegExp(\"\" + \"(\" + TIME_UNITS_PATTERN + \")\" + \"(?:geleden|voor|eerder)(?=(?:\\\\W|$))\", \"i\");\nconst STRICT_PATTERN = new RegExp(\"\" + \"(\" + TIME_UNITS_PATTERN + \")\" + \"geleden(?=(?:\\\\W|$))\", \"i\");\nexport default class NLTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n  constructor(strictMode) {\n    super();\n    this.strictMode = strictMode;\n  }\n  innerPattern() {\n    return this.strictMode ? STRICT_PATTERN : PATTERN;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseTimeUnits(match[1]);\n    const outputTimeUnits = reverseTimeUnits(timeUnits);\n    return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n  }\n}","map":{"version":3,"names":["parseTimeUnits","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","reverseTimeUnits","PATTERN","RegExp","STRICT_PATTERN","NLTimeUnitAgoFormatParser","constructor","strictMode","innerPattern","innerExtract","context","match","timeUnits","outputTimeUnits","createRelativeFromReference","reference"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/nl/parsers/NLTimeUnitAgoFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseTimeUnits, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { reverseTimeUnits } from \"../../../utils/timeunits\";\n\nconst PATTERN = new RegExp(\"\" + \"(\" + TIME_UNITS_PATTERN + \")\" + \"(?:geleden|voor|eerder)(?=(?:\\\\W|$))\", \"i\");\n\nconst STRICT_PATTERN = new RegExp(\"\" + \"(\" + TIME_UNITS_PATTERN + \")\" + \"geleden(?=(?:\\\\W|$))\", \"i\");\n\nexport default class NLTimeUnitAgoFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private strictMode: boolean) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const timeUnits = parseTimeUnits(match[1]);\n        const outputTimeUnits = reverseTimeUnits(timeUnits);\n\n        return ParsingComponents.createRelativeFromReference(context.reference, outputTimeUnits);\n    }\n}\n"],"mappings":"AACA,SAASA,cAAc,EAAEC,kBAAkB,QAAQ,iBAAe;AAClE,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,gBAAgB,QAAQ,6BAA2B;AAE5D,MAAMC,OAAO,GAAG,IAAIC,MAAM,CAAC,EAAE,GAAG,GAAG,GAAGL,kBAAkB,GAAG,GAAG,GAAG,sCAAsC,EAAE,GAAG,CAAC;AAE7G,MAAMM,cAAc,GAAG,IAAID,MAAM,CAAC,EAAE,GAAG,GAAG,GAAGL,kBAAkB,GAAG,GAAG,GAAG,sBAAsB,EAAE,GAAG,CAAC;AAEpG,eAAc,MAAOO,yBAA0B,SAAQL,sCAAsC;EACzFM,YAAoBC,UAAmB;IACnC,KAAK,EAAE;IADS,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACD,UAAU,GAAGH,cAAc,GAAGF,OAAO;EACrD;EAEAO,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,SAAS,GAAGf,cAAc,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1C,MAAME,eAAe,GAAGZ,gBAAgB,CAACW,SAAS,CAAC;IAEnD,OAAOb,iBAAiB,CAACe,2BAA2B,CAACJ,OAAO,CAACK,SAAS,EAAEF,eAAe,CAAC;EAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}