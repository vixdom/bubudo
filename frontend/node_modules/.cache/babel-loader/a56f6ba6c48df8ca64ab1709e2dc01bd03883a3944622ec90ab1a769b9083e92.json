{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab, AppBar, Toolbar, Paper } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport { themes } from './theme';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nconst themeKeys = ['sunbeam', 'fresh', 'night'];\nimport { deleteUserTasksById } from './services/supabaseTasksService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // ...all hooks and logic above...\n\n  // Set browser tab title\n  useEffect(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n  const [tasks, setTasks] = useState([]);\n  const [promptSelection, setPromptSelection] = useState('A');\n  const [user, setUser] = useState(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored)) return stored;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n  const handleTabChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter(task => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map(task => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async taskData => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => {\n        var _st$completed;\n        return {\n          ...st,\n          completed: (_st$completed = st.completed) !== null && _st$completed !== void 0 ? _st$completed : false\n        };\n      })\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal = {\n      ...newTaskForSupabase,\n      id: tempId\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({\n          id,\n          ...rest\n        }) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async taskId => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({\n            ...sub,\n            completed: newCompletedStatus\n          }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId, subTaskId, newText) => {\n    setTasks(prev => prev.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.map(sub => sub.id === subTaskId ? {\n            ...sub,\n            text: newText\n          } : sub)\n        };\n      }\n      return task;\n    }));\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, tasks);\n      } catch (err) {\n        console.error('Failed to sync edited subtask:', err);\n      }\n    }\n  };\n\n  // Handler to toggle a subtask\n  const handleToggleSubTask = async (taskId, subTaskId) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.map(sub => sub.id === subTaskId ? {\n            ...sub,\n            completed: !sub.completed\n          } : sub)\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle:', err);\n      }\n    }\n  };\n\n  // Theme switcher handlers\n  const handleThemeClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => {\n    setAnchorEl(null);\n  };\n  const handleThemeSelect = key => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId, subTaskId) => {\n    setTasks(prev => prev.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.filter(sub => sub.id !== subTaskId)\n        };\n      }\n      return task;\n    }));\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, tasks);\n      } catch (err) {\n        console.error('Failed to sync deleted subtask:', err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        color: \"primary\",\n        sx: {\n          borderRadius: 0,\n          boxShadow: '0 2px 8px 0 rgba(0,0,0,0.05)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            minHeight: 64\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"primary.contrastText\",\n              sx: {\n                fontWeight: 700,\n                fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n              },\n              children: \"TaskFlow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"Theme switcher\",\n              onClick: handleThemeClick,\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"theme\",\n                children: \"\\uD83C\\uDFA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                ml: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"primary.contrastText\",\n                sx: {\n                  mr: 1\n                },\n                children: \"Prompt:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: promptSelection,\n                onChange: e => setPromptSelection(e.target.value),\n                style: {\n                  padding: '4px 8px',\n                  borderRadius: 8,\n                  border: '1px solid #ccc',\n                  fontSize: 14,\n                  background: 'inherit',\n                  color: 'inherit',\n                  outline: 'none',\n                  cursor: 'pointer'\n                },\n                \"aria-label\": \"Select prompt version\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"A\",\n                  children: \"Prompt A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"B\",\n                  children: \"Prompt B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Popover, {\n              open: Boolean(anchorEl),\n              anchorEl: anchorEl,\n              onClose: handleThemeClose,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              PaperProps: {\n                sx: {\n                  p: 2,\n                  borderRadius: 8\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: Object.keys(themes).map(key => /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    cursor: 'pointer',\n                    p: 1,\n                    borderRadius: 2,\n                    mb: 1,\n                    bgcolor: themes[key].theme.palette.mode === currentTheme.palette.mode ? 'primary.light' : 'transparent',\n                    '&:hover': {\n                      bgcolor: 'primary.lighter'\n                    }\n                  },\n                  onClick: () => handleThemeSelect(key),\n                  children: themes[key].name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), user && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                ml: 1\n              },\n              children: [user.avatar_url && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.avatar_url,\n                alt: user.full_name,\n                style: {\n                  width: 32,\n                  height: 32,\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                  marginRight: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"primary.contrastText\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: user.full_name || user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                size: \"small\",\n                color: \"secondary\",\n                sx: {\n                  ml: 1,\n                  borderRadius: 8\n                },\n                onClick: async () => {\n                  await import('./services/supabaseClient').then(({\n                    supabase\n                  }) => supabase.auth.signOut());\n                  setUser(null);\n                },\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: 'background.default',\n          minHeight: '100vh',\n          pt: 10,\n          pb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          sx: {\n            px: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 3,\n              borderRadius: 8,\n              mb: 3,\n              bgcolor: 'background.paper',\n              boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)'\n            },\n            children: /*#__PURE__*/_jsxDEV(AddTaskForm, {\n              onAddTask: addTask,\n              currentPrompt: promptSelection,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              borderRadius: 8,\n              p: 2,\n              bgcolor: 'background.paper',\n              boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tabs, {\n              value: tab,\n              onChange: handleTabChange,\n              variant: \"fullWidth\",\n              sx: {\n                mb: 2,\n                borderRadius: 8,\n                minHeight: 48\n              },\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                label: \"To Do\",\n                sx: {\n                  fontWeight: 600,\n                  fontSize: 16,\n                  fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                label: \"My Accomplishments\",\n                sx: {\n                  fontWeight: 600,\n                  fontSize: 16,\n                  fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), tab === 0 && /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: incompleteTasks,\n              onToggleTask: handleToggleTask,\n              onToggleSubTask: handleToggleSubTask,\n              onDeleteTask: handleDeleteTask,\n              onDeleteSubTask: handleDeleteSubTask,\n              onEditSubTask: handleEditSubTask,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), tab === 1 && /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: completedTasks,\n              onToggleTask: handleToggleTask,\n              onToggleSubTask: handleToggleSubTask,\n              onDeleteTask: handleDeleteTask,\n              onDeleteSubTask: handleDeleteSubTask,\n              onEditSubTask: handleEditSubTask,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: mergeNotice,\n        autoHideDuration: 4000,\n        onClose: () => setMergeNotice(false),\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setMergeNotice(false),\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: \"Local tasks have been uploaded and merged with your account!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: deleteNotice,\n        autoHideDuration: 3000,\n        onClose: () => setDeleteNotice(false),\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setDeleteNotice(false),\n          severity: \"info\",\n          sx: {\n            width: '100%'\n          },\n          children: \"Task deleted!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2p0cQlmHGUXsFB7rsjD8MLKZQIE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","Snackbar","Alert","ThemeProvider","CssBaseline","Tabs","Tab","AppBar","Toolbar","Paper","TaskList","AddTaskForm","fetchUserTasks","upsertUserTasks","themes","Popover","IconButton","APP_VERSION","themeKeys","deleteUserTasksById","jsxDEV","_jsxDEV","App","_s","document","title","tasks","setTasks","promptSelection","setPromptSelection","user","setUser","mergeNotice","setMergeNotice","tab","setTab","deleteNotice","setDeleteNotice","themeKey","setThemeKey","stored","localStorage","getItem","includes","anchorEl","setAnchorEl","currentTheme","theme","setItem","handleTabChange","_event","newValue","incompleteTasks","filter","t","completed","completedTasks","storedTasks","parsedTasks","JSON","parse","tasksWithDates","map","task","dueDate","Date","console","log","error","handleDeleteTask","taskId","prev","id","tasksArr","stringify","err","tasksToStore","toISOString","doSync","cloudTasks","localTasks","cloudIds","Set","newLocalTasks","has","mergedTasks","length","removeItem","addTask","taskData","newTaskForSupabase","subTasks","st","_st$completed","tempId","now","toString","Math","random","substring","newTaskForLocal","updatedTasks","tasksForSupabase","rest","handleToggleTask","updated","newCompletedStatus","sub","handleEditSubTask","subTaskId","newText","text","handleToggleSubTask","handleThemeClick","event","currentTarget","handleThemeClose","handleThemeSelect","key","handleDeleteSubTask","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","position","color","sx","borderRadius","boxShadow","display","justifyContent","alignItems","minHeight","gap","variant","fontWeight","fontFamily","onClick","ml","role","mr","value","onChange","e","target","style","padding","border","fontSize","background","outline","cursor","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","Object","keys","mb","bgcolor","palette","mode","name","avatar_url","src","alt","full_name","width","height","objectFit","marginRight","email","size","then","supabase","auth","signOut","pt","pb","maxWidth","px","elevation","onAddTask","currentPrompt","label","onToggleTask","onToggleSubTask","onDeleteTask","onDeleteSubTask","onEditSubTask","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab, AppBar, Toolbar, Paper } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AuthHeader from './components/AuthHeader';\nimport { TaskWithSubTasks, SubTask, PromptSelection } from './services/geminiService';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport theme, { themes } from './theme';\nimport { createTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nexport interface Task { // Base Task interface (for potential future use without subtasks)\n  id: string;\n  title: string;\n  completed: boolean;\n}\n\ntype ThemeKey = 'sunbeam' | 'fresh' | 'night';\nconst themeKeys: ThemeKey[] = ['sunbeam', 'fresh', 'night'];\n\nimport { deleteUserTasks, deleteUserTasksById } from './services/supabaseTasksService';\n\nconst App: React.FC = () => {\n  // ...all hooks and logic above...\n\n  // Set browser tab title\n  useEffect(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n\n  const [tasks, setTasks] = useState<TaskWithSubTasks[]>([]);\n  const [promptSelection, setPromptSelection] = useState<PromptSelection>('A');\n  const [user, setUser] = useState<any>(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState<ThemeKey>(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored as ThemeKey)) return stored as ThemeKey;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTab(newValue);\n  };\n\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks: TaskWithSubTasks[] = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async (taskId: string) => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter((task: any) => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks: TaskWithSubTasks[] = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks: TaskWithSubTasks[] = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map((task: any) => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async (taskData: Omit<TaskWithSubTasks, 'id' | 'completed'>) => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => ({...st, completed: st.completed ?? false }))\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal: TaskWithSubTasks = {\n      ...newTaskForSupabase,\n      id: tempId,\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({id, ...rest}) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async (taskId: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({ ...sub, completed: newCompletedStatus }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId: string, subTaskId: string | number, newText: string) => {\n    setTasks(prev => prev.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.map(sub => sub.id === subTaskId ? { ...sub, text: newText } : sub)\n        };\n      }\n      return task;\n    }));\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, tasks);\n      } catch (err) {\n        console.error('Failed to sync edited subtask:', err);\n      }\n    }\n  };\n\n  // Handler to toggle a subtask\n  const handleToggleSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.map(sub => sub.id === subTaskId ? { ...sub, completed: !sub.completed } : sub)\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle:', err);\n      }\n    }\n  };\n\n  // Theme switcher handlers\n  const handleThemeClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => {\n    setAnchorEl(null);\n  };\n  const handleThemeSelect = (key: ThemeKey) => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId: string, subTaskId: string | number) => {\n    setTasks(prev => prev.map(task => {\n      if (task.id === taskId) {\n        return {\n          ...task,\n          subTasks: task.subTasks.filter(sub => sub.id !== subTaskId)\n        };\n      }\n      return task;\n    }));\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, tasks);\n      } catch (err) {\n        console.error('Failed to sync deleted subtask:', err);\n      }\n    }\n  };\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      <React.Fragment>\n        <AppBar position=\"fixed\" color=\"primary\" sx={{ borderRadius: 0, boxShadow: '0 2px 8px 0 rgba(0,0,0,0.05)' }}>\n          <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', minHeight: 64 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n              <Typography variant=\"h6\" color=\"primary.contrastText\" sx={{ fontWeight: 700, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }}>\n                TaskFlow\n              </Typography>\n              <IconButton\n                aria-label=\"Theme switcher\"\n                onClick={handleThemeClick}\n                sx={{ ml: 1 }}\n              >\n                <span role=\"img\" aria-label=\"theme\">🎨</span>\n              </IconButton>\n\n              <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>\n                <Typography variant=\"body2\" color=\"primary.contrastText\" sx={{ mr: 1 }}>\n                  Prompt:\n                </Typography>\n                <select\n                  value={promptSelection}\n                  onChange={e => setPromptSelection(e.target.value as 'A' | 'B')}\n                  style={{\n                    padding: '4px 8px',\n                    borderRadius: 8,\n                    border: '1px solid #ccc',\n                    fontSize: 14,\n                    background: 'inherit',\n                    color: 'inherit',\n                    outline: 'none',\n                    cursor: 'pointer'\n                  }}\n                  aria-label=\"Select prompt version\"\n                >\n                  <option value=\"A\">Prompt A</option>\n                  <option value=\"B\">Prompt B</option>\n                </select>\n              </Box>\n              <Popover\n                open={Boolean(anchorEl)}\n                anchorEl={anchorEl}\n                onClose={handleThemeClose}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                PaperProps={{ sx: { p: 2, borderRadius: 8 } }}\n              >\n                <Box>\n                  {Object.keys(themes).map((key) => (\n                    <Typography\n                      key={key}\n                      variant=\"body2\"\n                      sx={{ cursor: 'pointer', p: 1, borderRadius: 2, mb: 1, bgcolor: themes[key as ThemeKey].theme.palette.mode === currentTheme.palette.mode ? 'primary.light' : 'transparent', '&:hover': { bgcolor: 'primary.lighter' } }}\n                      onClick={() => handleThemeSelect(key as ThemeKey)}\n                    >\n                      {themes[key as ThemeKey].name}\n                    </Typography>\n                  ))}\n                </Box>\n              </Popover>\n              {/* User Info */}\n              {user && (\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, ml: 1 }}>\n                  {user.avatar_url && <img src={user.avatar_url} alt={user.full_name} style={{ width: 32, height: 32, borderRadius: '50%', objectFit: 'cover', marginRight: 4 }} />}\n                  <Typography variant=\"body2\" color=\"primary.contrastText\" sx={{ fontWeight: 500 }}>{user.full_name || user.email}</Typography>\n                  <Button variant=\"contained\" size=\"small\" color=\"secondary\" sx={{ ml: 1, borderRadius: 8 }} onClick={async () => { await import('./services/supabaseClient').then(({ supabase }) => supabase.auth.signOut()); setUser(null); }}>Logout</Button>\n                </Box>\n              )}\n            </Box>\n          </Toolbar>\n        </AppBar>\n        {/* Main Content below AppBar */}\n        <Box sx={{ bgcolor: 'background.default', minHeight: '100vh', pt: 10, pb: 4 }}>\n          <Container maxWidth=\"sm\" sx={{ px: 0 }}>\n            {/* Add Task Form */}\n            <Paper elevation={2} sx={{ p: 3, borderRadius: 8, mb: 3, bgcolor: 'background.paper', boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)' }}>\n              <AddTaskForm onAddTask={addTask} currentPrompt={promptSelection} user={user} />\n            </Paper>\n            {/* Tabs and Task Lists */}\n            <Paper elevation={2} sx={{ borderRadius: 8, p: 2, bgcolor: 'background.paper', boxShadow: '0 2px 12px 0 rgba(0,0,0,0.06)' }}>\n              <Tabs value={tab} onChange={handleTabChange} variant=\"fullWidth\" sx={{ mb: 2, borderRadius: 8, minHeight: 48 }}>\n                <Tab label=\"To Do\" sx={{ fontWeight: 600, fontSize: 16, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }} />\n                <Tab label=\"My Accomplishments\" sx={{ fontWeight: 600, fontSize: 16, fontFamily: 'SF Pro Display, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif' }} />\n              </Tabs>\n              {tab === 0 && (\n                <TaskList \n                  tasks={incompleteTasks} \n                  onToggleTask={handleToggleTask} \n                  onToggleSubTask={handleToggleSubTask} \n                  onDeleteTask={handleDeleteTask}\n                  onDeleteSubTask={handleDeleteSubTask}\n                  onEditSubTask={handleEditSubTask}\n                  user={user} \n                />\n              )}\n              {tab === 1 && (\n                <TaskList \n                  tasks={completedTasks} \n                  onToggleTask={handleToggleTask} \n                  onToggleSubTask={handleToggleSubTask} \n                  onDeleteTask={handleDeleteTask}\n                  onDeleteSubTask={handleDeleteSubTask}\n                  onEditSubTask={handleEditSubTask}\n                  user={user} \n                />\n              )}\n            </Paper>\n          </Container>\n        </Box>\n        <Snackbar open={mergeNotice} autoHideDuration={4000} onClose={() => setMergeNotice(false)} anchorOrigin={{vertical:'top',horizontal:'center'}}>\n          <Alert onClose={() => setMergeNotice(false)} severity=\"success\" sx={{ width: '100%' }}>\n            Local tasks have been uploaded and merged with your account!\n          </Alert>\n        </Snackbar>\n        <Snackbar open={deleteNotice} autoHideDuration={3000} onClose={() => setDeleteNotice(false)} anchorOrigin={{vertical:'bottom',horizontal:'center'}}>\n          <Alert onClose={() => setDeleteNotice(false)} severity=\"info\" sx={{ width: '100%' }}>\n            Task deleted!\n          </Alert>\n        </Snackbar>\n      </React.Fragment>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}