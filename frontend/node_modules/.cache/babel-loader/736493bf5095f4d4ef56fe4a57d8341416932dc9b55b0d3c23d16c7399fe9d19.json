{"ast":null,"code":"import { Weekday } from \"../../types.js\";\nimport { ParsingComponents } from \"../../results.js\";\nimport { addImpliedTimeUnits } from \"../../utils/timeunits.js\";\nexport function createParsingComponentsAtWeekday(reference, weekday, modifier) {\n  const refDate = reference.getDateWithAdjustedTimezone();\n  const daysToWeekday = getDaysToWeekday(refDate, weekday, modifier);\n  let components = new ParsingComponents(reference);\n  components = addImpliedTimeUnits(components, {\n    \"day\": daysToWeekday\n  });\n  components.assign(\"weekday\", weekday);\n  return components;\n}\nexport function getDaysToWeekday(refDate, weekday, modifier) {\n  const refWeekday = refDate.getDay();\n  switch (modifier) {\n    case \"this\":\n      return getDaysForwardToWeekday(refDate, weekday);\n    case \"last\":\n      return getBackwardDaysToWeekday(refDate, weekday);\n    case \"next\":\n      if (refWeekday == Weekday.SUNDAY) {\n        return weekday == Weekday.SUNDAY ? 7 : weekday;\n      }\n      if (refWeekday == Weekday.SATURDAY) {\n        if (weekday == Weekday.SATURDAY) return 7;\n        if (weekday == Weekday.SUNDAY) return 8;\n        return 1 + weekday;\n      }\n      if (weekday < refWeekday && weekday != Weekday.SUNDAY) {\n        return getDaysForwardToWeekday(refDate, weekday);\n      } else {\n        return getDaysForwardToWeekday(refDate, weekday) + 7;\n      }\n  }\n  return getDaysToWeekdayClosest(refDate, weekday);\n}\nexport function getDaysToWeekdayClosest(refDate, weekday) {\n  const backward = getBackwardDaysToWeekday(refDate, weekday);\n  const forward = getDaysForwardToWeekday(refDate, weekday);\n  return forward < -backward ? forward : backward;\n}\nexport function getDaysForwardToWeekday(refDate, weekday) {\n  const refWeekday = refDate.getDay();\n  let forwardCount = weekday - refWeekday;\n  if (forwardCount < 0) {\n    forwardCount += 7;\n  }\n  return forwardCount;\n}\nexport function getBackwardDaysToWeekday(refDate, weekday) {\n  const refWeekday = refDate.getDay();\n  let backwardCount = weekday - refWeekday;\n  if (backwardCount >= 0) {\n    backwardCount -= 7;\n  }\n  return backwardCount;\n}","map":{"version":3,"names":["Weekday","ParsingComponents","addImpliedTimeUnits","createParsingComponentsAtWeekday","reference","weekday","modifier","refDate","getDateWithAdjustedTimezone","daysToWeekday","getDaysToWeekday","components","assign","refWeekday","getDay","getDaysForwardToWeekday","getBackwardDaysToWeekday","SUNDAY","SATURDAY","getDaysToWeekdayClosest","backward","forward","forwardCount","backwardCount"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/common/calculation/weekdays.ts"],"sourcesContent":["import { Weekday } from \"../../types\";\nimport { ParsingComponents, ReferenceWithTimezone } from \"../../results\";\nimport { addImpliedTimeUnits } from \"../../utils/timeunits\";\n\n/**\n * Returns the parsing components at the weekday (considering the modifier). The time and timezone is assume to be\n * similar to the reference.\n * @param reference\n * @param weekday\n * @param modifier \"this\", \"next\", \"last\" modifier word. If empty, returns the weekday closest to the `refDate`.\n */\nexport function createParsingComponentsAtWeekday(\n    reference: ReferenceWithTimezone,\n    weekday: Weekday,\n    modifier?: \"this\" | \"next\" | \"last\"\n): ParsingComponents {\n    const refDate = reference.getDateWithAdjustedTimezone();\n    const daysToWeekday = getDaysToWeekday(refDate, weekday, modifier);\n\n    let components = new ParsingComponents(reference);\n    components = addImpliedTimeUnits(components, { \"day\": daysToWeekday });\n    components.assign(\"weekday\", weekday);\n\n    return components;\n}\n\n/**\n * Returns number of days from refDate to the weekday. The refDate date and timezone information is used.\n * @param refDate\n * @param weekday\n * @param modifier \"this\", \"next\", \"last\" modifier word. If empty, returns the weekday closest to the `refDate`.\n */\nexport function getDaysToWeekday(refDate: Date, weekday: Weekday, modifier?: \"this\" | \"next\" | \"last\"): number {\n    const refWeekday = refDate.getDay() as Weekday;\n    switch (modifier) {\n        case \"this\":\n            return getDaysForwardToWeekday(refDate, weekday);\n        case \"last\":\n            return getBackwardDaysToWeekday(refDate, weekday);\n        case \"next\":\n            // From Sunday, the next Sunday is 7 days later.\n            // Otherwise, next Mon is 1 days later, next Tues is 2 days later, and so on..., (return enum value)\n            if (refWeekday == Weekday.SUNDAY) {\n                return weekday == Weekday.SUNDAY ? 7 : weekday;\n            }\n            // From Saturday, the next Saturday is 7 days later, the next Sunday is 8-days later.\n            // Otherwise, next Mon is (1 + 1) days later, next Tues is (1 + 2) days later, and so on...,\n            // (return, 2 + [enum value] days)\n            if (refWeekday == Weekday.SATURDAY) {\n                if (weekday == Weekday.SATURDAY) return 7;\n                if (weekday == Weekday.SUNDAY) return 8;\n                return 1 + weekday;\n            }\n            // From weekdays, next Mon is the following week's Mon, next Tues the following week's Tues, and so on...\n            // If the week's weekday already passed (weekday < refWeekday), we simply count forward to next week\n            // (similar to 'this'). Otherwise, count forward to this week, then add another 7 days.\n            if (weekday < refWeekday && weekday != Weekday.SUNDAY) {\n                return getDaysForwardToWeekday(refDate, weekday);\n            } else {\n                return getDaysForwardToWeekday(refDate, weekday) + 7;\n            }\n    }\n    return getDaysToWeekdayClosest(refDate, weekday);\n}\n\nexport function getDaysToWeekdayClosest(refDate: Date, weekday: Weekday): number {\n    const backward = getBackwardDaysToWeekday(refDate, weekday);\n    const forward = getDaysForwardToWeekday(refDate, weekday);\n\n    return forward < -backward ? forward : backward;\n}\n\nexport function getDaysForwardToWeekday(refDate: Date, weekday: Weekday): number {\n    const refWeekday = refDate.getDay();\n    let forwardCount = weekday - refWeekday;\n    if (forwardCount < 0) {\n        forwardCount += 7;\n    }\n    return forwardCount;\n}\n\nexport function getBackwardDaysToWeekday(refDate: Date, weekday: Weekday): number {\n    const refWeekday = refDate.getDay();\n    let backwardCount = weekday - refWeekday;\n    if (backwardCount >= 0) {\n        backwardCount -= 7;\n    }\n    return backwardCount;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,gBAAc;AACtC,SAASC,iBAAiB,QAA+B,kBAAgB;AACzE,SAASC,mBAAmB,QAAQ,0BAAwB;AAS5D,OAAM,SAAUC,gCAAgCA,CAC5CC,SAAgC,EAChCC,OAAgB,EAChBC,QAAmC;EAEnC,MAAMC,OAAO,GAAGH,SAAS,CAACI,2BAA2B,EAAE;EACvD,MAAMC,aAAa,GAAGC,gBAAgB,CAACH,OAAO,EAAEF,OAAO,EAAEC,QAAQ,CAAC;EAElE,IAAIK,UAAU,GAAG,IAAIV,iBAAiB,CAACG,SAAS,CAAC;EACjDO,UAAU,GAAGT,mBAAmB,CAACS,UAAU,EAAE;IAAE,KAAK,EAAEF;EAAa,CAAE,CAAC;EACtEE,UAAU,CAACC,MAAM,CAAC,SAAS,EAAEP,OAAO,CAAC;EAErC,OAAOM,UAAU;AACrB;AAQA,OAAM,SAAUD,gBAAgBA,CAACH,OAAa,EAAEF,OAAgB,EAAEC,QAAmC;EACjG,MAAMO,UAAU,GAAGN,OAAO,CAACO,MAAM,EAAa;EAC9C,QAAQR,QAAQ;IACZ,KAAK,MAAM;MACP,OAAOS,uBAAuB,CAACR,OAAO,EAAEF,OAAO,CAAC;IACpD,KAAK,MAAM;MACP,OAAOW,wBAAwB,CAACT,OAAO,EAAEF,OAAO,CAAC;IACrD,KAAK,MAAM;MAGP,IAAIQ,UAAU,IAAIb,OAAO,CAACiB,MAAM,EAAE;QAC9B,OAAOZ,OAAO,IAAIL,OAAO,CAACiB,MAAM,GAAG,CAAC,GAAGZ,OAAO;;MAKlD,IAAIQ,UAAU,IAAIb,OAAO,CAACkB,QAAQ,EAAE;QAChC,IAAIb,OAAO,IAAIL,OAAO,CAACkB,QAAQ,EAAE,OAAO,CAAC;QACzC,IAAIb,OAAO,IAAIL,OAAO,CAACiB,MAAM,EAAE,OAAO,CAAC;QACvC,OAAO,CAAC,GAAGZ,OAAO;;MAKtB,IAAIA,OAAO,GAAGQ,UAAU,IAAIR,OAAO,IAAIL,OAAO,CAACiB,MAAM,EAAE;QACnD,OAAOF,uBAAuB,CAACR,OAAO,EAAEF,OAAO,CAAC;OACnD,MAAM;QACH,OAAOU,uBAAuB,CAACR,OAAO,EAAEF,OAAO,CAAC,GAAG,CAAC;;;EAGhE,OAAOc,uBAAuB,CAACZ,OAAO,EAAEF,OAAO,CAAC;AACpD;AAEA,OAAM,SAAUc,uBAAuBA,CAACZ,OAAa,EAAEF,OAAgB;EACnE,MAAMe,QAAQ,GAAGJ,wBAAwB,CAACT,OAAO,EAAEF,OAAO,CAAC;EAC3D,MAAMgB,OAAO,GAAGN,uBAAuB,CAACR,OAAO,EAAEF,OAAO,CAAC;EAEzD,OAAOgB,OAAO,GAAG,CAACD,QAAQ,GAAGC,OAAO,GAAGD,QAAQ;AACnD;AAEA,OAAM,SAAUL,uBAAuBA,CAACR,OAAa,EAAEF,OAAgB;EACnE,MAAMQ,UAAU,GAAGN,OAAO,CAACO,MAAM,EAAE;EACnC,IAAIQ,YAAY,GAAGjB,OAAO,GAAGQ,UAAU;EACvC,IAAIS,YAAY,GAAG,CAAC,EAAE;IAClBA,YAAY,IAAI,CAAC;;EAErB,OAAOA,YAAY;AACvB;AAEA,OAAM,SAAUN,wBAAwBA,CAACT,OAAa,EAAEF,OAAgB;EACpE,MAAMQ,UAAU,GAAGN,OAAO,CAACO,MAAM,EAAE;EACnC,IAAIS,aAAa,GAAGlB,OAAO,GAAGQ,UAAU;EACxC,IAAIU,aAAa,IAAI,CAAC,EAAE;IACpBA,aAAa,IAAI,CAAC;;EAEtB,OAAOA,aAAa;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}