{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      mt: 3,\n      p: 2\n    },\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"No tasks yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed /* onChange={() => {}} */\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.title,\n            primaryTypographyProps: {\n              variant: 'h6'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), task.subTasks && task.subTasks.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            pl: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            sx: {\n              mb: 1\n            },\n            children: \"Sub-Tasks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), task.subTasks.map(subTask => /*#__PURE__*/_jsxDEV(ListItem, {\n            // Assuming subTask has an id; cast to any if needed temporarily\n            sx: {\n              textDecoration: subTask.completed ? 'line-through' : 'none',\n              color: subTask.completed ? 'text.secondary' : 'text.primary'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: subTask.completed\n                /* onChange={() => {}} */,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: subTask.title,\n              secondary: `Est: ${subTask.estimatedTime || 'N/A'}`,\n              secondaryTypographyProps: {\n                variant: 'caption'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this)]\n          }, subTask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Paper","Typography","jsxDEV","_jsxDEV","TaskList","tasks","elevation","sx","mt","p","children","length","primary","fileName","_jsxFileName","lineNumber","columnNumber","map","task","mb","checked","completed","title","primaryTypographyProps","variant","subTasks","pl","subTask","textDecoration","color","size","secondary","estimatedTime","secondaryTypographyProps","id","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper, Typography } from '@mui/material';\nimport { TaskWithSubTasks, SubTask } from '../services/geminiService';\n\ninterface TaskListProps {\n  tasks: TaskWithSubTasks[];\n}\n\nconst TaskList: React.FC<TaskListProps> = ({ tasks }) => {\n  return (\n    <Paper elevation={2} sx={{ mt: 3, p: 2 }}>\n      {tasks.length === 0 ? (\n        <ListItem>\n          <ListItemText primary=\"No tasks yet. Add one above!\" />\n        </ListItem>\n      ) : (\n        <List>\n          {tasks.map((task) => (\n            <Paper key={task.id} elevation={2} sx={{ mb: 2, p: 2 }}>\n              <ListItem>\n                <ListItemIcon>\n                  <Checkbox checked={task.completed} /* onChange={() => {}} */ />\n                </ListItemIcon>\n                <ListItemText \n                  primary={task.title} \n                  primaryTypographyProps={{ variant: 'h6' }} \n                />\n              </ListItem>\n              {task.subTasks && task.subTasks.length > 0 && (\n                <List sx={{ pl: 4 }}>\n                  <Typography variant=\"subtitle2\" sx={{ mb: 1 }}>Sub-Tasks:</Typography>\n                  {task.subTasks.map((subTask: SubTask) => (\n                    <ListItem \n                      key={(subTask as any).id} // Assuming subTask has an id; cast to any if needed temporarily\n                      sx={{ \n                        textDecoration: (subTask as any).completed ? 'line-through' : 'none', \n                        color: (subTask as any).completed ? 'text.secondary' : 'text.primary'\n                      }}\n                    >\n                      <ListItemIcon>\n                        <Checkbox \n                          checked={(subTask as any).completed} \n                          /* onChange={() => {}} */ \n                          size=\"small\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary={subTask.title} \n                        secondary={`Est: ${(subTask as any).estimatedTime || 'N/A'}`}\n                        secondaryTypographyProps={{ variant: 'caption' }}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Paper>\n          ))}\n        </List>\n      )}\n    </Paper>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}