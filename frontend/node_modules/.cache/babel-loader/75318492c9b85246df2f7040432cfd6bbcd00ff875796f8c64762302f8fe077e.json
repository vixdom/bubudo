{"ast":null,"code":"import { WEEKDAY_DICTIONARY } from \"../constants.js\";\nimport { matchAnyPattern } from \"../../../utils/pattern.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { createParsingComponentsAtWeekday } from \"../../../common/calculation/weekdays.js\";\nconst PATTERN = new RegExp(\"(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?\" + \"(?:(?:ce)\\\\s*)?\" + `(${matchAnyPattern(WEEKDAY_DICTIONARY)})` + \"(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?\" + \"(?:\\\\s*(dernier|prochain)\\\\s*)?\" + \"(?=\\\\W|\\\\d|$)\", \"i\");\nconst WEEKDAY_GROUP = 1;\nconst POSTFIX_GROUP = 2;\nexport default class FRWeekdayParser extends AbstractParserWithWordBoundaryChecking {\n  innerPattern() {\n    return PATTERN;\n  }\n  innerExtract(context, match) {\n    const dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n    const weekday = WEEKDAY_DICTIONARY[dayOfWeek];\n    if (weekday === undefined) {\n      return null;\n    }\n    let suffix = match[POSTFIX_GROUP];\n    suffix = suffix || \"\";\n    suffix = suffix.toLowerCase();\n    let modifier = null;\n    if (suffix == \"dernier\") {\n      modifier = \"last\";\n    } else if (suffix == \"prochain\") {\n      modifier = \"next\";\n    }\n    return createParsingComponentsAtWeekday(context.reference, weekday, modifier);\n  }\n}","map":{"version":3,"names":["WEEKDAY_DICTIONARY","matchAnyPattern","AbstractParserWithWordBoundaryChecking","createParsingComponentsAtWeekday","PATTERN","RegExp","WEEKDAY_GROUP","POSTFIX_GROUP","FRWeekdayParser","innerPattern","innerExtract","context","match","dayOfWeek","toLowerCase","weekday","undefined","suffix","modifier","reference"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/fr/parsers/FRWeekdayParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { ParsingComponents } from \"../../../results\";\nimport { WEEKDAY_DICTIONARY } from \"../constants\";\nimport { matchAnyPattern } from \"../../../utils/pattern\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { createParsingComponentsAtWeekday } from \"../../../common/calculation/weekdays\";\n\nconst PATTERN = new RegExp(\n    \"(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?\" +\n        \"(?:(?:ce)\\\\s*)?\" +\n        `(${matchAnyPattern(WEEKDAY_DICTIONARY)})` +\n        \"(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?\" +\n        \"(?:\\\\s*(dernier|prochain)\\\\s*)?\" +\n        \"(?=\\\\W|\\\\d|$)\",\n    \"i\"\n);\n\nconst WEEKDAY_GROUP = 1;\nconst POSTFIX_GROUP = 2;\n\nexport default class FRWeekdayParser extends AbstractParserWithWordBoundaryChecking {\n    innerPattern(): RegExp {\n        return PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray): ParsingComponents {\n        const dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        const weekday = WEEKDAY_DICTIONARY[dayOfWeek];\n        if (weekday === undefined) {\n            return null;\n        }\n\n        let suffix = match[POSTFIX_GROUP];\n        suffix = suffix || \"\";\n        suffix = suffix.toLowerCase();\n\n        let modifier = null;\n        if (suffix == \"dernier\") {\n            modifier = \"last\";\n        } else if (suffix == \"prochain\") {\n            modifier = \"next\";\n        }\n\n        return createParsingComponentsAtWeekday(context.reference, weekday, modifier);\n    }\n}\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,iBAAe;AAClD,SAASC,eAAe,QAAQ,2BAAyB;AACzD,SAASC,sCAAsC,QAAQ,2DAAyD;AAChH,SAASC,gCAAgC,QAAQ,yCAAuC;AAExF,MAAMC,OAAO,GAAG,IAAIC,MAAM,CACtB,0BAA0B,GACtB,iBAAiB,GACjB,IAAIJ,eAAe,CAACD,kBAAkB,CAAC,GAAG,GAC1C,0BAA0B,GAC1B,iCAAiC,GACjC,eAAe,EACnB,GAAG,CACN;AAED,MAAMM,aAAa,GAAG,CAAC;AACvB,MAAMC,aAAa,GAAG,CAAC;AAEvB,eAAc,MAAOC,eAAgB,SAAQN,sCAAsC;EAC/EO,YAAYA,CAAA;IACR,OAAOL,OAAO;EAClB;EAEAM,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,SAAS,GAAGD,KAAK,CAACN,aAAa,CAAC,CAACQ,WAAW,EAAE;IACpD,MAAMC,OAAO,GAAGf,kBAAkB,CAACa,SAAS,CAAC;IAC7C,IAAIE,OAAO,KAAKC,SAAS,EAAE;MACvB,OAAO,IAAI;;IAGf,IAAIC,MAAM,GAAGL,KAAK,CAACL,aAAa,CAAC;IACjCU,MAAM,GAAGA,MAAM,IAAI,EAAE;IACrBA,MAAM,GAAGA,MAAM,CAACH,WAAW,EAAE;IAE7B,IAAII,QAAQ,GAAG,IAAI;IACnB,IAAID,MAAM,IAAI,SAAS,EAAE;MACrBC,QAAQ,GAAG,MAAM;KACpB,MAAM,IAAID,MAAM,IAAI,UAAU,EAAE;MAC7BC,QAAQ,GAAG,MAAM;;IAGrB,OAAOf,gCAAgC,CAACQ,OAAO,CAACQ,SAAS,EAAEJ,OAAO,EAAEG,QAAQ,CAAC;EACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}