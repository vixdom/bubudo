{"ast":null,"code":"import { Chrono } from \"../../chrono.js\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results.js\";\nimport { Meridiem, Weekday } from \"../../types.js\";\nimport ENDefaultConfiguration from \"./configuration.js\";\nexport { Chrono, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Meridiem, Weekday };\nexport const configuration = new ENDefaultConfiguration();\nexport const casual = new Chrono(configuration.createCasualConfiguration(false));\nexport const strict = new Chrono(configuration.createConfiguration(true, false));\nexport const GB = new Chrono(configuration.createCasualConfiguration(true));\nexport function parse(text, ref, option) {\n  return casual.parse(text, ref, option);\n}\nexport function parseDate(text, ref, option) {\n  return casual.parseDate(text, ref, option);\n}","map":{"version":3,"names":["Chrono","ParsingResult","ParsingComponents","ReferenceWithTimezone","Meridiem","Weekday","ENDefaultConfiguration","configuration","casual","createCasualConfiguration","strict","createConfiguration","GB","parse","text","ref","option","parseDate"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/en/index.ts"],"sourcesContent":["/**\n * Chrono components for English support (*parsers*, *refiners*, and *configuration*)\n *\n * @module\n */\n\nimport { Chrono, Parser, Refiner } from \"../../chrono\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results\";\nimport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday } from \"../../types\";\n\nimport ENDefaultConfiguration from \"./configuration\";\n\nexport { Chrono, Parser, Refiner, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday };\n\nexport const configuration = new ENDefaultConfiguration();\n\n/**\n * Chrono object configured for parsing *casual* English\n */\nexport const casual = new Chrono(configuration.createCasualConfiguration(false));\n\n/**\n * Chrono object configured for parsing *strict* English\n */\nexport const strict = new Chrono(configuration.createConfiguration(true, false));\n\n/**\n * Chrono object configured for parsing *UK-style* English\n */\nexport const GB = new Chrono(configuration.createCasualConfiguration(true));\n\n/**\n * A shortcut for en.casual.parse()\n */\nexport function parse(text: string, ref?: ParsingReference | Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\n/**\n * A shortcut for en.casual.parseDate()\n */\nexport function parseDate(text: string, ref?: ParsingReference | Date, option?: ParsingOption): Date {\n    return casual.parseDate(text, ref, option);\n}\n"],"mappings":"AAMA,SAASA,MAAM,QAAyB,iBAAe;AACvD,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,kBAAgB;AACxF,SAAmEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAc;AAE1G,OAAOC,sBAAsB,MAAM,oBAAkB;AAErD,SAASN,MAAM,EAAmBC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB;AACzF,SAAmEC,QAAQ,EAAEC,OAAO;AAEpF,OAAO,MAAME,aAAa,GAAG,IAAID,sBAAsB,EAAE;AAKzD,OAAO,MAAME,MAAM,GAAG,IAAIR,MAAM,CAACO,aAAa,CAACE,yBAAyB,CAAC,KAAK,CAAC,CAAC;AAKhF,OAAO,MAAMC,MAAM,GAAG,IAAIV,MAAM,CAACO,aAAa,CAACI,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAKhF,OAAO,MAAMC,EAAE,GAAG,IAAIZ,MAAM,CAACO,aAAa,CAACE,yBAAyB,CAAC,IAAI,CAAC,CAAC;AAK3E,OAAM,SAAUI,KAAKA,CAACC,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACrF,OAAOR,MAAM,CAACK,KAAK,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC1C;AAKA,OAAM,SAAUC,SAASA,CAACH,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACzF,OAAOR,MAAM,CAACS,SAAS,CAACH,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}