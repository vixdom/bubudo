{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/components/SubtaskList.tsx\";\nimport React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n// Define the structure of a subtask\n\n// Define the props for the SubtaskList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubtaskList = ({\n  subtasks,\n  onToggleSubTask\n}) => {\n  if (!subtasks || subtasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        pl: 4,\n        mt: 1\n      },\n      children: \"No subtasks generated.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(List, {\n    dense: true,\n    sx: {\n      width: '100%',\n      bgcolor: 'background.paper',\n      mt: 1,\n      pl: 4\n    },\n    children: subtasks.map(subtask => /*#__PURE__*/_jsxDEV(ListItem, {\n      disableGutters: true,\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        mb: 1,\n        py: 0.5,\n        opacity: subtask.completed ? 0.6 : 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        sx: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          sx: {\n            minWidth: 'auto',\n            mr: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: subtask.completed,\n            onChange: () => onToggleSubTask(subtask.id),\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [subtask.id, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), \" \", subtask.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this),\n          primaryTypographyProps: {\n            sx: {\n              textDecoration: subtask.completed ? 'line-through' : 'none'\n            }\n          },\n          secondary: subtask.timeEstimate ? `Est: ${subtask.timeEstimate}` : 'No estimate',\n          secondaryTypographyProps: {\n            variant: 'caption'\n          },\n          sx: {\n            mb: subtask.dependsOn.length > 0 ? 0.5 : 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), subtask.dependsOn.length > 0 && /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: 0.5,\n        sx: {\n          pl: 5,\n          pt: 0.5\n        },\n        children: subtask.dependsOn.map(depId => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          sx: {\n            mr: 1\n          },\n          children: [\"Needs task \", depId, \" to be completed\"]\n        }, `${subtask.id}-dep-${depId}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, subtask.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = SubtaskList;\nexport default SubtaskList;\nvar _c;\n$RefreshReg$(_c, \"SubtaskList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Stack","Typography","jsxDEV","_jsxDEV","SubtaskList","subtasks","onToggleSubTask","length","variant","color","sx","pl","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","dense","width","bgcolor","map","subtask","disableGutters","display","flexDirection","alignItems","mb","py","opacity","completed","direction","minWidth","mr","checked","onChange","id","size","primary","title","primaryTypographyProps","textDecoration","secondary","timeEstimate","secondaryTypographyProps","dependsOn","spacing","pt","depId","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/SubtaskList.tsx"],"sourcesContent":["import React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n// Define the structure of a subtask\ninterface Subtask {\n  id: string | number;\n  title: string;\n  dependsOn: (string | number)[];\n  timeEstimate?: string;\n  completed: boolean;\n}\n\n// Define the props for the SubtaskList component\ninterface SubtaskListProps {\n  subtasks: Subtask[];\n  onToggleSubTask: (subTaskId: string | number) => void;\n}\n\nconst SubtaskList: React.FC<SubtaskListProps> = ({ subtasks, onToggleSubTask }) => {\n  if (!subtasks || subtasks.length === 0) {\n    return <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 4, mt: 1 }}>No subtasks generated.</Typography>;\n  }\n\n\n\n  return (\n    <List dense sx={{ width: '100%', bgcolor: 'background.paper', mt: 1, pl: 4 }}>\n      {subtasks.map((subtask) => (\n        <ListItem\n          key={subtask.id}\n          disableGutters\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            mb: 1,\n            py: 0.5,\n            opacity: subtask.completed ? 0.6 : 1,\n          }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ width: '100%' }}>\n            <ListItemIcon sx={{ minWidth: 'auto', mr: 1 }}>\n              <Checkbox\n                checked={subtask.completed}\n                onChange={() => onToggleSubTask(subtask.id)}\n                size=\"small\"\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <span>\n                  <strong>{subtask.id}.</strong> {subtask.title}\n                </span>\n              }\n              primaryTypographyProps={{\n                sx: { textDecoration: subtask.completed ? 'line-through' : 'none' }\n              }}\n              secondary={subtask.timeEstimate ? `Est: ${subtask.timeEstimate}` : 'No estimate'}\n              secondaryTypographyProps={{ variant: 'caption' }}\n              sx={{ mb: subtask.dependsOn.length > 0 ? 0.5 : 0 }}\n            />\n          </Stack>\n\n          {subtask.dependsOn.length > 0 && (\n            <Stack direction=\"row\" spacing={0.5} sx={{ pl: 5, pt: 0.5 }}>\n              {subtask.dependsOn.map((depId) => (\n                <Typography\n                  key={`${subtask.id}-dep-${depId}`}\n                  variant=\"caption\"\n                  color=\"text.secondary\"\n                  sx={{ mr: 1 }}\n                >\n                  Needs task {depId} to be completed\n                </Typography>\n              ))}\n            </Stack>\n          )}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default SubtaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}