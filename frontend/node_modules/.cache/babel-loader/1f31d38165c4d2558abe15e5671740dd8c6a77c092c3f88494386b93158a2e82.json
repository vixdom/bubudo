{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper } from '@mui/material';\nimport { formatDate } from '../utils/timeUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onToggleTask,\n  onToggleSubTask\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      mt: 3,\n      p: 2\n    },\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"No tasks yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          mb: 2,\n          p: 2,\n          opacity: task.completed ? 0.6 : 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: task.completed,\n              onChange: () => onToggleTask(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.title,\n            primaryTypographyProps: {\n              variant: 'h6',\n              sx: {\n                textDecoration: task.completed ? 'line-through' : 'none'\n              }\n            },\n            secondary: `${task.totalEstimatedTime || ''}${task.totalEstimatedTime && task.dueDate ? '  •  ' : ''}${formatDate(task.dueDate)}`,\n            secondaryTypographyProps: {\n              variant: 'caption'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), task.subTasks && task.subTasks.length > 0 && /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            pl: 4\n          },\n          children: task.subTasks.map(subTask => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              py: 0.5,\n              opacity: subTask.completed ? 0.6 : 1\n            },\n            disablePadding: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              sx: {\n                minWidth: 'auto',\n                mr: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: subTask.completed,\n                onChange: () => onToggleSubTask(task.id, subTask.id),\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: subTask.title,\n              primaryTypographyProps: {\n                sx: {\n                  textDecoration: subTask.completed ? 'line-through' : 'none'\n                }\n              },\n              secondary: `${subTask.estimatedTime || ''}`,\n              secondaryTypographyProps: {\n                variant: 'caption'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 23\n            }, this)]\n          }, subTask.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Paper","formatDate","jsxDEV","_jsxDEV","TaskList","tasks","onToggleTask","onToggleSubTask","elevation","sx","mt","p","children","length","primary","fileName","_jsxFileName","lineNumber","columnNumber","map","task","mb","opacity","completed","checked","onChange","id","title","primaryTypographyProps","variant","textDecoration","secondary","totalEstimatedTime","dueDate","secondaryTypographyProps","subTasks","pl","subTask","py","disablePadding","minWidth","mr","size","estimatedTime","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper, Typography, Box } from '@mui/material';\nimport { TaskWithSubTasks, SubTask } from '../services/geminiService';\nimport { formatDate } from '../utils/timeUtils';\n\ninterface TaskListProps {\n  tasks: TaskWithSubTasks[];\n  onToggleTask: (taskId: string) => void;\n  onToggleSubTask: (taskId: string, subTaskId: string) => void;\n  user?: any;\n}\n\n\nconst TaskList: React.FC<TaskListProps> = ({ tasks, onToggleTask, onToggleSubTask }) => {\n  return (\n    <Paper elevation={2} sx={{ mt: 3, p: 2 }}>\n      {tasks.length === 0 ? (\n        <ListItem>\n          <ListItemText primary=\"No tasks yet. Add one above!\" />\n        </ListItem>\n      ) : (\n        <List>\n          {tasks.map((task) => (\n            <Paper key={task.id} elevation={2} sx={{ mb: 2, p: 2, opacity: task.completed ? 0.6 : 1 }}>\n              <ListItem>\n                <ListItemIcon>\n                  <Checkbox \n                    checked={task.completed} \n                    onChange={() => onToggleTask(task.id)} \n                  />\n                </ListItemIcon>\n                <ListItemText \n                  primary={task.title} \n                  primaryTypographyProps={{\n                    variant: 'h6', \n                    sx: { textDecoration: task.completed ? 'line-through' : 'none' } \n                  }}\n                  secondary={\n                    `${task.totalEstimatedTime || ''}${task.totalEstimatedTime && task.dueDate ? '  •  ' : ''}${formatDate(task.dueDate)}` \n                  }\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n              </ListItem>\n              {task.subTasks && task.subTasks.length > 0 && (\n                <List sx={{ pl: 4 }}>\n                  {task.subTasks.map((subTask: SubTask) => (\n                    <ListItem \n                      key={subTask.id} \n                      sx={{ \n                        py: 0.5, \n                        opacity: subTask.completed ? 0.6 : 1 \n                      }}\n                      disablePadding\n                    >\n                      <ListItemIcon sx={{ minWidth: 'auto', mr: 1 }}>\n                        <Checkbox \n                          checked={subTask.completed} \n                          onChange={() => onToggleSubTask(task.id, subTask.id)} \n                          size=\"small\"\n                        />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary={subTask.title} \n                        primaryTypographyProps={{ \n                          sx: { textDecoration: subTask.completed ? 'line-through' : 'none' } \n                        }}\n                        secondary={`${subTask.estimatedTime || ''}`}\n                        secondaryTypographyProps={{ variant: 'caption' }}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Paper>\n          ))}\n        </List>\n      )}\n    </Paper>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}