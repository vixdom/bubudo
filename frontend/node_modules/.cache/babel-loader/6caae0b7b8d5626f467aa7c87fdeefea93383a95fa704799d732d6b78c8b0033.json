{"ast":null,"code":"import { Meridiem } from \"../types.js\";\nexport function assignTheNextDay(component, targetDayJs) {\n  targetDayJs = targetDayJs.add(1, \"day\");\n  assignSimilarDate(component, targetDayJs);\n  implySimilarTime(component, targetDayJs);\n}\nexport function implyTheNextDay(component, targetDayJs) {\n  targetDayJs = targetDayJs.add(1, \"day\");\n  implySimilarDate(component, targetDayJs);\n  implySimilarTime(component, targetDayJs);\n}\nexport function assignSimilarDate(component, targetDayJs) {\n  component.assign(\"day\", targetDayJs.date());\n  component.assign(\"month\", targetDayJs.month() + 1);\n  component.assign(\"year\", targetDayJs.year());\n}\nexport function assignSimilarTime(component, targetDayJs) {\n  component.assign(\"hour\", targetDayJs.hour());\n  component.assign(\"minute\", targetDayJs.minute());\n  component.assign(\"second\", targetDayJs.second());\n  component.assign(\"millisecond\", targetDayJs.millisecond());\n  if (component.get(\"hour\") < 12) {\n    component.assign(\"meridiem\", Meridiem.AM);\n  } else {\n    component.assign(\"meridiem\", Meridiem.PM);\n  }\n}\nexport function implySimilarDate(component, targetDayJs) {\n  component.imply(\"day\", targetDayJs.date());\n  component.imply(\"month\", targetDayJs.month() + 1);\n  component.imply(\"year\", targetDayJs.year());\n}\nexport function implySimilarTime(component, targetDayJs) {\n  component.imply(\"hour\", targetDayJs.hour());\n  component.imply(\"minute\", targetDayJs.minute());\n  component.imply(\"second\", targetDayJs.second());\n  component.imply(\"millisecond\", targetDayJs.millisecond());\n}","map":{"version":3,"names":["Meridiem","assignTheNextDay","component","targetDayJs","add","assignSimilarDate","implySimilarTime","implyTheNextDay","implySimilarDate","assign","date","month","year","assignSimilarTime","hour","minute","second","millisecond","get","AM","PM","imply"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/utils/dayjs.ts"],"sourcesContent":["import { ParsingComponents } from \"../results\";\nimport dayjs from \"dayjs\";\nimport { Meridiem } from \"../types\";\n\nexport function assignTheNextDay(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    targetDayJs = targetDayJs.add(1, \"day\");\n    assignSimilarDate(component, targetDayJs);\n    implySimilarTime(component, targetDayJs);\n}\n\nexport function implyTheNextDay(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    targetDayJs = targetDayJs.add(1, \"day\");\n    implySimilarDate(component, targetDayJs);\n    implySimilarTime(component, targetDayJs);\n}\n\nexport function assignSimilarDate(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    component.assign(\"day\", targetDayJs.date());\n    component.assign(\"month\", targetDayJs.month() + 1);\n    component.assign(\"year\", targetDayJs.year());\n}\n\nexport function assignSimilarTime(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    component.assign(\"hour\", targetDayJs.hour());\n    component.assign(\"minute\", targetDayJs.minute());\n    component.assign(\"second\", targetDayJs.second());\n    component.assign(\"millisecond\", targetDayJs.millisecond());\n    if (component.get(\"hour\") < 12) {\n        component.assign(\"meridiem\", Meridiem.AM);\n    } else {\n        component.assign(\"meridiem\", Meridiem.PM);\n    }\n}\n\n/**\n * @deprecated Use `dates.implySimilarDate` with normal Javascript Date instead.\n */\nexport function implySimilarDate(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    component.imply(\"day\", targetDayJs.date());\n    component.imply(\"month\", targetDayJs.month() + 1);\n    component.imply(\"year\", targetDayJs.year());\n}\n\n/**\n * @deprecated Use `dates.implySimilarTime` with normal Javascript Date instead.\n */\nexport function implySimilarTime(component: ParsingComponents, targetDayJs: dayjs.Dayjs) {\n    component.imply(\"hour\", targetDayJs.hour());\n    component.imply(\"minute\", targetDayJs.minute());\n    component.imply(\"second\", targetDayJs.second());\n    component.imply(\"millisecond\", targetDayJs.millisecond());\n}\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,aAAW;AAEpC,OAAM,SAAUC,gBAAgBA,CAACC,SAA4B,EAAEC,WAAwB;EACnFA,WAAW,GAAGA,WAAW,CAACC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;EACvCC,iBAAiB,CAACH,SAAS,EAAEC,WAAW,CAAC;EACzCG,gBAAgB,CAACJ,SAAS,EAAEC,WAAW,CAAC;AAC5C;AAEA,OAAM,SAAUI,eAAeA,CAACL,SAA4B,EAAEC,WAAwB;EAClFA,WAAW,GAAGA,WAAW,CAACC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;EACvCI,gBAAgB,CAACN,SAAS,EAAEC,WAAW,CAAC;EACxCG,gBAAgB,CAACJ,SAAS,EAAEC,WAAW,CAAC;AAC5C;AAEA,OAAM,SAAUE,iBAAiBA,CAACH,SAA4B,EAAEC,WAAwB;EACpFD,SAAS,CAACO,MAAM,CAAC,KAAK,EAAEN,WAAW,CAACO,IAAI,EAAE,CAAC;EAC3CR,SAAS,CAACO,MAAM,CAAC,OAAO,EAAEN,WAAW,CAACQ,KAAK,EAAE,GAAG,CAAC,CAAC;EAClDT,SAAS,CAACO,MAAM,CAAC,MAAM,EAAEN,WAAW,CAACS,IAAI,EAAE,CAAC;AAChD;AAEA,OAAM,SAAUC,iBAAiBA,CAACX,SAA4B,EAAEC,WAAwB;EACpFD,SAAS,CAACO,MAAM,CAAC,MAAM,EAAEN,WAAW,CAACW,IAAI,EAAE,CAAC;EAC5CZ,SAAS,CAACO,MAAM,CAAC,QAAQ,EAAEN,WAAW,CAACY,MAAM,EAAE,CAAC;EAChDb,SAAS,CAACO,MAAM,CAAC,QAAQ,EAAEN,WAAW,CAACa,MAAM,EAAE,CAAC;EAChDd,SAAS,CAACO,MAAM,CAAC,aAAa,EAAEN,WAAW,CAACc,WAAW,EAAE,CAAC;EAC1D,IAAIf,SAAS,CAACgB,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE;IAC5BhB,SAAS,CAACO,MAAM,CAAC,UAAU,EAAET,QAAQ,CAACmB,EAAE,CAAC;GAC5C,MAAM;IACHjB,SAAS,CAACO,MAAM,CAAC,UAAU,EAAET,QAAQ,CAACoB,EAAE,CAAC;;AAEjD;AAKA,OAAM,SAAUZ,gBAAgBA,CAACN,SAA4B,EAAEC,WAAwB;EACnFD,SAAS,CAACmB,KAAK,CAAC,KAAK,EAAElB,WAAW,CAACO,IAAI,EAAE,CAAC;EAC1CR,SAAS,CAACmB,KAAK,CAAC,OAAO,EAAElB,WAAW,CAACQ,KAAK,EAAE,GAAG,CAAC,CAAC;EACjDT,SAAS,CAACmB,KAAK,CAAC,MAAM,EAAElB,WAAW,CAACS,IAAI,EAAE,CAAC;AAC/C;AAKA,OAAM,SAAUN,gBAAgBA,CAACJ,SAA4B,EAAEC,WAAwB;EACnFD,SAAS,CAACmB,KAAK,CAAC,MAAM,EAAElB,WAAW,CAACW,IAAI,EAAE,CAAC;EAC3CZ,SAAS,CAACmB,KAAK,CAAC,QAAQ,EAAElB,WAAW,CAACY,MAAM,EAAE,CAAC;EAC/Cb,SAAS,CAACmB,KAAK,CAAC,QAAQ,EAAElB,WAAW,CAACa,MAAM,EAAE,CAAC;EAC/Cd,SAAS,CAACmB,KAAK,CAAC,aAAa,EAAElB,WAAW,CAACc,WAAW,EAAE,CAAC;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}