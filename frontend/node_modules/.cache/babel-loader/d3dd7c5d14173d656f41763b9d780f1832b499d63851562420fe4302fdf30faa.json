{"ast":null,"code":"import React from'react';import List from'@mui/material/List';import ListItem from'@mui/material/ListItem';import ListItemText from'@mui/material/ListItemText';import ListItemIcon from'@mui/material/ListItemIcon';import Checkbox from'@mui/material/Checkbox';import Stack from'@mui/material/Stack';import Typography from'@mui/material/Typography';// Define the structure of a subtask\n// Define the props for the SubtaskList component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SubtaskList=_ref=>{let{subtasks,onToggleSubTask}=_ref;if(!subtasks||subtasks.length===0){return/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{pl:4,mt:1},children:\"No subtasks generated.\"});}return/*#__PURE__*/_jsx(List,{dense:true,sx:{width:'100%',bgcolor:'background.paper',mt:1,pl:4},children:subtasks.map(subtask=>/*#__PURE__*/_jsxs(ListItem,{disableGutters:true,sx:{display:'flex',flexDirection:'column',alignItems:'flex-start',mb:1,py:0.5,opacity:subtask.completed?0.6:1},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",sx:{width:'100%'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:'auto',mr:1},children:/*#__PURE__*/_jsx(Checkbox,{checked:subtask.completed,onChange:()=>onToggleSubTask(subtask.id),size:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[subtask.id,\".\"]}),\" \",subtask.title]}),primaryTypographyProps:{sx:{textDecoration:subtask.completed?'line-through':'none'}},secondary:subtask.timeEstimate?`Est: ${subtask.timeEstimate}`:'No estimate',secondaryTypographyProps:{variant:'caption'},sx:{mb:subtask.dependsOn.length>0?0.5:0}})]}),subtask.dependsOn.length>0&&/*#__PURE__*/_jsx(Stack,{direction:\"row\",spacing:0.5,sx:{pl:5,pt:0.5},children:subtask.dependsOn.map(depId=>/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{mr:1},children:[\"Needs task \",depId,\" to be completed\"]},`${subtask.id}-dep-${depId}`))})]},subtask.id))});};export default SubtaskList;","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Stack","Typography","jsx","_jsx","jsxs","_jsxs","SubtaskList","_ref","subtasks","onToggleSubTask","length","variant","color","sx","pl","mt","children","dense","width","bgcolor","map","subtask","disableGutters","display","flexDirection","alignItems","mb","py","opacity","completed","direction","minWidth","mr","checked","onChange","id","size","primary","title","primaryTypographyProps","textDecoration","secondary","timeEstimate","secondaryTypographyProps","dependsOn","spacing","pt","depId"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/SubtaskList.tsx"],"sourcesContent":["import React from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n// Define the structure of a subtask\ninterface Subtask {\n  id: string | number;\n  title: string;\n  dependsOn: (string | number)[];\n  timeEstimate?: string;\n  completed: boolean;\n}\n\n// Define the props for the SubtaskList component\ninterface SubtaskListProps {\n  subtasks: Subtask[];\n  onToggleSubTask: (subTaskId: string | number) => void;\n}\n\nconst SubtaskList: React.FC<SubtaskListProps> = ({ subtasks, onToggleSubTask }) => {\n  if (!subtasks || subtasks.length === 0) {\n    return <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 4, mt: 1 }}>No subtasks generated.</Typography>;\n  }\n\n\n\n  return (\n    <List dense sx={{ width: '100%', bgcolor: 'background.paper', mt: 1, pl: 4 }}>\n      {subtasks.map((subtask) => (\n        <ListItem\n          key={subtask.id}\n          disableGutters\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            mb: 1,\n            py: 0.5,\n            opacity: subtask.completed ? 0.6 : 1,\n          }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ width: '100%' }}>\n            <ListItemIcon sx={{ minWidth: 'auto', mr: 1 }}>\n              <Checkbox\n                checked={subtask.completed}\n                onChange={() => onToggleSubTask(subtask.id)}\n                size=\"small\"\n              />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                <span>\n                  <strong>{subtask.id}.</strong> {subtask.title}\n                </span>\n              }\n              primaryTypographyProps={{\n                sx: { textDecoration: subtask.completed ? 'line-through' : 'none' }\n              }}\n              secondary={subtask.timeEstimate ? `Est: ${subtask.timeEstimate}` : 'No estimate'}\n              secondaryTypographyProps={{ variant: 'caption' }}\n              sx={{ mb: subtask.dependsOn.length > 0 ? 0.5 : 0 }}\n            />\n          </Stack>\n\n          {subtask.dependsOn.length > 0 && (\n            <Stack direction=\"row\" spacing={0.5} sx={{ pl: 5, pt: 0.5 }}>\n              {subtask.dependsOn.map((depId) => (\n                <Typography\n                  key={`${subtask.id}-dep-${depId}`}\n                  variant=\"caption\"\n                  color=\"text.secondary\"\n                  sx={{ mr: 1 }}\n                >\n                  Needs task {depId} to be completed\n                </Typography>\n              ))}\n            </Stack>\n          )}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default SubtaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}