{"ast":null,"code":"import { ParsingComponents } from \"../results.js\";\nimport dayjs from \"dayjs\";\nimport { assignSimilarDate, assignSimilarTime, implySimilarTime, implyTheNextDay } from \"../utils/dayjs.js\";\nimport { Meridiem } from \"../types.js\";\nexport function now(reference) {\n  const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  assignSimilarTime(component, targetDate);\n  component.assign(\"timezoneOffset\", reference.getTimezoneOffset());\n  component.addTag(\"casualReference/now\");\n  return component;\n}\nexport function today(reference) {\n  const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  implySimilarTime(component, targetDate);\n  component.addTag(\"casualReference/today\");\n  return component;\n}\nexport function yesterday(reference) {\n  return theDayBefore(reference, 1).addTag(\"casualReference/yesterday\");\n}\nexport function theDayBefore(reference, numDay) {\n  return theDayAfter(reference, -numDay);\n}\nexport function tomorrow(reference) {\n  return theDayAfter(reference, 1).addTag(\"casualReference/tomorrow\");\n}\nexport function theDayAfter(reference, nDays) {\n  let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  targetDate = targetDate.add(nDays, \"day\");\n  assignSimilarDate(component, targetDate);\n  implySimilarTime(component, targetDate);\n  return component;\n}\nexport function tonight(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 22;\n  const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.addTag(\"casualReference/tonight\");\n  return component;\n}\nexport function lastNight(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  if (targetDate.hour() < 6) {\n    targetDate = targetDate.add(-1, \"day\");\n  }\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  return component;\n}\nexport function evening(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.imply(\"hour\", implyHour);\n  component.addTag(\"casualReference/evening\");\n  return component;\n}\nexport function yesterdayEvening(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  const component = new ParsingComponents(reference, {});\n  targetDate = targetDate.add(-1, \"day\");\n  assignSimilarDate(component, targetDate);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.addTag(\"casualReference/yesterday\");\n  component.addTag(\"casualReference/evening\");\n  return component;\n}\nexport function midnight(reference) {\n  const component = new ParsingComponents(reference, {});\n  const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n  if (targetDate.hour() > 2) {\n    implyTheNextDay(component, targetDate);\n  }\n  component.assign(\"hour\", 0);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/midnight\");\n  return component;\n}\nexport function morning(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.AM);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/morning\");\n  return component;\n}\nexport function afternoon(reference) {\n  let implyHour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.PM);\n  component.imply(\"hour\", implyHour);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/afternoon\");\n  return component;\n}\nexport function noon(reference) {\n  const component = new ParsingComponents(reference, {});\n  component.imply(\"meridiem\", Meridiem.AM);\n  component.imply(\"hour\", 12);\n  component.imply(\"minute\", 0);\n  component.imply(\"second\", 0);\n  component.imply(\"millisecond\", 0);\n  component.addTag(\"casualReference/noon\");\n  return component;\n}","map":{"version":3,"names":["ParsingComponents","dayjs","assignSimilarDate","assignSimilarTime","implySimilarTime","implyTheNextDay","Meridiem","now","reference","targetDate","getDateWithAdjustedTimezone","component","assign","getTimezoneOffset","addTag","today","yesterday","theDayBefore","numDay","theDayAfter","tomorrow","nDays","add","tonight","implyHour","arguments","length","undefined","imply","PM","lastNight","hour","evening","yesterdayEvening","midnight","morning","AM","afternoon","noon"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/common/casualReferences.ts"],"sourcesContent":["import { ParsingComponents, ReferenceWithTimezone } from \"../results\";\nimport dayjs from \"dayjs\";\nimport {\n    assignSimilarDate,\n    assignSimilarTime,\n    implySimilarDate,\n    implySimilarTime,\n    implyTheNextDay,\n} from \"../utils/dayjs\";\nimport { Meridiem } from \"../types\";\n\nexport function now(reference: ReferenceWithTimezone): ParsingComponents {\n    const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    assignSimilarTime(component, targetDate);\n    component.assign(\"timezoneOffset\", reference.getTimezoneOffset());\n    component.addTag(\"casualReference/now\");\n    return component;\n}\n\nexport function today(reference: ReferenceWithTimezone): ParsingComponents {\n    const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    implySimilarTime(component, targetDate);\n    component.addTag(\"casualReference/today\");\n    return component;\n}\n\n/**\n * The previous day. Imply the same time.\n */\nexport function yesterday(reference: ReferenceWithTimezone): ParsingComponents {\n    return theDayBefore(reference, 1).addTag(\"casualReference/yesterday\");\n}\n\nexport function theDayBefore(reference: ReferenceWithTimezone, numDay: number): ParsingComponents {\n    return theDayAfter(reference, -numDay);\n}\n\n/**\n * The following day with dayjs.assignTheNextDay()\n */\nexport function tomorrow(reference: ReferenceWithTimezone): ParsingComponents {\n    return theDayAfter(reference, 1).addTag(\"casualReference/tomorrow\");\n}\n\nexport function theDayAfter(reference: ReferenceWithTimezone, nDays: number): ParsingComponents {\n    let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    targetDate = targetDate.add(nDays, \"day\");\n    assignSimilarDate(component, targetDate);\n    implySimilarTime(component, targetDate);\n    return component;\n}\n\nexport function tonight(reference: ReferenceWithTimezone, implyHour = 22): ParsingComponents {\n    const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.addTag(\"casualReference/tonight\");\n    return component;\n}\n\nexport function lastNight(reference: ReferenceWithTimezone, implyHour = 0): ParsingComponents {\n    let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    if (targetDate.hour() < 6) {\n        targetDate = targetDate.add(-1, \"day\");\n    }\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    return component;\n}\n\nexport function evening(reference: ReferenceWithTimezone, implyHour = 20): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.imply(\"hour\", implyHour);\n    component.addTag(\"casualReference/evening\");\n    return component;\n}\n\nexport function yesterdayEvening(reference: ReferenceWithTimezone, implyHour = 20): ParsingComponents {\n    let targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    const component = new ParsingComponents(reference, {});\n    targetDate = targetDate.add(-1, \"day\");\n    assignSimilarDate(component, targetDate);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.addTag(\"casualReference/yesterday\");\n    component.addTag(\"casualReference/evening\");\n    return component;\n}\n\nexport function midnight(reference: ReferenceWithTimezone): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    const targetDate = dayjs(reference.getDateWithAdjustedTimezone());\n    if (targetDate.hour() > 2) {\n        // Unless it's very early morning (0~2AM), we assume the midnight is the coming midnight.\n        // Thus, increasing the day by 1.\n        implyTheNextDay(component, targetDate);\n    }\n    component.assign(\"hour\", 0);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/midnight\");\n    return component;\n}\n\nexport function morning(reference: ReferenceWithTimezone, implyHour = 6): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.AM);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/morning\");\n    return component;\n}\n\nexport function afternoon(reference: ReferenceWithTimezone, implyHour = 15): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.PM);\n    component.imply(\"hour\", implyHour);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/afternoon\");\n    return component;\n}\n\nexport function noon(reference: ReferenceWithTimezone): ParsingComponents {\n    const component = new ParsingComponents(reference, {});\n    component.imply(\"meridiem\", Meridiem.AM);\n    component.imply(\"hour\", 12);\n    component.imply(\"minute\", 0);\n    component.imply(\"second\", 0);\n    component.imply(\"millisecond\", 0);\n    component.addTag(\"casualReference/noon\");\n    return component;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}