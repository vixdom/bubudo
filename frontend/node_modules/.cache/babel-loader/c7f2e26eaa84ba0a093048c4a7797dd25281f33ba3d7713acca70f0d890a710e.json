{"ast":null,"code":"import { parseTimeUnits, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants.js\";\nimport { ParsingComponents } from \"../../../results.js\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary.js\";\nconst PATTERN = new RegExp(`(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:later|after|from now|henceforth|forward|out)` + \"(?=(?:\\\\W|$))\", \"i\");\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(later|after|from now)(?=\\\\W|$)`, \"i\");\nconst GROUP_NUM_TIMEUNITS = 1;\nexport default class ENTimeUnitLaterFormatParser extends AbstractParserWithWordBoundaryChecking {\n  constructor(strictMode) {\n    super();\n    this.strictMode = strictMode;\n  }\n  innerPattern() {\n    return this.strictMode ? STRICT_PATTERN : PATTERN;\n  }\n  innerExtract(context, match) {\n    const timeUnits = parseTimeUnits(match[GROUP_NUM_TIMEUNITS]);\n    if (!timeUnits) {\n      return null;\n    }\n    return ParsingComponents.createRelativeFromReference(context.reference, timeUnits);\n  }\n}","map":{"version":3,"names":["parseTimeUnits","TIME_UNITS_NO_ABBR_PATTERN","TIME_UNITS_PATTERN","ParsingComponents","AbstractParserWithWordBoundaryChecking","PATTERN","RegExp","STRICT_PATTERN","GROUP_NUM_TIMEUNITS","ENTimeUnitLaterFormatParser","constructor","strictMode","innerPattern","innerExtract","context","match","timeUnits","createRelativeFromReference","reference"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/en/parsers/ENTimeUnitLaterFormatParser.ts"],"sourcesContent":["import { ParsingContext } from \"../../../chrono\";\nimport { parseTimeUnits, TIME_UNITS_NO_ABBR_PATTERN, TIME_UNITS_PATTERN } from \"../constants\";\nimport { ParsingComponents } from \"../../../results\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../common/parsers/AbstractParserWithWordBoundary\";\n\nconst PATTERN = new RegExp(\n    `(${TIME_UNITS_PATTERN})\\\\s{0,5}(?:later|after|from now|henceforth|forward|out)` + \"(?=(?:\\\\W|$))\",\n    \"i\"\n);\n\nconst STRICT_PATTERN = new RegExp(`(${TIME_UNITS_NO_ABBR_PATTERN})\\\\s{0,5}(later|after|from now)(?=\\\\W|$)`, \"i\");\nconst GROUP_NUM_TIMEUNITS = 1;\n\nexport default class ENTimeUnitLaterFormatParser extends AbstractParserWithWordBoundaryChecking {\n    constructor(private strictMode: boolean) {\n        super();\n    }\n\n    innerPattern(): RegExp {\n        return this.strictMode ? STRICT_PATTERN : PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const timeUnits = parseTimeUnits(match[GROUP_NUM_TIMEUNITS]);\n        if (!timeUnits) {\n            return null;\n        }\n        return ParsingComponents.createRelativeFromReference(context.reference, timeUnits);\n    }\n}\n"],"mappings":"AACA,SAASA,cAAc,EAAEC,0BAA0B,EAAEC,kBAAkB,QAAQ,iBAAe;AAC9F,SAASC,iBAAiB,QAAQ,qBAAmB;AACrD,SAASC,sCAAsC,QAAQ,2DAAyD;AAEhH,MAAMC,OAAO,GAAG,IAAIC,MAAM,CACtB,IAAIJ,kBAAkB,0DAA0D,GAAG,eAAe,EAClG,GAAG,CACN;AAED,MAAMK,cAAc,GAAG,IAAID,MAAM,CAAC,IAAIL,0BAA0B,0CAA0C,EAAE,GAAG,CAAC;AAChH,MAAMO,mBAAmB,GAAG,CAAC;AAE7B,eAAc,MAAOC,2BAA4B,SAAQL,sCAAsC;EAC3FM,YAAoBC,UAAmB;IACnC,KAAK,EAAE;IADS,KAAAA,UAAU,GAAVA,UAAU;EAE9B;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI,CAACD,UAAU,GAAGJ,cAAc,GAAGF,OAAO;EACrD;EAEAQ,YAAYA,CAACC,OAAuB,EAAEC,KAAuB;IACzD,MAAMC,SAAS,GAAGhB,cAAc,CAACe,KAAK,CAACP,mBAAmB,CAAC,CAAC;IAC5D,IAAI,CAACQ,SAAS,EAAE;MACZ,OAAO,IAAI;;IAEf,OAAOb,iBAAiB,CAACc,2BAA2B,CAACH,OAAO,CAACI,SAAS,EAAEF,SAAS,CAAC;EACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}