{"ast":null,"code":"import dayjs from \"dayjs\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../../common/parsers/AbstractParserWithWordBoundary.js\";\nimport { NUMBER, zhStringToNumber } from \"../constants.js\";\nconst PATTERN = new RegExp(\"(\\\\d+|[\" + Object.keys(NUMBER).join(\"\") + \"]+|半|几)(?:\\\\s*)\" + \"(?:个)?\" + \"(秒(?:钟)?|分钟|小时|钟|日|天|星期|礼拜|月|年)\" + \"(?:(?:之|过)?后|(?:之)?内)\", \"i\");\nconst NUMBER_GROUP = 1;\nconst UNIT_GROUP = 2;\nexport default class ZHHansDeadlineFormatParser extends AbstractParserWithWordBoundaryChecking {\n  innerPattern() {\n    return PATTERN;\n  }\n  innerExtract(context, match) {\n    const result = context.createParsingResult(match.index, match[0]);\n    let number = parseInt(match[NUMBER_GROUP]);\n    if (isNaN(number)) {\n      number = zhStringToNumber(match[NUMBER_GROUP]);\n    }\n    if (isNaN(number)) {\n      const string = match[NUMBER_GROUP];\n      if (string === \"几\") {\n        number = 3;\n      } else if (string === \"半\") {\n        number = 0.5;\n      } else {\n        return null;\n      }\n    }\n    let date = dayjs(context.refDate);\n    const unit = match[UNIT_GROUP];\n    const unitAbbr = unit[0];\n    if (unitAbbr.match(/[日天星礼月年]/)) {\n      if (unitAbbr == \"日\" || unitAbbr == \"天\") {\n        date = date.add(number, \"d\");\n      } else if (unitAbbr == \"星\" || unitAbbr == \"礼\") {\n        date = date.add(number * 7, \"d\");\n      } else if (unitAbbr == \"月\") {\n        date = date.add(number, \"month\");\n      } else if (unitAbbr == \"年\") {\n        date = date.add(number, \"year\");\n      }\n      result.start.assign(\"year\", date.year());\n      result.start.assign(\"month\", date.month() + 1);\n      result.start.assign(\"day\", date.date());\n      return result;\n    }\n    if (unitAbbr == \"秒\") {\n      date = date.add(number, \"second\");\n    } else if (unitAbbr == \"分\") {\n      date = date.add(number, \"minute\");\n    } else if (unitAbbr == \"小\" || unitAbbr == \"钟\") {\n      date = date.add(number, \"hour\");\n    }\n    result.start.imply(\"year\", date.year());\n    result.start.imply(\"month\", date.month() + 1);\n    result.start.imply(\"day\", date.date());\n    result.start.assign(\"hour\", date.hour());\n    result.start.assign(\"minute\", date.minute());\n    result.start.assign(\"second\", date.second());\n    return result;\n  }\n}","map":{"version":3,"names":["dayjs","AbstractParserWithWordBoundaryChecking","NUMBER","zhStringToNumber","PATTERN","RegExp","Object","keys","join","NUMBER_GROUP","UNIT_GROUP","ZHHansDeadlineFormatParser","innerPattern","innerExtract","context","match","result","createParsingResult","index","number","parseInt","isNaN","string","date","refDate","unit","unitAbbr","add","start","assign","year","month","imply","hour","minute","second"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/zh/hans/parsers/ZHHansDeadlineFormatParser.ts"],"sourcesContent":["import dayjs from \"dayjs\";\nimport { ParsingContext } from \"../../../../chrono\";\nimport { AbstractParserWithWordBoundaryChecking } from \"../../../../common/parsers/AbstractParserWithWordBoundary\";\nimport { NUMBER, zhStringToNumber } from \"../constants\";\n\nconst PATTERN = new RegExp(\n    \"(\\\\d+|[\" +\n        Object.keys(NUMBER).join(\"\") +\n        \"]+|半|几)(?:\\\\s*)\" +\n        \"(?:个)?\" +\n        \"(秒(?:钟)?|分钟|小时|钟|日|天|星期|礼拜|月|年)\" +\n        \"(?:(?:之|过)?后|(?:之)?内)\",\n    \"i\"\n);\n\nconst NUMBER_GROUP = 1;\nconst UNIT_GROUP = 2;\n\nexport default class ZHHansDeadlineFormatParser extends AbstractParserWithWordBoundaryChecking {\n    innerPattern(): RegExp {\n        return PATTERN;\n    }\n\n    innerExtract(context: ParsingContext, match: RegExpMatchArray) {\n        const result = context.createParsingResult(match.index, match[0]);\n\n        let number = parseInt(match[NUMBER_GROUP]);\n        if (isNaN(number)) {\n            number = zhStringToNumber(match[NUMBER_GROUP]);\n        }\n\n        if (isNaN(number)) {\n            const string = match[NUMBER_GROUP];\n            if (string === \"几\") {\n                number = 3;\n            } else if (string === \"半\") {\n                number = 0.5;\n            } else {\n                //just in case\n                return null;\n            }\n        }\n\n        let date = dayjs(context.refDate);\n        const unit = match[UNIT_GROUP];\n        const unitAbbr = unit[0];\n\n        if (unitAbbr.match(/[日天星礼月年]/)) {\n            if (unitAbbr == \"日\" || unitAbbr == \"天\") {\n                date = date.add(number, \"d\");\n            } else if (unitAbbr == \"星\" || unitAbbr == \"礼\") {\n                date = date.add(number * 7, \"d\");\n            } else if (unitAbbr == \"月\") {\n                date = date.add(number, \"month\");\n            } else if (unitAbbr == \"年\") {\n                date = date.add(number, \"year\");\n            }\n\n            result.start.assign(\"year\", date.year());\n            result.start.assign(\"month\", date.month() + 1);\n            result.start.assign(\"day\", date.date());\n            return result;\n        }\n\n        if (unitAbbr == \"秒\") {\n            date = date.add(number, \"second\");\n        } else if (unitAbbr == \"分\") {\n            date = date.add(number, \"minute\");\n        } else if (unitAbbr == \"小\" || unitAbbr == \"钟\") {\n            date = date.add(number, \"hour\");\n        }\n\n        result.start.imply(\"year\", date.year());\n        result.start.imply(\"month\", date.month() + 1);\n        result.start.imply(\"day\", date.date());\n        result.start.assign(\"hour\", date.hour());\n        result.start.assign(\"minute\", date.minute());\n        result.start.assign(\"second\", date.second());\n        return result;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}