{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AuthHeader from './components/AuthHeader';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport { themes } from './theme';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nconst themeKeys = ['sunbeam', 'fresh', 'night'];\nimport { deleteUserTasksById } from './services/supabaseTasksService';\nimport { useEffect as useEffectOriginal } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Set browser tab title\n  useEffectOriginal(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n  const [tasks, setTasks] = useState([]);\n  const [promptSelection, setPromptSelection] = useState('A');\n  const [user, setUser] = useState(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored)) return stored;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n  const handleTabChange = (_event, newValue) => {\n    setTab(newValue);\n  };\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async taskId => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter(task => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map(task => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async taskData => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => {\n        var _st$completed;\n        return {\n          ...st,\n          completed: (_st$completed = st.completed) !== null && _st$completed !== void 0 ? _st$completed : false\n        };\n      })\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal = {\n      ...newTaskForSupabase,\n      id: tempId\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({\n          id,\n          ...rest\n        }) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async taskId => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({\n            ...sub,\n            completed: newCompletedStatus\n          }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId, subTaskId) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.filter(sub => sub.id !== subTaskId);\n        // If all subtasks gone, mark task incomplete\n        return {\n          ...task,\n          subTasks: updatedSubTasks,\n          completed: updatedSubTasks.length > 0 ? updatedSubTasks.every(st => st.completed) : false\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask delete to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId, subTaskId, newTitle) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.map(sub => sub.id === subTaskId ? {\n          ...sub,\n          title: newTitle\n        } : sub);\n        return {\n          ...task,\n          subTasks: updatedSubTasks\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask edit to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to toggle a single subtask and update parent task if needed\n  const handleToggleSubTask = async (taskId, subTaskId) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        let allSubTasksCompleted = true;\n        const updatedSubTasks = task.subTasks.map(sub => {\n          if (sub.id === subTaskId) {\n            const newSubCompletedStatus = !sub.completed;\n            if (!newSubCompletedStatus) allSubTasksCompleted = false;\n            return {\n              ...sub,\n              completed: newSubCompletedStatus\n            };\n          } else {\n            if (!sub.completed) allSubTasksCompleted = false;\n          }\n          return sub;\n        });\n        return {\n          ...task,\n          subTasks: updatedSubTasks,\n          completed: allSubTasksCompleted\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Function to toggle prompt\n  const togglePrompt = () => {\n    setPromptSelection(prev => prev === 'A' ? 'B' : 'A');\n  };\n\n  // Theme selector handlers\n  // Theme selector handlers\n  const handleThemeClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => setAnchorEl(null);\n  const handleThemeSelect = key => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthHeader, {\n      onAuthChange: setUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 16,\n          right: 24,\n          zIndex: 10,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"small\",\n          onClick: handleThemeClick,\n          sx: {\n            width: 28,\n            height: 28,\n            p: 0.5,\n            border: '2px solid #eee',\n            background: currentTheme.palette.primary.main,\n            boxShadow: 2,\n            mr: 1,\n            '&:hover': {\n              boxShadow: 4,\n              background: currentTheme.palette.primary.dark || currentTheme.palette.primary.main\n            }\n          },\n          \"aria-label\": \"Change theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          open: Boolean(anchorEl),\n          anchorEl: anchorEl,\n          onClose: handleThemeClose,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          PaperProps: {\n            sx: {\n              p: 2,\n              display: 'flex',\n              gap: 2,\n              boxShadow: 4\n            }\n          },\n          children: themeKeys.map(key => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              mx: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              sx: {\n                width: 32,\n                height: 32,\n                p: 0.5,\n                border: themeKey === key ? '2.5px solid #333' : '2px solid #eee',\n                background: themes[key].theme.palette.primary.main,\n                boxShadow: themeKey === key ? 4 : 1,\n                mb: 0.5,\n                transition: 'border 0.2s, box-shadow 0.2s',\n                '&:hover': {\n                  boxShadow: 6,\n                  background: themes[key].theme.palette.primary.dark || themes[key].theme.palette.primary.main\n                }\n              },\n              \"aria-label\": `Switch to ${themes[key].name} theme`,\n              onClick: () => handleThemeSelect(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                color: themeKey === key ? '#333' : '#888',\n                fontWeight: themeKey === key ? 700 : 400,\n                fontSize: 12\n              },\n              \"aria-label\": themes[key].name,\n              children: themes[key].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            width: \"20\",\n            fill: \"#FFA000\",\n            style: {\n              marginRight: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M0 0h24v24H0z\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 175\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              fontWeight: 600\n            },\n            children: \"My Rewards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: 700,\n          color: \"primary\",\n          sx: {\n            letterSpacing: 1,\n            flexGrow: 1\n          },\n          children: \"Bubu Do [preview]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: togglePrompt,\n            children: [\"Using Prompt: \", promptSelection, \" (Click to Switch)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n          onAddTask: addTask,\n          currentPrompt: promptSelection,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            borderBottom: 1,\n            borderColor: 'divider',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            value: tab,\n            onChange: handleTabChange,\n            variant: \"fullWidth\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              label: \"To Do\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              label: \"My Accomplishments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), tab === 0 &&\n        /*#__PURE__*/\n        // To Do: show only incomplete tasks\n        _jsxDEV(TaskList, {\n          tasks: incompleteTasks,\n          onToggleTask: handleToggleTask,\n          onToggleSubTask: handleToggleSubTask,\n          onDeleteTask: handleDeleteTask,\n          onDeleteSubTask: handleDeleteSubTask,\n          onEditSubTask: handleEditSubTask,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), tab === 1 &&\n        /*#__PURE__*/\n        // My Accomplishments: show only completed tasks\n        _jsxDEV(TaskList, {\n          tasks: completedTasks,\n          onToggleTask: handleToggleTask,\n          onToggleSubTask: handleToggleSubTask,\n          onDeleteTask: handleDeleteTask,\n          onDeleteSubTask: handleDeleteSubTask,\n          onEditSubTask: handleEditSubTask,\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: mergeNotice,\n      autoHideDuration: 4000,\n      onClose: () => setMergeNotice(false),\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setMergeNotice(false),\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Local tasks have been uploaded and merged with your account!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: deleteNotice,\n      autoHideDuration: 3000,\n      onClose: () => setDeleteNotice(false),\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setDeleteNotice(false),\n        severity: \"info\",\n        sx: {\n          width: '100%'\n        },\n        children: \"Task deleted!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+yT0NS39C8EOgBH86ZEiMYQjJ8A=\", false, function () {\n  return [useEffectOriginal];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","Snackbar","Alert","ThemeProvider","CssBaseline","Tabs","Tab","TaskList","AddTaskForm","AuthHeader","fetchUserTasks","upsertUserTasks","themes","Popover","IconButton","APP_VERSION","themeKeys","deleteUserTasksById","useEffectOriginal","jsxDEV","_jsxDEV","App","_s","document","title","tasks","setTasks","promptSelection","setPromptSelection","user","setUser","mergeNotice","setMergeNotice","tab","setTab","deleteNotice","setDeleteNotice","themeKey","setThemeKey","stored","localStorage","getItem","includes","anchorEl","setAnchorEl","currentTheme","theme","setItem","handleTabChange","_event","newValue","incompleteTasks","filter","t","completed","completedTasks","storedTasks","parsedTasks","JSON","parse","tasksWithDates","map","task","dueDate","Date","console","log","error","handleDeleteTask","taskId","prev","id","tasksArr","stringify","err","tasksToStore","toISOString","doSync","cloudTasks","localTasks","cloudIds","Set","newLocalTasks","has","mergedTasks","length","removeItem","addTask","taskData","newTaskForSupabase","subTasks","st","_st$completed","tempId","now","toString","Math","random","substring","newTaskForLocal","updatedTasks","tasksForSupabase","rest","handleToggleTask","updated","newCompletedStatus","sub","handleDeleteSubTask","subTaskId","updatedSubTasks","every","handleEditSubTask","newTitle","handleToggleSubTask","allSubTasksCompleted","newSubCompletedStatus","togglePrompt","handleThemeClick","event","currentTarget","handleThemeClose","handleThemeSelect","key","children","fileName","_jsxFileName","lineNumber","columnNumber","onAuthChange","maxWidth","sx","position","top","right","zIndex","display","alignItems","gap","size","onClick","width","height","p","border","background","palette","primary","main","boxShadow","mr","dark","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","flexDirection","mx","mb","transition","name","variant","color","fontWeight","fontSize","style","xmlns","viewBox","fill","marginRight","d","letterSpacing","flexGrow","my","justifyContent","onAddTask","currentPrompt","borderBottom","borderColor","value","onChange","label","onToggleTask","onToggleSubTask","onDeleteTask","onDeleteSubTask","onEditSubTask","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AuthHeader from './components/AuthHeader';\nimport { TaskWithSubTasks, SubTask, PromptSelection } from './services/geminiService';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport theme, { themes } from './theme';\nimport { createTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nexport interface Task { // Base Task interface (for potential future use without subtasks)\n  id: string;\n  title: string;\n  completed: boolean;\n}\n\ntype ThemeKey = 'sunbeam' | 'fresh' | 'night';\nconst themeKeys: ThemeKey[] = ['sunbeam', 'fresh', 'night'];\n\nimport { deleteUserTasks, deleteUserTasksById } from './services/supabaseTasksService';\n\nimport { useEffect as useEffectOriginal } from 'react';\n\nconst App: React.FC = () => {\n  // Set browser tab title\n  useEffectOriginal(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n\n  const [tasks, setTasks] = useState<TaskWithSubTasks[]>([]);\n  const [promptSelection, setPromptSelection] = useState<PromptSelection>('A');\n  const [user, setUser] = useState<any>(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState<ThemeKey>(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored as ThemeKey)) return stored as ThemeKey;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTab(newValue);\n  };\n\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks: TaskWithSubTasks[] = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async (taskId: string) => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter((task: any) => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks: TaskWithSubTasks[] = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks: TaskWithSubTasks[] = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map((task: any) => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async (taskData: Omit<TaskWithSubTasks, 'id' | 'completed'>) => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => ({...st, completed: st.completed ?? false }))\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal: TaskWithSubTasks = {\n      ...newTaskForSupabase,\n      id: tempId,\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({id, ...rest}) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async (taskId: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({ ...sub, completed: newCompletedStatus }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.filter(sub => sub.id !== subTaskId);\n        // If all subtasks gone, mark task incomplete\n        return { ...task, subTasks: updatedSubTasks, completed: updatedSubTasks.length > 0 ? updatedSubTasks.every(st => st.completed) : false };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask delete to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId: string, subTaskId: string | number, newTitle: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.map(sub => sub.id === subTaskId ? { ...sub, title: newTitle } : sub);\n        return { ...task, subTasks: updatedSubTasks };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask edit to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to toggle a single subtask and update parent task if needed\n  const handleToggleSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        let allSubTasksCompleted = true;\n        const updatedSubTasks = task.subTasks.map(sub => {\n          if (sub.id === subTaskId) {\n            const newSubCompletedStatus = !sub.completed;\n            if (!newSubCompletedStatus) allSubTasksCompleted = false;\n            return { ...sub, completed: newSubCompletedStatus };\n          } else {\n            if (!sub.completed) allSubTasksCompleted = false;\n          }\n          return sub;\n        });\n        return { ...task, subTasks: updatedSubTasks, completed: allSubTasksCompleted };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Function to toggle prompt\n  const togglePrompt = () => {\n    setPromptSelection(prev => (prev === 'A' ? 'B' : 'A'));\n  };\n\n  // Theme selector handlers\n  // Theme selector handlers\n  const handleThemeClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => setAnchorEl(null);\n  const handleThemeSelect = (key: ThemeKey) => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      {/* Restore AuthHeader for Google login and user state sync */}\n      <AuthHeader onAuthChange={setUser} />\n      <Container maxWidth=\"md\" sx={{ position: 'relative' }}>\n        {/* Version number in top right */}\n        <Box sx={{ position: 'absolute', top: 16, right: 24, zIndex: 10, display: 'flex', alignItems: 'center', gap: 2 }}>\n          {/* Theme Switcher */}\n          <IconButton\n            size=\"small\"\n            onClick={handleThemeClick}\n            sx={{\n              width: 28, height: 28, p: 0.5,\n              border: '2px solid #eee',\n              background: currentTheme.palette.primary.main,\n              boxShadow: 2,\n              mr: 1,\n              '&:hover': { boxShadow: 4, background: currentTheme.palette.primary.dark || currentTheme.palette.primary.main }\n            }}\n            aria-label=\"Change theme\"\n          />\n          <Popover\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            onClose={handleThemeClose}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n            PaperProps={{ sx: { p: 2, display: 'flex', gap: 2, boxShadow: 4 } }}\n          >\n            {themeKeys.map((key) => (\n              <Box key={key} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mx: 1 }}>\n                <IconButton\n                  size=\"small\"\n                  sx={{\n                    width: 32, height: 32, p: 0.5,\n                    border: themeKey === key ? '2.5px solid #333' : '2px solid #eee',\n                    background: themes[key].theme.palette.primary.main,\n                    boxShadow: themeKey === key ? 4 : 1,\n                    mb: 0.5,\n                    transition: 'border 0.2s, box-shadow 0.2s',\n                    '&:hover': { boxShadow: 6, background: themes[key].theme.palette.primary.dark || themes[key].theme.palette.primary.main }\n                  }}\n                  aria-label={`Switch to ${themes[key].name} theme`}\n                  onClick={() => handleThemeSelect(key)}\n                />\n                <Typography\n                  variant=\"caption\"\n                  sx={{ color: themeKey === key ? '#333' : '#888', fontWeight: themeKey === key ? 700 : 400, fontSize: 12 }}\n                  aria-label={themes[key].name}\n                >\n                  {themes[key].name}\n                </Typography>\n              </Box>\n            ))}\n          </Popover>\n          {/* Medal Icon and My Rewards */}\n          <span style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\" fill=\"#FFA000\" style={{ marginRight: 4 }}><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/></svg>\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>My Rewards</Typography>\n          </span>\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\" sx={{ letterSpacing: 1, flexGrow: 1 }}>\n            Bubu Do [preview]\n          </Typography>\n        </Box>\n        <Box sx={{ my: 4 }}>\n          {/* Prompt Toggle Button */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n            <Button variant=\"outlined\" onClick={togglePrompt}>\n              Using Prompt: {promptSelection} (Click to Switch)\n            </Button>\n          </Box>\n\n          <AddTaskForm onAddTask={addTask} currentPrompt={promptSelection} user={user} />\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n            <Tabs value={tab} onChange={handleTabChange} variant=\"fullWidth\">\n              <Tab label=\"To Do\" />\n              <Tab label=\"My Accomplishments\" />\n            </Tabs>\n          </Box>\n          {tab === 0 && (\n            // To Do: show only incomplete tasks\n            <TaskList \n              tasks={incompleteTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n          {tab === 1 && (\n            // My Accomplishments: show only completed tasks\n            <TaskList \n              tasks={completedTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n        </Box>\n      </Container>\n      <Snackbar open={mergeNotice} autoHideDuration={4000} onClose={() => setMergeNotice(false)} anchorOrigin={{vertical:'top',horizontal:'center'}}>\n        <Alert onClose={() => setMergeNotice(false)} severity=\"success\" sx={{ width: '100%' }}>\n          Local tasks have been uploaded and merged with your account!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={deleteNotice} autoHideDuration={3000} onClose={() => setDeleteNotice(false)} anchorOrigin={{vertical:'bottom',horizontal:'center'}}>\n        <Alert onClose={() => setDeleteNotice(false)} severity=\"info\" sx={{ width: '100%' }}>\n          Task deleted!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}