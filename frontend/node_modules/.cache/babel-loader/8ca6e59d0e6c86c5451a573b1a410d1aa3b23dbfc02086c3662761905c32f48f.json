{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Container,Typography,Box,Button,Snackbar,Alert,ThemeProvider,CssBaseline,Tabs,Tab}from'@mui/material';import TaskList from'./components/TaskList';import AddTaskForm from'./components/AddTaskForm';import AuthHeader from'./components/AuthHeader';import{fetchUserTasks,upsertUserTasks}from'./services/supabaseTasksService';import{themes}from'./theme';import Popover from'@mui/material/Popover';import IconButton from'@mui/material/IconButton';// App version: increment by 0.01 for each change\nconst APP_VERSION='0.5-preview';// Bubu Do [preview] version\nconst themeKeys=['sunbeam','fresh','night'];import{deleteUserTasksById}from'./services/supabaseTasksService';import{useEffect as useEffectOriginal}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// Set browser tab title\nuseEffectOriginal(()=>{document.title='Bubu Do [preview]';},[]);const[tasks,setTasks]=useState([]);const[promptSelection,setPromptSelection]=useState('A');const[user,setUser]=useState(null);const[mergeNotice,setMergeNotice]=useState(false);const[tab,setTab]=useState(0);// 0: My Tasks, 1: My Accomplishments\nconst[deleteNotice,setDeleteNotice]=useState(false);// Theme switcher state\n// Persist theme choice\nconst[themeKey,setThemeKey]=useState(()=>{const stored=localStorage.getItem('themeKey');if(stored&&themeKeys.includes(stored))return stored;return'sunbeam';});const[anchorEl,setAnchorEl]=useState(null);const currentTheme=themes[themeKey].theme;// Save theme to localStorage on change\nuseEffect(()=>{localStorage.setItem('themeKey',themeKey);},[themeKey]);const handleTabChange=(_event,newValue)=>{setTab(newValue);};const incompleteTasks=tasks.filter(t=>!t.completed);const completedTasks=tasks.filter(t=>t.completed);// Load tasks from localStorage on initial mount (if not logged in)\nuseEffect(()=>{if(!user){try{const storedTasks=localStorage.getItem('tasks');if(storedTasks){const parsedTasks=JSON.parse(storedTasks);// Convert dueDate strings back to Date objects\nconst tasksWithDates=parsedTasks.map(task=>({...task,dueDate:task.dueDate?new Date(task.dueDate):null}));setTasks(tasksWithDates);console.log('Tasks loaded from localStorage');}}catch(error){console.error('Failed to load tasks from localStorage:',error);}}},[user]);// Only run when user changes\n// Handler to delete a task\nconst handleDeleteTask=async taskId=>{try{setTasks(prev=>prev.filter(task=>task.id!==taskId));if(user&&user.id){// Delete from Supabase\n// (Assumes deleteUserTasks can be adapted to delete a single task by id)\nawait deleteUserTasksById(user.id,taskId);}else{// Update localStorage\nconst stored=localStorage.getItem('tasks');if(stored){const tasksArr=JSON.parse(stored).filter(task=>task.id!==taskId);localStorage.setItem('tasks',JSON.stringify(tasksArr));}}setDeleteNotice(true);}catch(err){console.error('Failed to delete task:',err);}};// Save tasks to localStorage only if not logged in\nuseEffect(()=>{if(!user){try{// Convert Date objects to ISO strings before saving\nconst tasksToStore=tasks.map(task=>({...task,dueDate:task.dueDate?task.dueDate.toISOString():null}));localStorage.setItem('tasks',JSON.stringify(tasksToStore));}catch(error){console.error('Failed to save tasks to localStorage:',error);}}},[tasks,user]);// On login: sync/merge local tasks to Supabase, then clear local\nuseEffect(()=>{const doSync=async()=>{if(user&&user.id){// 1. Fetch cloud tasks\nlet cloudTasks=[];try{cloudTasks=await fetchUserTasks(user.id);}catch(err){console.error('Failed to fetch cloud tasks:',err);}// 2. Load local tasks\nlet localTasks=[];try{const stored=localStorage.getItem('tasks');if(stored){localTasks=JSON.parse(stored).map(task=>({...task,dueDate:task.dueDate?new Date(task.dueDate):null}));}}catch{}// 3. Merge: find local tasks not in cloud by ID\nconst cloudIds=new Set(cloudTasks.map(t=>t.id));const newLocalTasks=localTasks.filter(t=>!cloudIds.has(t.id));let mergedTasks=[...cloudTasks,...newLocalTasks];if(newLocalTasks.length>0){// 4. Upload merged tasks to Supabase\ntry{await upsertUserTasks(user.id,mergedTasks);setMergeNotice(true);}catch(err){console.error('Failed to upload merged tasks:',err);}}// 5. Clear local storage and use cloud\nlocalStorage.removeItem('tasks');setTasks(mergedTasks);}};doSync();// eslint-disable-next-line\n},[user]);// Updated to accept task data object\nconst addTask=async taskData=>{// Do not generate a fake id for Supabase\nconst newTaskForSupabase={...taskData,completed:false,subTasks:taskData.subTasks.map(st=>{var _st$completed;return{...st,completed:(_st$completed=st.completed)!==null&&_st$completed!==void 0?_st$completed:false};})};// Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\nconst tempId=Date.now().toString()+Math.random().toString(36).substring(2,9);const newTaskForLocal={...newTaskForSupabase,id:tempId};const updatedTasks=[...tasks,newTaskForLocal];setTasks(updatedTasks);if(user&&user.id){try{// upsertUserTasks should not send the temp id, so filter it out before sending\nconst tasksForSupabase=updatedTasks.map(_ref=>{let{id,...rest}=_ref;return rest;});await upsertUserTasks(user.id,tasksForSupabase);}catch(err){console.error('Failed to sync new task to Supabase:',err);}}};// Handler to toggle main task and its subtasks\nconst handleToggleTask=async taskId=>{const updated=tasks.map(task=>{if(task.id===taskId){const newCompletedStatus=!task.completed;return{...task,completed:newCompletedStatus,subTasks:task.subTasks.map(sub=>({...sub,completed:newCompletedStatus}))};}return task;});setTasks(updated);if(user&&user.id){try{await upsertUserTasks(user.id,updated);}catch(err){console.error('Failed to sync toggle to Supabase:',err);}}};// Handler to delete a subtask\nconst handleDeleteSubTask=async(taskId,subTaskId)=>{const updated=tasks.map(task=>{if(task.id===taskId){const updatedSubTasks=task.subTasks.filter(sub=>sub.id!==subTaskId);// If all subtasks gone, mark task incomplete\nreturn{...task,subTasks:updatedSubTasks,completed:updatedSubTasks.length>0?updatedSubTasks.every(st=>st.completed):false};}return task;});setTasks(updated);if(user&&user.id){try{await upsertUserTasks(user.id,updated);}catch(err){console.error('Failed to sync subtask delete to Supabase:',err);}}else{localStorage.setItem('tasks',JSON.stringify(updated));}};// Handler to edit a subtask\nconst handleEditSubTask=async(taskId,subTaskId,newTitle)=>{const updated=tasks.map(task=>{if(task.id===taskId){const updatedSubTasks=task.subTasks.map(sub=>sub.id===subTaskId?{...sub,title:newTitle}:sub);return{...task,subTasks:updatedSubTasks};}return task;});setTasks(updated);if(user&&user.id){try{await upsertUserTasks(user.id,updated);}catch(err){console.error('Failed to sync subtask edit to Supabase:',err);}}else{localStorage.setItem('tasks',JSON.stringify(updated));}};// Handler to toggle a single subtask and update parent task if needed\nconst handleToggleSubTask=async(taskId,subTaskId)=>{const updated=tasks.map(task=>{if(task.id===taskId){let allSubTasksCompleted=true;const updatedSubTasks=task.subTasks.map(sub=>{if(sub.id===subTaskId){const newSubCompletedStatus=!sub.completed;if(!newSubCompletedStatus)allSubTasksCompleted=false;return{...sub,completed:newSubCompletedStatus};}else{if(!sub.completed)allSubTasksCompleted=false;}return sub;});return{...task,subTasks:updatedSubTasks,completed:allSubTasksCompleted};}return task;});setTasks(updated);if(user&&user.id){try{await upsertUserTasks(user.id,updated);}catch(err){console.error('Failed to sync subtask toggle to Supabase:',err);}}};// Function to toggle prompt\nconst togglePrompt=()=>{setPromptSelection(prev=>prev==='A'?'B':'A');};// Theme selector handlers\n// Theme selector handlers\nconst handleThemeClick=event=>{setAnchorEl(event.currentTarget);};const handleThemeClose=()=>setAnchorEl(null);const handleThemeSelect=key=>{setThemeKey(key);setAnchorEl(null);};return/*#__PURE__*/_jsxs(ThemeProvider,{theme:currentTheme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(AuthHeader,{onAuthChange:setUser}),/*#__PURE__*/_jsxs(Container,{maxWidth:\"md\",sx:{position:'relative'},children:[/*#__PURE__*/_jsxs(Box,{sx:{position:'absolute',top:16,right:24,zIndex:10,display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:handleThemeClick,sx:{width:28,height:28,p:0.5,border:'2px solid #eee',background:currentTheme.palette.primary.main,boxShadow:2,mr:1,'&:hover':{boxShadow:4,background:currentTheme.palette.primary.dark||currentTheme.palette.primary.main}},\"aria-label\":\"Change theme\"}),/*#__PURE__*/_jsx(Popover,{open:Boolean(anchorEl),anchorEl:anchorEl,onClose:handleThemeClose,anchorOrigin:{vertical:'bottom',horizontal:'left'},transformOrigin:{vertical:'top',horizontal:'left'},PaperProps:{sx:{p:2,display:'flex',gap:2,boxShadow:4}},children:themeKeys.map(key=>/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',mx:1},children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{width:32,height:32,p:0.5,border:themeKey===key?'2.5px solid #333':'2px solid #eee',background:themes[key].theme.palette.primary.main,boxShadow:themeKey===key?4:1,mb:0.5,transition:'border 0.2s, box-shadow 0.2s','&:hover':{boxShadow:6,background:themes[key].theme.palette.primary.dark||themes[key].theme.palette.primary.main}},\"aria-label\":`Switch to ${themes[key].name} theme`,onClick:()=>handleThemeSelect(key)}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",sx:{color:themeKey===key?'#333':'#888',fontWeight:themeKey===key?700:400,fontSize:12},\"aria-label\":themes[key].name,children:themes[key].name})]},key))}),/*#__PURE__*/_jsxs(\"span\",{style:{display:'flex',alignItems:'center',gap:4},children:[/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",height:\"20\",viewBox:\"0 0 24 24\",width:\"20\",fill:\"#FFA000\",style:{marginRight:4},children:[/*#__PURE__*/_jsx(\"path\",{d:\"M0 0h24v24H0z\",fill:\"none\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{fontWeight:600},children:\"My Rewards\"})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",fontWeight:700,color:\"primary\",sx:{letterSpacing:1,flexGrow:1},children:\"Bubu Do [preview]\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{my:4},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mb:2},children:/*#__PURE__*/_jsxs(Button,{variant:\"outlined\",onClick:togglePrompt,children:[\"Using Prompt: \",promptSelection,\" (Click to Switch)\"]})}),/*#__PURE__*/_jsx(AddTaskForm,{onAddTask:addTask,currentPrompt:promptSelection,user:user}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:2},children:/*#__PURE__*/_jsxs(Tabs,{value:tab,onChange:handleTabChange,variant:\"fullWidth\",children:[/*#__PURE__*/_jsx(Tab,{label:\"To Do\"}),/*#__PURE__*/_jsx(Tab,{label:\"My Accomplishments\"})]})}),tab===0&&/*#__PURE__*/// To Do: show only incomplete tasks\n_jsx(TaskList,{tasks:incompleteTasks,onToggleTask:handleToggleTask,onToggleSubTask:handleToggleSubTask,onDeleteTask:handleDeleteTask,onDeleteSubTask:handleDeleteSubTask,onEditSubTask:handleEditSubTask,user:user}),tab===1&&/*#__PURE__*/// My Accomplishments: show only completed tasks\n_jsx(TaskList,{tasks:completedTasks,onToggleTask:handleToggleTask,onToggleSubTask:handleToggleSubTask,onDeleteTask:handleDeleteTask,onDeleteSubTask:handleDeleteSubTask,onEditSubTask:handleEditSubTask,user:user})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:mergeNotice,autoHideDuration:4000,onClose:()=>setMergeNotice(false),anchorOrigin:{vertical:'top',horizontal:'center'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setMergeNotice(false),severity:\"success\",sx:{width:'100%'},children:\"Local tasks have been uploaded and merged with your account!\"})}),/*#__PURE__*/_jsx(Snackbar,{open:deleteNotice,autoHideDuration:3000,onClose:()=>setDeleteNotice(false),anchorOrigin:{vertical:'bottom',horizontal:'center'},children:/*#__PURE__*/_jsx(Alert,{onClose:()=>setDeleteNotice(false),severity:\"info\",sx:{width:'100%'},children:\"Task deleted!\"})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Button","Snackbar","Alert","ThemeProvider","CssBaseline","Tabs","Tab","TaskList","AddTaskForm","AuthHeader","fetchUserTasks","upsertUserTasks","themes","Popover","IconButton","APP_VERSION","themeKeys","deleteUserTasksById","useEffectOriginal","jsx","_jsx","jsxs","_jsxs","App","document","title","tasks","setTasks","promptSelection","setPromptSelection","user","setUser","mergeNotice","setMergeNotice","tab","setTab","deleteNotice","setDeleteNotice","themeKey","setThemeKey","stored","localStorage","getItem","includes","anchorEl","setAnchorEl","currentTheme","theme","setItem","handleTabChange","_event","newValue","incompleteTasks","filter","t","completed","completedTasks","storedTasks","parsedTasks","JSON","parse","tasksWithDates","map","task","dueDate","Date","console","log","error","handleDeleteTask","taskId","prev","id","tasksArr","stringify","err","tasksToStore","toISOString","doSync","cloudTasks","localTasks","cloudIds","Set","newLocalTasks","has","mergedTasks","length","removeItem","addTask","taskData","newTaskForSupabase","subTasks","st","_st$completed","tempId","now","toString","Math","random","substring","newTaskForLocal","updatedTasks","tasksForSupabase","_ref","rest","handleToggleTask","updated","newCompletedStatus","sub","handleDeleteSubTask","subTaskId","updatedSubTasks","every","handleEditSubTask","newTitle","handleToggleSubTask","allSubTasksCompleted","newSubCompletedStatus","togglePrompt","handleThemeClick","event","currentTarget","handleThemeClose","handleThemeSelect","key","children","onAuthChange","maxWidth","sx","position","top","right","zIndex","display","alignItems","gap","size","onClick","width","height","p","border","background","palette","primary","main","boxShadow","mr","dark","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","flexDirection","mx","mb","transition","name","variant","color","fontWeight","fontSize","style","xmlns","viewBox","fill","marginRight","d","letterSpacing","flexGrow","my","justifyContent","onAddTask","currentPrompt","borderBottom","borderColor","value","onChange","label","onToggleTask","onToggleSubTask","onDeleteTask","onDeleteSubTask","onEditSubTask","autoHideDuration","severity"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Button, Snackbar, Alert, ThemeProvider, CssBaseline, Tabs, Tab } from '@mui/material';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AuthHeader from './components/AuthHeader';\nimport { TaskWithSubTasks, SubTask, PromptSelection } from './services/geminiService';\nimport { fetchUserTasks, upsertUserTasks } from './services/supabaseTasksService';\nimport theme, { themes } from './theme';\nimport { createTheme } from '@mui/material/styles';\nimport Popover from '@mui/material/Popover';\nimport IconButton from '@mui/material/IconButton';\n\n// App version: increment by 0.01 for each change\nconst APP_VERSION = '0.5-preview'; // Bubu Do [preview] version\n\nexport interface Task { // Base Task interface (for potential future use without subtasks)\n  id: string;\n  title: string;\n  completed: boolean;\n}\n\ntype ThemeKey = 'sunbeam' | 'fresh' | 'night';\nconst themeKeys: ThemeKey[] = ['sunbeam', 'fresh', 'night'];\n\nimport { deleteUserTasks, deleteUserTasksById } from './services/supabaseTasksService';\n\nimport { useEffect as useEffectOriginal } from 'react';\n\nconst App: React.FC = () => {\n  // Set browser tab title\n  useEffectOriginal(() => {\n    document.title = 'Bubu Do [preview]';\n  }, []);\n\n  const [tasks, setTasks] = useState<TaskWithSubTasks[]>([]);\n  const [promptSelection, setPromptSelection] = useState<PromptSelection>('A');\n  const [user, setUser] = useState<any>(null);\n  const [mergeNotice, setMergeNotice] = useState(false);\n  const [tab, setTab] = useState(0); // 0: My Tasks, 1: My Accomplishments\n  const [deleteNotice, setDeleteNotice] = useState(false);\n\n  // Theme switcher state\n  // Persist theme choice\n  const [themeKey, setThemeKey] = useState<ThemeKey>(() => {\n    const stored = localStorage.getItem('themeKey');\n    if (stored && themeKeys.includes(stored as ThemeKey)) return stored as ThemeKey;\n    return 'sunbeam';\n  });\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const currentTheme = themes[themeKey].theme;\n\n  // Save theme to localStorage on change\n  useEffect(() => {\n    localStorage.setItem('themeKey', themeKey);\n  }, [themeKey]);\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setTab(newValue);\n  };\n\n  const incompleteTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n\n  // Load tasks from localStorage on initial mount (if not logged in)\n  useEffect(() => {\n    if (!user) {\n      try {\n        const storedTasks = localStorage.getItem('tasks');\n        if (storedTasks) {\n          const parsedTasks: TaskWithSubTasks[] = JSON.parse(storedTasks);\n          // Convert dueDate strings back to Date objects\n          const tasksWithDates = parsedTasks.map(task => ({\n            ...task,\n            dueDate: task.dueDate ? new Date(task.dueDate) : null\n          }));\n          setTasks(tasksWithDates);\n          console.log('Tasks loaded from localStorage');\n        }\n      } catch (error) {\n        console.error('Failed to load tasks from localStorage:', error);\n      }\n    }\n  }, [user]); // Only run when user changes\n\n  // Handler to delete a task\n  const handleDeleteTask = async (taskId: string) => {\n    try {\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if (user && user.id) {\n        // Delete from Supabase\n        // (Assumes deleteUserTasks can be adapted to delete a single task by id)\n        await deleteUserTasksById(user.id, taskId);\n      } else {\n        // Update localStorage\n        const stored = localStorage.getItem('tasks');\n        if (stored) {\n          const tasksArr = JSON.parse(stored).filter((task: any) => task.id !== taskId);\n          localStorage.setItem('tasks', JSON.stringify(tasksArr));\n        }\n      }\n      setDeleteNotice(true);\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  // Save tasks to localStorage only if not logged in\n  useEffect(() => {\n    if (!user) {\n      try {\n        // Convert Date objects to ISO strings before saving\n        const tasksToStore = tasks.map(task => ({\n          ...task,\n          dueDate: task.dueDate ? task.dueDate.toISOString() : null\n        }));\n        localStorage.setItem('tasks', JSON.stringify(tasksToStore));\n      } catch (error) {\n        console.error('Failed to save tasks to localStorage:', error);\n      }\n    }\n  }, [tasks, user]);\n\n  // On login: sync/merge local tasks to Supabase, then clear local\n  useEffect(() => {\n    const doSync = async () => {\n      if (user && user.id) {\n        // 1. Fetch cloud tasks\n        let cloudTasks: TaskWithSubTasks[] = [];\n        try {\n          cloudTasks = await fetchUserTasks(user.id);\n        } catch (err) {\n          console.error('Failed to fetch cloud tasks:', err);\n        }\n        // 2. Load local tasks\n        let localTasks: TaskWithSubTasks[] = [];\n        try {\n          const stored = localStorage.getItem('tasks');\n          if (stored) {\n            localTasks = JSON.parse(stored).map((task: any) => ({\n              ...task,\n              dueDate: task.dueDate ? new Date(task.dueDate) : null\n            }));\n          }\n        } catch {}\n        // 3. Merge: find local tasks not in cloud by ID\n        const cloudIds = new Set(cloudTasks.map(t => t.id));\n        const newLocalTasks = localTasks.filter(t => !cloudIds.has(t.id));\n        let mergedTasks = [...cloudTasks, ...newLocalTasks];\n        if (newLocalTasks.length > 0) {\n          // 4. Upload merged tasks to Supabase\n          try {\n            await upsertUserTasks(user.id, mergedTasks);\n            setMergeNotice(true);\n          } catch (err) {\n            console.error('Failed to upload merged tasks:', err);\n          }\n        }\n        // 5. Clear local storage and use cloud\n        localStorage.removeItem('tasks');\n        setTasks(mergedTasks);\n      }\n    };\n    doSync();\n    // eslint-disable-next-line\n  }, [user]);\n\n  // Updated to accept task data object\n  const addTask = async (taskData: Omit<TaskWithSubTasks, 'id' | 'completed'>) => {\n    // Do not generate a fake id for Supabase\n    const newTaskForSupabase = {\n      ...taskData,\n      completed: false,\n      subTasks: taskData.subTasks.map(st => ({...st, completed: st.completed ?? false }))\n    };\n    // Locally, temporarily assign a random id for optimistic UI (will be replaced on sync)\n    const tempId = Date.now().toString() + Math.random().toString(36).substring(2, 9);\n    const newTaskForLocal: TaskWithSubTasks = {\n      ...newTaskForSupabase,\n      id: tempId,\n    };\n    const updatedTasks = [...tasks, newTaskForLocal];\n    setTasks(updatedTasks);\n    if (user && user.id) {\n      try {\n        // upsertUserTasks should not send the temp id, so filter it out before sending\n        const tasksForSupabase = updatedTasks.map(({id, ...rest}) => rest);\n        await upsertUserTasks(user.id, tasksForSupabase);\n      } catch (err) {\n        console.error('Failed to sync new task to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to toggle main task and its subtasks\n  const handleToggleTask = async (taskId: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const newCompletedStatus = !task.completed;\n        return {\n          ...task,\n          completed: newCompletedStatus,\n          subTasks: task.subTasks.map(sub => ({ ...sub, completed: newCompletedStatus }))\n        };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Handler to delete a subtask\n  const handleDeleteSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.filter(sub => sub.id !== subTaskId);\n        // If all subtasks gone, mark task incomplete\n        return { ...task, subTasks: updatedSubTasks, completed: updatedSubTasks.length > 0 ? updatedSubTasks.every(st => st.completed) : false };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask delete to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to edit a subtask\n  const handleEditSubTask = async (taskId: string, subTaskId: string | number, newTitle: string) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        const updatedSubTasks = task.subTasks.map(sub => sub.id === subTaskId ? { ...sub, title: newTitle } : sub);\n        return { ...task, subTasks: updatedSubTasks };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask edit to Supabase:', err);\n      }\n    } else {\n      localStorage.setItem('tasks', JSON.stringify(updated));\n    }\n  };\n\n  // Handler to toggle a single subtask and update parent task if needed\n  const handleToggleSubTask = async (taskId: string, subTaskId: string | number) => {\n    const updated = tasks.map(task => {\n      if (task.id === taskId) {\n        let allSubTasksCompleted = true;\n        const updatedSubTasks = task.subTasks.map(sub => {\n          if (sub.id === subTaskId) {\n            const newSubCompletedStatus = !sub.completed;\n            if (!newSubCompletedStatus) allSubTasksCompleted = false;\n            return { ...sub, completed: newSubCompletedStatus };\n          } else {\n            if (!sub.completed) allSubTasksCompleted = false;\n          }\n          return sub;\n        });\n        return { ...task, subTasks: updatedSubTasks, completed: allSubTasksCompleted };\n      }\n      return task;\n    });\n    setTasks(updated);\n    if (user && user.id) {\n      try {\n        await upsertUserTasks(user.id, updated);\n      } catch (err) {\n        console.error('Failed to sync subtask toggle to Supabase:', err);\n      }\n    }\n  };\n\n  // Function to toggle prompt\n  const togglePrompt = () => {\n    setPromptSelection(prev => (prev === 'A' ? 'B' : 'A'));\n  };\n\n  // Theme selector handlers\n  // Theme selector handlers\n  const handleThemeClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleThemeClose = () => setAnchorEl(null);\n  const handleThemeSelect = (key: ThemeKey) => {\n    setThemeKey(key);\n    setAnchorEl(null);\n  };\n\n\n  return (\n    <ThemeProvider theme={currentTheme}>\n      <CssBaseline />\n      {/* Restore AuthHeader for Google login and user state sync */}\n      <AuthHeader onAuthChange={setUser} />\n      <Container maxWidth=\"md\" sx={{ position: 'relative' }}>\n        {/* Version number in top right */}\n        <Box sx={{ position: 'absolute', top: 16, right: 24, zIndex: 10, display: 'flex', alignItems: 'center', gap: 2 }}>\n          {/* Theme Switcher */}\n          <IconButton\n            size=\"small\"\n            onClick={handleThemeClick}\n            sx={{\n              width: 28, height: 28, p: 0.5,\n              border: '2px solid #eee',\n              background: currentTheme.palette.primary.main,\n              boxShadow: 2,\n              mr: 1,\n              '&:hover': { boxShadow: 4, background: currentTheme.palette.primary.dark || currentTheme.palette.primary.main }\n            }}\n            aria-label=\"Change theme\"\n          />\n          <Popover\n            open={Boolean(anchorEl)}\n            anchorEl={anchorEl}\n            onClose={handleThemeClose}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            transformOrigin={{ vertical: 'top', horizontal: 'left' }}\n            PaperProps={{ sx: { p: 2, display: 'flex', gap: 2, boxShadow: 4 } }}\n          >\n            {themeKeys.map((key) => (\n              <Box key={key} sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', mx: 1 }}>\n                <IconButton\n                  size=\"small\"\n                  sx={{\n                    width: 32, height: 32, p: 0.5,\n                    border: themeKey === key ? '2.5px solid #333' : '2px solid #eee',\n                    background: themes[key].theme.palette.primary.main,\n                    boxShadow: themeKey === key ? 4 : 1,\n                    mb: 0.5,\n                    transition: 'border 0.2s, box-shadow 0.2s',\n                    '&:hover': { boxShadow: 6, background: themes[key].theme.palette.primary.dark || themes[key].theme.palette.primary.main }\n                  }}\n                  aria-label={`Switch to ${themes[key].name} theme`}\n                  onClick={() => handleThemeSelect(key)}\n                />\n                <Typography\n                  variant=\"caption\"\n                  sx={{ color: themeKey === key ? '#333' : '#888', fontWeight: themeKey === key ? 700 : 400, fontSize: 12 }}\n                  aria-label={themes[key].name}\n                >\n                  {themes[key].name}\n                </Typography>\n              </Box>\n            ))}\n          </Popover>\n          {/* Medal Icon and My Rewards */}\n          <span style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" viewBox=\"0 0 24 24\" width=\"20\" fill=\"#FFA000\" style={{ marginRight: 4 }}><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"/></svg>\n            <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>My Rewards</Typography>\n          </span>\n          <Typography variant=\"h5\" fontWeight={700} color=\"primary\" sx={{ letterSpacing: 1, flexGrow: 1 }}>\n            Bubu Do [preview]\n          </Typography>\n        </Box>\n        <Box sx={{ my: 4 }}>\n          {/* Prompt Toggle Button */}\n          <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n            <Button variant=\"outlined\" onClick={togglePrompt}>\n              Using Prompt: {promptSelection} (Click to Switch)\n            </Button>\n          </Box>\n\n          <AddTaskForm onAddTask={addTask} currentPrompt={promptSelection} user={user} />\n          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n            <Tabs value={tab} onChange={handleTabChange} variant=\"fullWidth\">\n              <Tab label=\"To Do\" />\n              <Tab label=\"My Accomplishments\" />\n            </Tabs>\n          </Box>\n          {tab === 0 && (\n            // To Do: show only incomplete tasks\n            <TaskList \n              tasks={incompleteTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n          {tab === 1 && (\n            // My Accomplishments: show only completed tasks\n            <TaskList \n              tasks={completedTasks} \n              onToggleTask={handleToggleTask} \n              onToggleSubTask={handleToggleSubTask} \n              onDeleteTask={handleDeleteTask}\n              onDeleteSubTask={handleDeleteSubTask}\n              onEditSubTask={handleEditSubTask}\n              user={user} \n            />\n          )}\n        </Box>\n      </Container>\n      <Snackbar open={mergeNotice} autoHideDuration={4000} onClose={() => setMergeNotice(false)} anchorOrigin={{vertical:'top',horizontal:'center'}}>\n        <Alert onClose={() => setMergeNotice(false)} severity=\"success\" sx={{ width: '100%' }}>\n          Local tasks have been uploaded and merged with your account!\n        </Alert>\n      </Snackbar>\n      <Snackbar open={deleteNotice} autoHideDuration={3000} onClose={() => setDeleteNotice(false)} anchorOrigin={{vertical:'bottom',horizontal:'center'}}>\n        <Alert onClose={() => setDeleteNotice(false)} severity=\"info\" sx={{ width: '100%' }}>\n          Task deleted!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}