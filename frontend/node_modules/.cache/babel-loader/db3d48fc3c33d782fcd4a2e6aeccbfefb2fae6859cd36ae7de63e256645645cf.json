{"ast":null,"code":"import { Meridiem } from \"../types.js\";\nimport { assignSimilarDate, implySimilarDate } from \"../utils/dayjs.js\";\nexport function mergeDateTimeResult(dateResult, timeResult) {\n  const result = dateResult.clone();\n  const beginDate = dateResult.start;\n  const beginTime = timeResult.start;\n  result.start = mergeDateTimeComponent(beginDate, beginTime);\n  if (dateResult.end != null || timeResult.end != null) {\n    const endDate = dateResult.end == null ? dateResult.start : dateResult.end;\n    const endTime = timeResult.end == null ? timeResult.start : timeResult.end;\n    const endDateTime = mergeDateTimeComponent(endDate, endTime);\n    if (dateResult.end == null && endDateTime.date().getTime() < result.start.date().getTime()) {\n      const nextDayJs = endDateTime.dayjs().add(1, \"day\");\n      if (endDateTime.isCertain(\"day\")) {\n        assignSimilarDate(endDateTime, nextDayJs);\n      } else {\n        implySimilarDate(endDateTime, nextDayJs);\n      }\n    }\n    result.end = endDateTime;\n  }\n  return result;\n}\nexport function mergeDateTimeComponent(dateComponent, timeComponent) {\n  const dateTimeComponent = dateComponent.clone();\n  if (timeComponent.isCertain(\"hour\")) {\n    dateTimeComponent.assign(\"hour\", timeComponent.get(\"hour\"));\n    dateTimeComponent.assign(\"minute\", timeComponent.get(\"minute\"));\n    if (timeComponent.isCertain(\"second\")) {\n      dateTimeComponent.assign(\"second\", timeComponent.get(\"second\"));\n      if (timeComponent.isCertain(\"millisecond\")) {\n        dateTimeComponent.assign(\"millisecond\", timeComponent.get(\"millisecond\"));\n      } else {\n        dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n      }\n    } else {\n      dateTimeComponent.imply(\"second\", timeComponent.get(\"second\"));\n      dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n    }\n  } else {\n    dateTimeComponent.imply(\"hour\", timeComponent.get(\"hour\"));\n    dateTimeComponent.imply(\"minute\", timeComponent.get(\"minute\"));\n    dateTimeComponent.imply(\"second\", timeComponent.get(\"second\"));\n    dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n  }\n  if (timeComponent.isCertain(\"timezoneOffset\")) {\n    dateTimeComponent.assign(\"timezoneOffset\", timeComponent.get(\"timezoneOffset\"));\n  }\n  if (timeComponent.isCertain(\"meridiem\")) {\n    dateTimeComponent.assign(\"meridiem\", timeComponent.get(\"meridiem\"));\n  } else if (timeComponent.get(\"meridiem\") != null && dateTimeComponent.get(\"meridiem\") == null) {\n    dateTimeComponent.imply(\"meridiem\", timeComponent.get(\"meridiem\"));\n  }\n  if (dateTimeComponent.get(\"meridiem\") == Meridiem.PM && dateTimeComponent.get(\"hour\") < 12) {\n    if (timeComponent.isCertain(\"hour\")) {\n      dateTimeComponent.assign(\"hour\", dateTimeComponent.get(\"hour\") + 12);\n    } else {\n      dateTimeComponent.imply(\"hour\", dateTimeComponent.get(\"hour\") + 12);\n    }\n  }\n  dateTimeComponent.addTags(dateComponent.tags());\n  dateTimeComponent.addTags(timeComponent.tags());\n  return dateTimeComponent;\n}","map":{"version":3,"names":["Meridiem","assignSimilarDate","implySimilarDate","mergeDateTimeResult","dateResult","timeResult","result","clone","beginDate","start","beginTime","mergeDateTimeComponent","end","endDate","endTime","endDateTime","date","getTime","nextDayJs","dayjs","add","isCertain","dateComponent","timeComponent","dateTimeComponent","assign","get","imply","PM","addTags","tags"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/calculation/mergingCalculation.ts"],"sourcesContent":["import { ParsingComponents, ParsingResult } from \"../results\";\nimport { Meridiem } from \"../types\";\nimport { assignSimilarDate, implySimilarDate } from \"../utils/dayjs\";\n\nexport function mergeDateTimeResult(dateResult: ParsingResult, timeResult: ParsingResult): ParsingResult {\n    const result = dateResult.clone();\n    const beginDate = dateResult.start;\n    const beginTime = timeResult.start;\n\n    result.start = mergeDateTimeComponent(beginDate, beginTime);\n    if (dateResult.end != null || timeResult.end != null) {\n        const endDate = dateResult.end == null ? dateResult.start : dateResult.end;\n        const endTime = timeResult.end == null ? timeResult.start : timeResult.end;\n        const endDateTime = mergeDateTimeComponent(endDate, endTime);\n\n        if (dateResult.end == null && endDateTime.date().getTime() < result.start.date().getTime()) {\n            // For example,  \"Tuesday 9pm - 1am\" the ending should actually be 1am on the next day.\n            // We need to add to ending by another day.\n            const nextDayJs = endDateTime.dayjs().add(1, \"day\");\n            if (endDateTime.isCertain(\"day\")) {\n                assignSimilarDate(endDateTime, nextDayJs);\n            } else {\n                implySimilarDate(endDateTime, nextDayJs);\n            }\n        }\n\n        result.end = endDateTime;\n    }\n\n    return result;\n}\n\nexport function mergeDateTimeComponent(\n    dateComponent: ParsingComponents,\n    timeComponent: ParsingComponents\n): ParsingComponents {\n    const dateTimeComponent = dateComponent.clone();\n\n    if (timeComponent.isCertain(\"hour\")) {\n        dateTimeComponent.assign(\"hour\", timeComponent.get(\"hour\"));\n        dateTimeComponent.assign(\"minute\", timeComponent.get(\"minute\"));\n\n        if (timeComponent.isCertain(\"second\")) {\n            dateTimeComponent.assign(\"second\", timeComponent.get(\"second\"));\n\n            if (timeComponent.isCertain(\"millisecond\")) {\n                dateTimeComponent.assign(\"millisecond\", timeComponent.get(\"millisecond\"));\n            } else {\n                dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n            }\n        } else {\n            dateTimeComponent.imply(\"second\", timeComponent.get(\"second\"));\n            dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n        }\n    } else {\n        dateTimeComponent.imply(\"hour\", timeComponent.get(\"hour\"));\n        dateTimeComponent.imply(\"minute\", timeComponent.get(\"minute\"));\n        dateTimeComponent.imply(\"second\", timeComponent.get(\"second\"));\n        dateTimeComponent.imply(\"millisecond\", timeComponent.get(\"millisecond\"));\n    }\n\n    if (timeComponent.isCertain(\"timezoneOffset\")) {\n        dateTimeComponent.assign(\"timezoneOffset\", timeComponent.get(\"timezoneOffset\"));\n    }\n\n    if (timeComponent.isCertain(\"meridiem\")) {\n        dateTimeComponent.assign(\"meridiem\", timeComponent.get(\"meridiem\"));\n    } else if (timeComponent.get(\"meridiem\") != null && dateTimeComponent.get(\"meridiem\") == null) {\n        dateTimeComponent.imply(\"meridiem\", timeComponent.get(\"meridiem\"));\n    }\n\n    if (dateTimeComponent.get(\"meridiem\") == Meridiem.PM && dateTimeComponent.get(\"hour\") < 12) {\n        if (timeComponent.isCertain(\"hour\")) {\n            dateTimeComponent.assign(\"hour\", dateTimeComponent.get(\"hour\") + 12);\n        } else {\n            dateTimeComponent.imply(\"hour\", dateTimeComponent.get(\"hour\") + 12);\n        }\n    }\n\n    dateTimeComponent.addTags(dateComponent.tags());\n    dateTimeComponent.addTags(timeComponent.tags());\n    return dateTimeComponent;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}