{"ast":null,"code":"import { matchAnyPattern, repeatedTimeunitPattern } from \"../../utils/pattern.js\";\nimport { findMostLikelyADYear } from \"../../calculation/years.js\";\nexport const REGEX_PARTS = {\n  leftBoundary: \"([^\\\\p{L}\\\\p{N}_]|^)\",\n  rightBoundary: \"(?=[^\\\\p{L}\\\\p{N}_]|$)\",\n  flags: \"iu\"\n};\nexport const WEEKDAY_DICTIONARY = {\n  \"неділя\": 0,\n  \"неділі\": 0,\n  \"неділю\": 0,\n  \"нд\": 0,\n  \"нд.\": 0,\n  \"понеділок\": 1,\n  \"понеділка\": 1,\n  \"пн\": 1,\n  \"пн.\": 1,\n  \"вівторок\": 2,\n  \"вівторка\": 2,\n  \"вт\": 2,\n  \"вт.\": 2,\n  \"середа\": 3,\n  \"середи\": 3,\n  \"середу\": 3,\n  \"ср\": 3,\n  \"ср.\": 3,\n  \"четвер\": 4,\n  \"четверга\": 4,\n  \"четвергу\": 4,\n  \"чт\": 4,\n  \"чт.\": 4,\n  \"п'ятниця\": 5,\n  \"п'ятниці\": 5,\n  \"п'ятницю\": 5,\n  \"пт\": 5,\n  \"пт.\": 5,\n  \"субота\": 6,\n  \"суботи\": 6,\n  \"суботу\": 6,\n  \"сб\": 6,\n  \"сб.\": 6\n};\nexport const FULL_MONTH_NAME_DICTIONARY = {\n  \"січень\": 1,\n  \"січня\": 1,\n  \"січні\": 1,\n  \"лютий\": 2,\n  \"лютого\": 2,\n  \"лютому\": 2,\n  \"березень\": 3,\n  \"березня\": 3,\n  \"березні\": 3,\n  \"квітень\": 4,\n  \"квітня\": 4,\n  \"квітні\": 4,\n  \"травень\": 5,\n  \"травня\": 5,\n  \"травні\": 5,\n  \"червень\": 6,\n  \"червня\": 6,\n  \"червні\": 6,\n  \"липень\": 7,\n  \"липня\": 7,\n  \"липні\": 7,\n  \"серпень\": 8,\n  \"серпня\": 8,\n  \"серпні\": 8,\n  \"вересень\": 9,\n  \"вересня\": 9,\n  \"вересні\": 9,\n  \"жовтень\": 10,\n  \"жовтня\": 10,\n  \"жовтні\": 10,\n  \"листопад\": 11,\n  \"листопада\": 11,\n  \"листопаду\": 11,\n  \"грудень\": 12,\n  \"грудня\": 12,\n  \"грудні\": 12\n};\nexport const MONTH_DICTIONARY = {\n  ...FULL_MONTH_NAME_DICTIONARY,\n  \"січ\": 1,\n  \"січ.\": 1,\n  \"лют\": 2,\n  \"лют.\": 2,\n  \"бер\": 3,\n  \"бер.\": 3,\n  \"квіт\": 4,\n  \"квіт.\": 4,\n  \"трав\": 5,\n  \"трав.\": 5,\n  \"черв\": 6,\n  \"черв.\": 6,\n  \"лип\": 7,\n  \"лип.\": 7,\n  \"серп\": 8,\n  \"серп.\": 8,\n  \"сер\": 8,\n  \"cер.\": 8,\n  \"вер\": 9,\n  \"вер.\": 9,\n  \"верес\": 9,\n  \"верес.\": 9,\n  \"жовт\": 10,\n  \"жовт.\": 10,\n  \"листоп\": 11,\n  \"листоп.\": 11,\n  \"груд\": 12,\n  \"груд.\": 12\n};\nexport const INTEGER_WORD_DICTIONARY = {\n  \"один\": 1,\n  \"одна\": 1,\n  \"одної\": 1,\n  \"одну\": 1,\n  \"дві\": 2,\n  \"два\": 2,\n  \"двох\": 2,\n  \"три\": 3,\n  \"трьох\": 3,\n  \"чотири\": 4,\n  \"чотирьох\": 4,\n  \"п'ять\": 5,\n  \"п'яти\": 5,\n  \"шість\": 6,\n  \"шести\": 6,\n  \"сім\": 7,\n  \"семи\": 7,\n  \"вісім\": 8,\n  \"восьми\": 8,\n  \"дев'ять\": 9,\n  \"дев'яти\": 9,\n  \"десять\": 10,\n  \"десяти\": 10,\n  \"одинадцять\": 11,\n  \"одинадцяти\": 11,\n  \"дванадцять\": 12,\n  \"дванадцяти\": 12\n};\nexport const ORDINAL_WORD_DICTIONARY = {\n  \"перше\": 1,\n  \"першого\": 1,\n  \"друге\": 2,\n  \"другого\": 2,\n  \"третє\": 3,\n  \"третього\": 3,\n  \"четверте\": 4,\n  \"четвертого\": 4,\n  \"п'яте\": 5,\n  \"п'ятого\": 5,\n  \"шосте\": 6,\n  \"шостого\": 6,\n  \"сьоме\": 7,\n  \"сьомого\": 7,\n  \"восьме\": 8,\n  \"восьмого\": 8,\n  \"дев'яте\": 9,\n  \"дев'ятого\": 9,\n  \"десяте\": 10,\n  \"десятого\": 10,\n  \"одинадцяте\": 11,\n  \"одинадцятого\": 11,\n  \"дванадцяте\": 12,\n  \"дванадцятого\": 12,\n  \"тринадцяте\": 13,\n  \"тринадцятого\": 13,\n  \"чотирнадцяте\": 14,\n  \"чотинрнадцятого\": 14,\n  \"п'ятнадцяте\": 15,\n  \"п'ятнадцятого\": 15,\n  \"шістнадцяте\": 16,\n  \"шістнадцятого\": 16,\n  \"сімнадцяте\": 17,\n  \"сімнадцятого\": 17,\n  \"вісімнадцяте\": 18,\n  \"вісімнадцятого\": 18,\n  \"дев'ятнадцяте\": 19,\n  \"дев'ятнадцятого\": 19,\n  \"двадцяте\": 20,\n  \"двадцятого\": 20,\n  \"двадцять перше\": 21,\n  \"двадцять першого\": 21,\n  \"двадцять друге\": 22,\n  \"двадцять другого\": 22,\n  \"двадцять третє\": 23,\n  \"двадцять третього\": 23,\n  \"двадцять четверте\": 24,\n  \"двадцять четвертого\": 24,\n  \"двадцять п'яте\": 25,\n  \"двадцять п'ятого\": 25,\n  \"двадцять шосте\": 26,\n  \"двадцять шостого\": 26,\n  \"двадцять сьоме\": 27,\n  \"двадцять сьомого\": 27,\n  \"двадцять восьме\": 28,\n  \"двадцять восьмого\": 28,\n  \"двадцять дев'яте\": 29,\n  \"двадцять дев'ятого\": 29,\n  \"тридцяте\": 30,\n  \"тридцятого\": 30,\n  \"тридцять перше\": 31,\n  \"тридцять першого\": 31\n};\nexport const TIME_UNIT_DICTIONARY = {\n  сек: \"second\",\n  секунда: \"second\",\n  секунд: \"second\",\n  секунди: \"second\",\n  секунду: \"second\",\n  секундочок: \"second\",\n  секундочки: \"second\",\n  секундочку: \"second\",\n  хв: \"minute\",\n  хвилина: \"minute\",\n  хвилин: \"minute\",\n  хвилини: \"minute\",\n  хвилину: \"minute\",\n  хвилинок: \"minute\",\n  хвилинки: \"minute\",\n  хвилинку: \"minute\",\n  хвилиночок: \"minute\",\n  хвилиночки: \"minute\",\n  хвилиночку: \"minute\",\n  год: \"hour\",\n  година: \"hour\",\n  годин: \"hour\",\n  години: \"hour\",\n  годину: \"hour\",\n  годинка: \"hour\",\n  годинок: \"hour\",\n  годинки: \"hour\",\n  годинку: \"hour\",\n  день: \"d\",\n  дня: \"d\",\n  днів: \"d\",\n  дні: \"d\",\n  доба: \"d\",\n  добу: \"d\",\n  тиждень: \"week\",\n  тижню: \"week\",\n  тижня: \"week\",\n  тижні: \"week\",\n  тижнів: \"week\",\n  місяць: \"month\",\n  місяців: \"month\",\n  місяці: \"month\",\n  місяця: \"month\",\n  квартал: \"quarter\",\n  кварталу: \"quarter\",\n  квартала: \"quarter\",\n  кварталів: \"quarter\",\n  кварталі: \"quarter\",\n  рік: \"year\",\n  року: \"year\",\n  році: \"year\",\n  років: \"year\",\n  роки: \"year\"\n};\nexport const NUMBER_PATTERN = `(?:${matchAnyPattern(INTEGER_WORD_DICTIONARY)}|[0-9]+|[0-9]+\\\\.[0-9]+|пів|декілька|пар(?:у)|\\\\s{0,3})`;\nexport function parseNumberPattern(match) {\n  const num = match.toLowerCase();\n  if (INTEGER_WORD_DICTIONARY[num] !== undefined) {\n    return INTEGER_WORD_DICTIONARY[num];\n  }\n  if (num.match(/декілька/)) {\n    return 2;\n  } else if (num.match(/пів/)) {\n    return 0.5;\n  } else if (num.match(/пар/)) {\n    return 2;\n  } else if (num === \"\") {\n    return 1;\n  }\n  return parseFloat(num);\n}\nexport const ORDINAL_NUMBER_PATTERN = `(?:${matchAnyPattern(ORDINAL_WORD_DICTIONARY)}|[0-9]{1,2}(?:го|ого|е)?)`;\nexport function parseOrdinalNumberPattern(match) {\n  const num = match.toLowerCase();\n  if (ORDINAL_WORD_DICTIONARY[num] !== undefined) {\n    return ORDINAL_WORD_DICTIONARY[num];\n  }\n  return parseInt(num);\n}\nconst year = \"(?:\\\\s+(?:року|рік|р|р.))?\";\nexport const YEAR_PATTERN = `(?:[1-9][0-9]{0,3}${year}\\\\s*(?:н.е.|до н.е.|н. е.|до н. е.)|[1-2][0-9]{3}${year}|[5-9][0-9]${year})`;\nexport function parseYearPattern(match) {\n  if (/(рік|року|р|р.)/i.test(match)) {\n    match = match.replace(/(рік|року|р|р.)/i, \"\");\n  }\n  if (/(до н.е.|до н. е.)/i.test(match)) {\n    match = match.replace(/(до н.е.|до н. е.)/i, \"\");\n    return -parseInt(match);\n  }\n  if (/(н. е.|н.е.)/i.test(match)) {\n    match = match.replace(/(н. е.|н.е.)/i, \"\");\n    return parseInt(match);\n  }\n  const rawYearNumber = parseInt(match);\n  return findMostLikelyADYear(rawYearNumber);\n}\nconst SINGLE_TIME_UNIT_PATTERN = `(${NUMBER_PATTERN})\\\\s{0,3}(${matchAnyPattern(TIME_UNIT_DICTIONARY)})`;\nconst SINGLE_TIME_UNIT_REGEX = new RegExp(SINGLE_TIME_UNIT_PATTERN, \"i\");\nexport const TIME_UNITS_PATTERN = repeatedTimeunitPattern(`(?:(?:близько|приблизно)\\\\s{0,3})?`, SINGLE_TIME_UNIT_PATTERN);\nexport function parseTimeUnits(timeunitText) {\n  const fragments = {};\n  let remainingText = timeunitText;\n  let match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n  while (match) {\n    collectDateTimeFragment(fragments, match);\n    remainingText = remainingText.substring(match[0].length).trim();\n    match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n  }\n  return fragments;\n}\nfunction collectDateTimeFragment(fragments, match) {\n  const num = parseNumberPattern(match[1]);\n  const unit = TIME_UNIT_DICTIONARY[match[2].toLowerCase()];\n  fragments[unit] = num;\n}","map":{"version":3,"names":["matchAnyPattern","repeatedTimeunitPattern","findMostLikelyADYear","REGEX_PARTS","leftBoundary","rightBoundary","flags","WEEKDAY_DICTIONARY","FULL_MONTH_NAME_DICTIONARY","MONTH_DICTIONARY","INTEGER_WORD_DICTIONARY","ORDINAL_WORD_DICTIONARY","TIME_UNIT_DICTIONARY","сек","секунда","секунд","секунди","секунду","секундочок","секундочки","секундочку","хв","хвилина","хвилин","хвилини","хвилину","хвилинок","хвилинки","хвилинку","хвилиночок","хвилиночки","хвилиночку","год","година","годин","години","годину","годинка","годинок","годинки","годинку","день","дня","днів","дні","доба","добу","тиждень","тижню","тижня","тижні","тижнів","місяць","місяців","місяці","місяця","квартал","кварталу","квартала","кварталів","кварталі","рік","року","році","років","роки","NUMBER_PATTERN","parseNumberPattern","match","num","toLowerCase","undefined","parseFloat","ORDINAL_NUMBER_PATTERN","parseOrdinalNumberPattern","parseInt","year","YEAR_PATTERN","parseYearPattern","test","replace","rawYearNumber","SINGLE_TIME_UNIT_PATTERN","SINGLE_TIME_UNIT_REGEX","RegExp","TIME_UNITS_PATTERN","parseTimeUnits","timeunitText","fragments","remainingText","exec","collectDateTimeFragment","substring","length","trim","unit"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/uk/constants.ts"],"sourcesContent":["import { OpUnitType, QUnitType } from \"dayjs\";\nimport { matchAnyPattern, repeatedTimeunitPattern } from \"../../utils/pattern\";\nimport { findMostLikelyADYear } from \"../../calculation/years\";\nimport { TimeUnits } from \"../../utils/timeunits\";\n\nexport const REGEX_PARTS = {\n    leftBoundary: \"([^\\\\p{L}\\\\p{N}_]|^)\",\n    rightBoundary: \"(?=[^\\\\p{L}\\\\p{N}_]|$)\",\n    flags: \"iu\",\n};\n\nexport const WEEKDAY_DICTIONARY: { [word: string]: number } = {\n    \"неділя\": 0,\n    \"неділі\": 0,\n    \"неділю\": 0,\n    \"нд\": 0,\n    \"нд.\": 0,\n    \"понеділок\": 1,\n    \"понеділка\": 1,\n    \"пн\": 1,\n    \"пн.\": 1,\n    \"вівторок\": 2,\n    \"вівторка\": 2,\n    \"вт\": 2,\n    \"вт.\": 2,\n    \"середа\": 3,\n    \"середи\": 3,\n    \"середу\": 3,\n    \"ср\": 3,\n    \"ср.\": 3,\n    \"четвер\": 4,\n    \"четверга\": 4,\n    \"четвергу\": 4,\n    \"чт\": 4,\n    \"чт.\": 4,\n    \"п'ятниця\": 5,\n    \"п'ятниці\": 5,\n    \"п'ятницю\": 5,\n    \"пт\": 5,\n    \"пт.\": 5,\n    \"субота\": 6,\n    \"суботи\": 6,\n    \"суботу\": 6,\n    \"сб\": 6,\n    \"сб.\": 6,\n};\n\nexport const FULL_MONTH_NAME_DICTIONARY: { [word: string]: number } = {\n    \"січень\": 1,\n    \"січня\": 1,\n    \"січні\": 1,\n    \"лютий\": 2,\n    \"лютого\": 2,\n    \"лютому\": 2,\n    \"березень\": 3,\n    \"березня\": 3,\n    \"березні\": 3,\n    \"квітень\": 4,\n    \"квітня\": 4,\n    \"квітні\": 4,\n    \"травень\": 5,\n    \"травня\": 5,\n    \"травні\": 5,\n    \"червень\": 6,\n    \"червня\": 6,\n    \"червні\": 6,\n    \"липень\": 7,\n    \"липня\": 7,\n    \"липні\": 7,\n    \"серпень\": 8,\n    \"серпня\": 8,\n    \"серпні\": 8,\n    \"вересень\": 9,\n    \"вересня\": 9,\n    \"вересні\": 9,\n    \"жовтень\": 10,\n    \"жовтня\": 10,\n    \"жовтні\": 10,\n    \"листопад\": 11,\n    \"листопада\": 11,\n    \"листопаду\": 11,\n    \"грудень\": 12,\n    \"грудня\": 12,\n    \"грудні\": 12,\n};\n\nexport const MONTH_DICTIONARY: { [word: string]: number } = {\n    ...FULL_MONTH_NAME_DICTIONARY,\n    \"січ\": 1,\n    \"січ.\": 1,\n    \"лют\": 2,\n    \"лют.\": 2,\n    \"бер\": 3,\n    \"бер.\": 3,\n    \"квіт\": 4,\n    \"квіт.\": 4,\n    \"трав\": 5,\n    \"трав.\": 5,\n    \"черв\": 6,\n    \"черв.\": 6,\n    \"лип\": 7,\n    \"лип.\": 7,\n    \"серп\": 8,\n    \"серп.\": 8,\n    \"сер\": 8,\n    \"cер.\": 8,\n    \"вер\": 9,\n    \"вер.\": 9,\n    \"верес\": 9,\n    \"верес.\": 9,\n    \"жовт\": 10,\n    \"жовт.\": 10,\n    \"листоп\": 11,\n    \"листоп.\": 11,\n    \"груд\": 12,\n    \"груд.\": 12,\n};\n\nexport const INTEGER_WORD_DICTIONARY: { [word: string]: number } = {\n    \"один\": 1,\n    \"одна\": 1,\n    \"одної\": 1,\n    \"одну\": 1,\n    \"дві\": 2,\n    \"два\": 2,\n    \"двох\": 2,\n    \"три\": 3,\n    \"трьох\": 3,\n    \"чотири\": 4,\n    \"чотирьох\": 4,\n    \"п'ять\": 5,\n    \"п'яти\": 5,\n    \"шість\": 6,\n    \"шести\": 6,\n    \"сім\": 7,\n    \"семи\": 7,\n    \"вісім\": 8,\n    \"восьми\": 8,\n    \"дев'ять\": 9,\n    \"дев'яти\": 9,\n    \"десять\": 10,\n    \"десяти\": 10,\n    \"одинадцять\": 11,\n    \"одинадцяти\": 11,\n    \"дванадцять\": 12,\n    \"дванадцяти\": 12,\n};\n\nexport const ORDINAL_WORD_DICTIONARY: { [word: string]: number } = {\n    \"перше\": 1,\n    \"першого\": 1,\n    \"друге\": 2,\n    \"другого\": 2,\n    \"третє\": 3,\n    \"третього\": 3,\n    \"четверте\": 4,\n    \"четвертого\": 4,\n    \"п'яте\": 5,\n    \"п'ятого\": 5,\n    \"шосте\": 6,\n    \"шостого\": 6,\n    \"сьоме\": 7,\n    \"сьомого\": 7,\n    \"восьме\": 8,\n    \"восьмого\": 8,\n    \"дев'яте\": 9,\n    \"дев'ятого\": 9,\n    \"десяте\": 10,\n    \"десятого\": 10,\n    \"одинадцяте\": 11,\n    \"одинадцятого\": 11,\n    \"дванадцяте\": 12,\n    \"дванадцятого\": 12,\n    \"тринадцяте\": 13,\n    \"тринадцятого\": 13,\n    \"чотирнадцяте\": 14,\n    \"чотинрнадцятого\": 14,\n    \"п'ятнадцяте\": 15,\n    \"п'ятнадцятого\": 15,\n    \"шістнадцяте\": 16,\n    \"шістнадцятого\": 16,\n    \"сімнадцяте\": 17,\n    \"сімнадцятого\": 17,\n    \"вісімнадцяте\": 18,\n    \"вісімнадцятого\": 18,\n    \"дев'ятнадцяте\": 19,\n    \"дев'ятнадцятого\": 19,\n    \"двадцяте\": 20,\n    \"двадцятого\": 20,\n    \"двадцять перше\": 21,\n    \"двадцять першого\": 21,\n    \"двадцять друге\": 22,\n    \"двадцять другого\": 22,\n    \"двадцять третє\": 23,\n    \"двадцять третього\": 23,\n    \"двадцять четверте\": 24,\n    \"двадцять четвертого\": 24,\n    \"двадцять п'яте\": 25,\n    \"двадцять п'ятого\": 25,\n    \"двадцять шосте\": 26,\n    \"двадцять шостого\": 26,\n    \"двадцять сьоме\": 27,\n    \"двадцять сьомого\": 27,\n    \"двадцять восьме\": 28,\n    \"двадцять восьмого\": 28,\n    \"двадцять дев'яте\": 29,\n    \"двадцять дев'ятого\": 29,\n    \"тридцяте\": 30,\n    \"тридцятого\": 30,\n    \"тридцять перше\": 31,\n    \"тридцять першого\": 31,\n};\n\nexport const TIME_UNIT_DICTIONARY: { [word: string]: OpUnitType | QUnitType } = {\n    сек: \"second\",\n    секунда: \"second\",\n    секунд: \"second\",\n    секунди: \"second\",\n    секунду: \"second\",\n    секундочок: \"second\",\n    секундочки: \"second\",\n    секундочку: \"second\",\n    хв: \"minute\",\n    хвилина: \"minute\",\n    хвилин: \"minute\",\n    хвилини: \"minute\",\n    хвилину: \"minute\",\n    хвилинок: \"minute\",\n    хвилинки: \"minute\",\n    хвилинку: \"minute\",\n    хвилиночок: \"minute\",\n    хвилиночки: \"minute\",\n    хвилиночку: \"minute\",\n    год: \"hour\",\n    година: \"hour\",\n    годин: \"hour\",\n    години: \"hour\",\n    годину: \"hour\",\n    годинка: \"hour\",\n    годинок: \"hour\",\n    годинки: \"hour\",\n    годинку: \"hour\",\n    день: \"d\",\n    дня: \"d\",\n    днів: \"d\",\n    дні: \"d\",\n    доба: \"d\",\n    добу: \"d\",\n    тиждень: \"week\",\n    тижню: \"week\",\n    тижня: \"week\",\n    тижні: \"week\",\n    тижнів: \"week\",\n    місяць: \"month\",\n    місяців: \"month\",\n    місяці: \"month\",\n    місяця: \"month\",\n    квартал: \"quarter\",\n    кварталу: \"quarter\",\n    квартала: \"quarter\",\n    кварталів: \"quarter\",\n    кварталі: \"quarter\",\n    рік: \"year\",\n    року: \"year\",\n    році: \"year\",\n    років: \"year\",\n    роки: \"year\",\n};\n\n//--------------------------------\n\nexport const NUMBER_PATTERN = `(?:${matchAnyPattern(\n    INTEGER_WORD_DICTIONARY\n)}|[0-9]+|[0-9]+\\\\.[0-9]+|пів|декілька|пар(?:у)|\\\\s{0,3})`;\n\nexport function parseNumberPattern(match: string): number {\n    const num = match.toLowerCase();\n    if (INTEGER_WORD_DICTIONARY[num] !== undefined) {\n        return INTEGER_WORD_DICTIONARY[num];\n    }\n    if (num.match(/декілька/)) {\n        return 2;\n    } else if (num.match(/пів/)) {\n        return 0.5;\n    } else if (num.match(/пар/)) {\n        return 2;\n    } else if (num === \"\") {\n        return 1;\n    }\n    return parseFloat(num);\n}\n\nexport const ORDINAL_NUMBER_PATTERN = `(?:${matchAnyPattern(ORDINAL_WORD_DICTIONARY)}|[0-9]{1,2}(?:го|ого|е)?)`;\nexport function parseOrdinalNumberPattern(match: string): number {\n    const num = match.toLowerCase();\n    if (ORDINAL_WORD_DICTIONARY[num] !== undefined) {\n        return ORDINAL_WORD_DICTIONARY[num];\n    }\n    return parseInt(num);\n}\n\nconst year = \"(?:\\\\s+(?:року|рік|р|р.))?\";\nexport const YEAR_PATTERN = `(?:[1-9][0-9]{0,3}${year}\\\\s*(?:н.е.|до н.е.|н. е.|до н. е.)|[1-2][0-9]{3}${year}|[5-9][0-9]${year})`;\nexport function parseYearPattern(match: string): number {\n    if (/(рік|року|р|р.)/i.test(match)) {\n        match = match.replace(/(рік|року|р|р.)/i, \"\");\n    }\n\n    if (/(до н.е.|до н. е.)/i.test(match)) {\n        //Before Common Era\n        match = match.replace(/(до н.е.|до н. е.)/i, \"\");\n        return -parseInt(match);\n    }\n\n    if (/(н. е.|н.е.)/i.test(match)) {\n        //Common Era\n        match = match.replace(/(н. е.|н.е.)/i, \"\");\n        return parseInt(match);\n    }\n\n    const rawYearNumber = parseInt(match);\n    return findMostLikelyADYear(rawYearNumber);\n}\n\nconst SINGLE_TIME_UNIT_PATTERN = `(${NUMBER_PATTERN})\\\\s{0,3}(${matchAnyPattern(TIME_UNIT_DICTIONARY)})`;\nconst SINGLE_TIME_UNIT_REGEX = new RegExp(SINGLE_TIME_UNIT_PATTERN, \"i\");\n\nexport const TIME_UNITS_PATTERN = repeatedTimeunitPattern(\n    `(?:(?:близько|приблизно)\\\\s{0,3})?`,\n    SINGLE_TIME_UNIT_PATTERN\n);\n\nexport function parseTimeUnits(timeunitText): TimeUnits {\n    const fragments = {};\n    let remainingText = timeunitText;\n    let match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(fragments, match);\n        remainingText = remainingText.substring(match[0].length).trim();\n        match = SINGLE_TIME_UNIT_REGEX.exec(remainingText);\n    }\n    return fragments;\n}\n\nfunction collectDateTimeFragment(fragments, match) {\n    const num = parseNumberPattern(match[1]);\n    const unit = TIME_UNIT_DICTIONARY[match[2].toLowerCase()];\n    fragments[unit] = num;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}