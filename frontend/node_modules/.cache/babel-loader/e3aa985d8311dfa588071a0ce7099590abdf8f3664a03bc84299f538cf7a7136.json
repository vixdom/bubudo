{"ast":null,"code":"import { includeCommonConfiguration } from \"../../configurations.js\";\nimport { Chrono } from \"../../chrono.js\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results.js\";\nimport { Meridiem, Weekday } from \"../../types.js\";\nimport ExtractTimezoneOffsetRefiner from \"../../common/refiners/ExtractTimezoneOffsetRefiner.js\";\nimport ZHHansDateParser from \"./hans/parsers/ZHHansDateParser.js\";\nimport ZHHansDeadlineFormatParser from \"./hans/parsers/ZHHansDeadlineFormatParser.js\";\nimport ZHHansRelationWeekdayParser from \"./hans/parsers/ZHHansRelationWeekdayParser.js\";\nimport ZHHansTimeExpressionParser from \"./hans/parsers/ZHHansTimeExpressionParser.js\";\nimport ZHHansWeekdayParser from \"./hans/parsers/ZHHansWeekdayParser.js\";\nimport ZHHantCasualDateParser from \"./hant/parsers/ZHHantCasualDateParser.js\";\nimport ZHHantDateParser from \"./hant/parsers/ZHHantDateParser.js\";\nimport ZHHantDeadlineFormatParser from \"./hant/parsers/ZHHantDeadlineFormatParser.js\";\nimport ZHHantRelationWeekdayParser from \"./hant/parsers/ZHHantRelationWeekdayParser.js\";\nimport ZHHantTimeExpressionParser from \"./hant/parsers/ZHHantTimeExpressionParser.js\";\nimport ZHHantWeekdayParser from \"./hant/parsers/ZHHantWeekdayParser.js\";\nimport ZHHantMergeDateRangeRefiner from \"./hant/refiners/ZHHantMergeDateRangeRefiner.js\";\nimport ZHHantMergeDateTimeRefiner from \"./hant/refiners/ZHHantMergeDateTimeRefiner.js\";\nimport * as _hant from \"./hant/index.js\";\nexport { _hant as hant };\nimport * as _hans from \"./hans/index.js\";\nexport { _hans as hans };\nexport { Chrono, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Meridiem, Weekday };\nexport const casual = new Chrono(createCasualConfiguration());\nexport const strict = new Chrono(createConfiguration());\nexport function parse(text, ref, option) {\n  return casual.parse(text, ref, option);\n}\nexport function parseDate(text, ref, option) {\n  return casual.parseDate(text, ref, option);\n}\nexport function createCasualConfiguration() {\n  const option = createConfiguration();\n  option.parsers.unshift(new ZHHantCasualDateParser());\n  return option;\n}\nexport function createConfiguration() {\n  const configuration = includeCommonConfiguration({\n    parsers: [new ZHHantDateParser(), new ZHHansDateParser(), new ZHHantRelationWeekdayParser(), new ZHHansRelationWeekdayParser(), new ZHHantWeekdayParser(), new ZHHansWeekdayParser(), new ZHHantTimeExpressionParser(), new ZHHansTimeExpressionParser(), new ZHHantDeadlineFormatParser(), new ZHHansDeadlineFormatParser()],\n    refiners: [new ZHHantMergeDateRangeRefiner(), new ZHHantMergeDateTimeRefiner()]\n  });\n  configuration.refiners = configuration.refiners.filter(refiner => !(refiner instanceof ExtractTimezoneOffsetRefiner));\n  return configuration;\n}","map":{"version":3,"names":["includeCommonConfiguration","Chrono","ParsingResult","ParsingComponents","ReferenceWithTimezone","Meridiem","Weekday","ExtractTimezoneOffsetRefiner","ZHHansDateParser","ZHHansDeadlineFormatParser","ZHHansRelationWeekdayParser","ZHHansTimeExpressionParser","ZHHansWeekdayParser","ZHHantCasualDateParser","ZHHantDateParser","ZHHantDeadlineFormatParser","ZHHantRelationWeekdayParser","ZHHantTimeExpressionParser","ZHHantWeekdayParser","ZHHantMergeDateRangeRefiner","ZHHantMergeDateTimeRefiner","_hant","hant","_hans","hans","casual","createCasualConfiguration","strict","createConfiguration","parse","text","ref","option","parseDate","parsers","unshift","configuration","refiners","filter","refiner"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/zh/index.ts"],"sourcesContent":["import { includeCommonConfiguration } from \"../../configurations\";\nimport { Chrono, Configuration, Parser, Refiner } from \"../../chrono\";\nimport { ParsingResult, ParsingComponents, ReferenceWithTimezone } from \"../../results\";\nimport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday } from \"../../types\";\nimport ExtractTimezoneOffsetRefiner from \"../../common/refiners/ExtractTimezoneOffsetRefiner\";\n\nimport ZHHansCasualDateParser from \"./hans/parsers/ZHHansCasualDateParser\";\nimport ZHHansDateParser from \"./hans/parsers/ZHHansDateParser\";\nimport ZHHansDeadlineFormatParser from \"./hans/parsers/ZHHansDeadlineFormatParser\";\nimport ZHHansRelationWeekdayParser from \"./hans/parsers/ZHHansRelationWeekdayParser\";\nimport ZHHansTimeExpressionParser from \"./hans/parsers/ZHHansTimeExpressionParser\";\nimport ZHHansWeekdayParser from \"./hans/parsers/ZHHansWeekdayParser\";\n\nimport ZHHantCasualDateParser from \"./hant/parsers/ZHHantCasualDateParser\";\nimport ZHHantDateParser from \"./hant/parsers/ZHHantDateParser\";\nimport ZHHantDeadlineFormatParser from \"./hant/parsers/ZHHantDeadlineFormatParser\";\nimport ZHHantRelationWeekdayParser from \"./hant/parsers/ZHHantRelationWeekdayParser\";\nimport ZHHantTimeExpressionParser from \"./hant/parsers/ZHHantTimeExpressionParser\";\nimport ZHHantWeekdayParser from \"./hant/parsers/ZHHantWeekdayParser\";\nimport ZHHantMergeDateRangeRefiner from \"./hant/refiners/ZHHantMergeDateRangeRefiner\";\nimport ZHHantMergeDateTimeRefiner from \"./hant/refiners/ZHHantMergeDateTimeRefiner\";\n\nexport * as hant from \"./hant\";\nexport * as hans from \"./hans\";\nexport { Chrono, Parser, Refiner, ParsingResult, ParsingComponents, ReferenceWithTimezone };\nexport { Component, ParsedResult, ParsingOption, ParsingReference, Meridiem, Weekday };\n\nexport const casual = new Chrono(createCasualConfiguration());\nexport const strict = new Chrono(createConfiguration());\n\nexport function parse(text: string, ref?: ParsingReference | Date, option?: ParsingOption): ParsedResult[] {\n    return casual.parse(text, ref, option);\n}\n\nexport function parseDate(text: string, ref?: ParsingReference | Date, option?: ParsingOption): Date {\n    return casual.parseDate(text, ref, option);\n}\n\n/**\n * @ignore (to be documented later)\n */\nexport function createCasualConfiguration(): Configuration {\n    const option = createConfiguration();\n    option.parsers.unshift(new ZHHantCasualDateParser());\n    return option;\n}\n\n/**\n * @ignore (to be documented later)\n */\nexport function createConfiguration(): Configuration {\n    const configuration = includeCommonConfiguration({\n        parsers: [\n            new ZHHantDateParser(),\n            new ZHHansDateParser(),\n            new ZHHantRelationWeekdayParser(),\n            new ZHHansRelationWeekdayParser(),\n            new ZHHantWeekdayParser(),\n            new ZHHansWeekdayParser(),\n            new ZHHantTimeExpressionParser(),\n            new ZHHansTimeExpressionParser(),\n            new ZHHantDeadlineFormatParser(),\n            new ZHHansDeadlineFormatParser(),\n        ],\n        refiners: [new ZHHantMergeDateRangeRefiner(), new ZHHantMergeDateTimeRefiner()],\n    });\n\n    // REMOVE ExtractTimezoneOffsetRefiner\n    configuration.refiners = configuration.refiners.filter(\n        (refiner) => !(refiner instanceof ExtractTimezoneOffsetRefiner)\n    );\n\n    return configuration;\n}\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,yBAAuB;AAClE,SAASC,MAAM,QAAwC,iBAAe;AACtE,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAQ,kBAAgB;AACxF,SAAmEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAc;AAC1G,OAAOC,4BAA4B,MAAM,uDAAqD;AAG9F,OAAOC,gBAAgB,MAAM,oCAAkC;AAC/D,OAAOC,0BAA0B,MAAM,8CAA4C;AACnF,OAAOC,2BAA2B,MAAM,+CAA6C;AACrF,OAAOC,0BAA0B,MAAM,8CAA4C;AACnF,OAAOC,mBAAmB,MAAM,uCAAqC;AAErE,OAAOC,sBAAsB,MAAM,0CAAwC;AAC3E,OAAOC,gBAAgB,MAAM,oCAAkC;AAC/D,OAAOC,0BAA0B,MAAM,8CAA4C;AACnF,OAAOC,2BAA2B,MAAM,+CAA6C;AACrF,OAAOC,0BAA0B,MAAM,8CAA4C;AACnF,OAAOC,mBAAmB,MAAM,uCAAqC;AACrE,OAAOC,2BAA2B,MAAM,gDAA8C;AACtF,OAAOC,0BAA0B,MAAM,+CAA6C;AAAA,YAAAC,KAAA,MAE9D,iBAAS;AAAA,SAAAA,KAAA,IAAnBC,IAAI;AAAA,YAAAC,KAAA,MACM,iBAAS;AAAA,SAAAA,KAAA,IAAnBC,IAAI;AAChB,SAASvB,MAAM,EAAmBC,aAAa,EAAEC,iBAAiB,EAAEC,qBAAqB;AACzF,SAAmEC,QAAQ,EAAEC,OAAO;AAEpF,OAAO,MAAMmB,MAAM,GAAG,IAAIxB,MAAM,CAACyB,yBAAyB,EAAE,CAAC;AAC7D,OAAO,MAAMC,MAAM,GAAG,IAAI1B,MAAM,CAAC2B,mBAAmB,EAAE,CAAC;AAEvD,OAAM,SAAUC,KAAKA,CAACC,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACrF,OAAOP,MAAM,CAACI,KAAK,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC1C;AAEA,OAAM,SAAUC,SAASA,CAACH,IAAY,EAAEC,GAA6B,EAAEC,MAAsB;EACzF,OAAOP,MAAM,CAACQ,SAAS,CAACH,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;AAC9C;AAKA,OAAM,SAAUN,yBAAyBA,CAAA;EACrC,MAAMM,MAAM,GAAGJ,mBAAmB,EAAE;EACpCI,MAAM,CAACE,OAAO,CAACC,OAAO,CAAC,IAAItB,sBAAsB,EAAE,CAAC;EACpD,OAAOmB,MAAM;AACjB;AAKA,OAAM,SAAUJ,mBAAmBA,CAAA;EAC/B,MAAMQ,aAAa,GAAGpC,0BAA0B,CAAC;IAC7CkC,OAAO,EAAE,CACL,IAAIpB,gBAAgB,EAAE,EACtB,IAAIN,gBAAgB,EAAE,EACtB,IAAIQ,2BAA2B,EAAE,EACjC,IAAIN,2BAA2B,EAAE,EACjC,IAAIQ,mBAAmB,EAAE,EACzB,IAAIN,mBAAmB,EAAE,EACzB,IAAIK,0BAA0B,EAAE,EAChC,IAAIN,0BAA0B,EAAE,EAChC,IAAII,0BAA0B,EAAE,EAChC,IAAIN,0BAA0B,EAAE,CACnC;IACD4B,QAAQ,EAAE,CAAC,IAAIlB,2BAA2B,EAAE,EAAE,IAAIC,0BAA0B,EAAE;GACjF,CAAC;EAGFgB,aAAa,CAACC,QAAQ,GAAGD,aAAa,CAACC,QAAQ,CAACC,MAAM,CACjDC,OAAO,IAAK,EAAEA,OAAO,YAAYhC,4BAA4B,CAAC,CAClE;EAED,OAAO6B,aAAa;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}