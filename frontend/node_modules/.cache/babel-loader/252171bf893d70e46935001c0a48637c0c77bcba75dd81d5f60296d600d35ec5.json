{"ast":null,"code":"export const WEEKDAY_DICTIONARY = {\n  \"domingo\": 0,\n  \"dom\": 0,\n  \"segunda\": 1,\n  \"segunda-feira\": 1,\n  \"seg\": 1,\n  \"terça\": 2,\n  \"terça-feira\": 2,\n  \"ter\": 2,\n  \"quarta\": 3,\n  \"quarta-feira\": 3,\n  \"qua\": 3,\n  \"quinta\": 4,\n  \"quinta-feira\": 4,\n  \"qui\": 4,\n  \"sexta\": 5,\n  \"sexta-feira\": 5,\n  \"sex\": 5,\n  \"sábado\": 6,\n  \"sabado\": 6,\n  \"sab\": 6\n};\nexport const MONTH_DICTIONARY = {\n  \"janeiro\": 1,\n  \"jan\": 1,\n  \"jan.\": 1,\n  \"fevereiro\": 2,\n  \"fev\": 2,\n  \"fev.\": 2,\n  \"março\": 3,\n  \"mar\": 3,\n  \"mar.\": 3,\n  \"abril\": 4,\n  \"abr\": 4,\n  \"abr.\": 4,\n  \"maio\": 5,\n  \"mai\": 5,\n  \"mai.\": 5,\n  \"junho\": 6,\n  \"jun\": 6,\n  \"jun.\": 6,\n  \"julho\": 7,\n  \"jul\": 7,\n  \"jul.\": 7,\n  \"agosto\": 8,\n  \"ago\": 8,\n  \"ago.\": 8,\n  \"setembro\": 9,\n  \"set\": 9,\n  \"set.\": 9,\n  \"outubro\": 10,\n  \"out\": 10,\n  \"out.\": 10,\n  \"novembro\": 11,\n  \"nov\": 11,\n  \"nov.\": 11,\n  \"dezembro\": 12,\n  \"dez\": 12,\n  \"dez.\": 12\n};\nexport const YEAR_PATTERN = \"[0-9]{1,4}(?![^\\\\s]\\\\d)(?:\\\\s*[a|d]\\\\.?\\\\s*c\\\\.?|\\\\s*a\\\\.?\\\\s*d\\\\.?)?\";\nexport function parseYear(match) {\n  if (match.match(/^[0-9]{1,4}$/)) {\n    let yearNumber = parseInt(match);\n    if (yearNumber < 100) {\n      if (yearNumber > 50) {\n        yearNumber = yearNumber + 1900;\n      } else {\n        yearNumber = yearNumber + 2000;\n      }\n    }\n    return yearNumber;\n  }\n  if (match.match(/a\\.?\\s*c\\.?/i)) {\n    match = match.replace(/a\\.?\\s*c\\.?/i, \"\");\n    return -parseInt(match);\n  }\n  return parseInt(match);\n}","map":{"version":3,"names":["WEEKDAY_DICTIONARY","MONTH_DICTIONARY","YEAR_PATTERN","parseYear","match","yearNumber","parseInt","replace"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/node_modules/chrono-node/src/locales/pt/constants.ts"],"sourcesContent":["export const WEEKDAY_DICTIONARY: { [word: string]: number } = {\n    \"domingo\": 0,\n    \"dom\": 0,\n    \"segunda\": 1,\n    \"segunda-feira\": 1,\n    \"seg\": 1,\n    \"terça\": 2,\n    \"terça-feira\": 2,\n    \"ter\": 2,\n    \"quarta\": 3,\n    \"quarta-feira\": 3,\n    \"qua\": 3,\n    \"quinta\": 4,\n    \"quinta-feira\": 4,\n    \"qui\": 4,\n    \"sexta\": 5,\n    \"sexta-feira\": 5,\n    \"sex\": 5,\n    \"sábado\": 6,\n    \"sabado\": 6,\n    \"sab\": 6,\n};\n\nexport const MONTH_DICTIONARY: { [word: string]: number } = {\n    \"janeiro\": 1,\n    \"jan\": 1,\n    \"jan.\": 1,\n    \"fevereiro\": 2,\n    \"fev\": 2,\n    \"fev.\": 2,\n    \"março\": 3,\n    \"mar\": 3,\n    \"mar.\": 3,\n    \"abril\": 4,\n    \"abr\": 4,\n    \"abr.\": 4,\n    \"maio\": 5,\n    \"mai\": 5,\n    \"mai.\": 5,\n    \"junho\": 6,\n    \"jun\": 6,\n    \"jun.\": 6,\n    \"julho\": 7,\n    \"jul\": 7,\n    \"jul.\": 7,\n    \"agosto\": 8,\n    \"ago\": 8,\n    \"ago.\": 8,\n    \"setembro\": 9,\n    \"set\": 9,\n    \"set.\": 9,\n    \"outubro\": 10,\n    \"out\": 10,\n    \"out.\": 10,\n    \"novembro\": 11,\n    \"nov\": 11,\n    \"nov.\": 11,\n    \"dezembro\": 12,\n    \"dez\": 12,\n    \"dez.\": 12,\n};\n\n//-----------------------------\n// 88 p. Chr. n.\n// 234 AC\nexport const YEAR_PATTERN = \"[0-9]{1,4}(?![^\\\\s]\\\\d)(?:\\\\s*[a|d]\\\\.?\\\\s*c\\\\.?|\\\\s*a\\\\.?\\\\s*d\\\\.?)?\";\nexport function parseYear(match: string): number {\n    if (match.match(/^[0-9]{1,4}$/)) {\n        let yearNumber = parseInt(match);\n        if (yearNumber < 100) {\n            if (yearNumber > 50) {\n                yearNumber = yearNumber + 1900;\n            } else {\n                yearNumber = yearNumber + 2000;\n            }\n        }\n        return yearNumber;\n    }\n\n    if (match.match(/a\\.?\\s*c\\.?/i)) {\n        match = match.replace(/a\\.?\\s*c\\.?/i, \"\");\n        return -parseInt(match);\n    }\n\n    return parseInt(match);\n}\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAA+B;EAC1D,SAAS,EAAE,CAAC;EACZ,KAAK,EAAE,CAAC;EACR,SAAS,EAAE,CAAC;EACZ,eAAe,EAAE,CAAC;EAClB,KAAK,EAAE,CAAC;EACR,OAAO,EAAE,CAAC;EACV,aAAa,EAAE,CAAC;EAChB,KAAK,EAAE,CAAC;EACR,QAAQ,EAAE,CAAC;EACX,cAAc,EAAE,CAAC;EACjB,KAAK,EAAE,CAAC;EACR,QAAQ,EAAE,CAAC;EACX,cAAc,EAAE,CAAC;EACjB,KAAK,EAAE,CAAC;EACR,OAAO,EAAE,CAAC;EACV,aAAa,EAAE,CAAC;EAChB,KAAK,EAAE,CAAC;EACR,QAAQ,EAAE,CAAC;EACX,QAAQ,EAAE,CAAC;EACX,KAAK,EAAE;CACV;AAED,OAAO,MAAMC,gBAAgB,GAA+B;EACxD,SAAS,EAAE,CAAC;EACZ,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,WAAW,EAAE,CAAC;EACd,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC;EACV,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC;EACV,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,MAAM,EAAE,CAAC;EACT,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC;EACV,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,OAAO,EAAE,CAAC;EACV,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,QAAQ,EAAE,CAAC;EACX,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,UAAU,EAAE,CAAC;EACb,KAAK,EAAE,CAAC;EACR,MAAM,EAAE,CAAC;EACT,SAAS,EAAE,EAAE;EACb,KAAK,EAAE,EAAE;EACT,MAAM,EAAE,EAAE;EACV,UAAU,EAAE,EAAE;EACd,KAAK,EAAE,EAAE;EACT,MAAM,EAAE,EAAE;EACV,UAAU,EAAE,EAAE;EACd,KAAK,EAAE,EAAE;EACT,MAAM,EAAE;CACX;AAKD,OAAO,MAAMC,YAAY,GAAG,uEAAuE;AACnG,OAAM,SAAUC,SAASA,CAACC,KAAa;EACnC,IAAIA,KAAK,CAACA,KAAK,CAAC,cAAc,CAAC,EAAE;IAC7B,IAAIC,UAAU,GAAGC,QAAQ,CAACF,KAAK,CAAC;IAChC,IAAIC,UAAU,GAAG,GAAG,EAAE;MAClB,IAAIA,UAAU,GAAG,EAAE,EAAE;QACjBA,UAAU,GAAGA,UAAU,GAAG,IAAI;OACjC,MAAM;QACHA,UAAU,GAAGA,UAAU,GAAG,IAAI;;;IAGtC,OAAOA,UAAU;;EAGrB,IAAID,KAAK,CAACA,KAAK,CAAC,cAAc,CAAC,EAAE;IAC7BA,KAAK,GAAGA,KAAK,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;IACzC,OAAO,CAACD,QAAQ,CAACF,KAAK,CAAC;;EAG3B,OAAOE,QAAQ,CAACF,KAAK,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}