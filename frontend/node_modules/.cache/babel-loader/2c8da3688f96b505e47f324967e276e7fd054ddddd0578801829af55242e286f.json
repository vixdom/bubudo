{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    sx: {\n      mt: 3,\n      p: 2\n    },\n    children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"No tasks yet. Add one above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: task.completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.title,\n            secondary: task.completed ? 'Completed' : 'In Progress'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), task.subTasks.map(subTask => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            ml: 4,\n            bgcolor: task.completed ? 'action.selected' : 'transparent'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              edge: \"start\",\n              checked: subTask.completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: subTask.title,\n            secondary: subTask.estimatedTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)]\n        }, subTask.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemIcon","Checkbox","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","tasks","elevation","sx","mt","p","children","length","primary","fileName","_jsxFileName","lineNumber","columnNumber","map","task","mb","edge","checked","completed","title","secondary","id","subTasks","subTask","ml","bgcolor","estimatedTime","_c","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemIcon, Checkbox, Paper, Typography } from '@mui/material';\nimport { TaskWithSubTasks, SubTask } from '../../services/geminiService';\n\ninterface TaskListProps {\n  tasks: TaskWithSubTasks[];\n}\n\nconst TaskList: React.FC<TaskListProps> = ({ tasks }) => {\n  return (\n    <Paper elevation={2} sx={{ mt: 3, p: 2 }}>\n      {tasks.length === 0 ? (\n        <ListItem>\n          <ListItemText primary=\"No tasks yet. Add one above!\" />\n        </ListItem>\n      ) : (\n        <List>\n          {tasks.map((task) => (\n            <>\n              <ListItem key={task.id} sx={{ mb: 1 }}>\n                <ListItemIcon>\n                  <Checkbox edge=\"start\" checked={task.completed} />\n                </ListItemIcon>\n                <ListItemText \n                  primary={task.title}\n                  secondary={task.completed ? 'Completed' : 'In Progress'}\n                />\n              </ListItem>\n              {task.subTasks.map((subTask) => (\n                <ListItem \n                  key={subTask.id}\n                  sx={{ \n                    ml: 4,\n                    bgcolor: task.completed ? 'action.selected' : 'transparent'\n                  }}\n                >\n                  <ListItemIcon>\n                    <Checkbox edge=\"start\" checked={subTask.completed} />\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={subTask.title}\n                    secondary={subTask.estimatedTime}\n                  />\n                </ListItem>\n              ))}\n            </>\n          ))}\n        </List>\n      )}\n    </Paper>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}