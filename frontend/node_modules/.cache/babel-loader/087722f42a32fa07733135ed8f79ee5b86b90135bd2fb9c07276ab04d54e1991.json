{"ast":null,"code":"import React,{useState}from'react';import'./SubtaskList.css';import List from'@mui/material/List';import ListItem from'@mui/material/ListItem';import ListItemText from'@mui/material/ListItemText';import ListItemIcon from'@mui/material/ListItemIcon';import Checkbox from'@mui/material/Checkbox';import Stack from'@mui/material/Stack';import Typography from'@mui/material/Typography';// Define the structure of a subtask\n// Define the props for the SubtaskList component\nimport IconButton from'@mui/material/IconButton';import DeleteIcon from'@mui/icons-material/Delete';import EditIcon from'@mui/icons-material/Edit';import SaveIcon from'@mui/icons-material/Check';import CancelIcon from'@mui/icons-material/Close';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const SubtaskList=_ref=>{let{subtasks,onToggleSubTask,onDeleteSubTask,onEditSubTask}=_ref;const[editingId,setEditingId]=useState(null);const[editValue,setEditValue]=useState('');if(!subtasks||subtasks.length===0){return/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{pl:4,mt:1},children:\"No subtasks generated.\"});}return/*#__PURE__*/_jsx(List,{dense:true,sx:{width:'100%',bgcolor:'background.paper',mt:1,pl:4},children:subtasks.map(subtask=>/*#__PURE__*/_jsxs(ListItem,{disableGutters:true,sx:{display:'flex',flexDirection:'column',alignItems:'flex-start',mb:1,py:0.5,opacity:subtask.completed?0.6:1},children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",sx:{width:'100%'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:'auto',mr:1},children:/*#__PURE__*/_jsx(Checkbox,{checked:subtask.completed,onChange:()=>onToggleSubTask(subtask.id),size:\"small\"})}),editingId===subtask.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{value:editValue,onChange:e=>setEditValue(e.target.value),style:{fontSize:16,flex:1,marginRight:8},autoFocus:true}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{onEditSubTask(subtask.id,editValue);setEditingId(null);},children:/*#__PURE__*/_jsx(SaveIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>setEditingId(null),children:/*#__PURE__*/_jsx(CancelIcon,{fontSize:\"small\"})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[subtask.id,\".\"]}),\" \",subtask.title]}),primaryTypographyProps:{sx:{textDecoration:subtask.completed?'line-through':'none'}},secondary:subtask.timeEstimate?`Est: ${subtask.timeEstimate}`:'No estimate',secondaryTypographyProps:{variant:'caption'},sx:{mb:subtask.dependsOn.length>0?0.5:0}}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,alignItems:\"center\",sx:{ml:1,minWidth:0},className:\"subtask-actions\",children:[/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"Edit subtask\",onClick:()=>{setEditingId(subtask.id);setEditValue(subtask.title);},sx:{mr:0.5},children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(IconButton,{size:\"small\",\"aria-label\":\"Delete subtask\",onClick:()=>onDeleteSubTask(subtask.id),color:\"error\",children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})]})]})]}),subtask.dependsOn.length>0&&/*#__PURE__*/_jsx(Stack,{direction:\"row\",spacing:0.5,sx:{pl:5,pt:0.5},children:subtask.dependsOn.map(depId=>/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",sx:{mr:1},children:[\"Needs task \",depId,\" to be completed\"]},`${subtask.id}-dep-${depId}`))})]},subtask.id))});};export default SubtaskList;","map":{"version":3,"names":["React","useState","List","ListItem","ListItemText","ListItemIcon","Checkbox","Stack","Typography","IconButton","DeleteIcon","EditIcon","SaveIcon","CancelIcon","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SubtaskList","_ref","subtasks","onToggleSubTask","onDeleteSubTask","onEditSubTask","editingId","setEditingId","editValue","setEditValue","length","variant","color","sx","pl","mt","children","dense","width","bgcolor","map","subtask","disableGutters","display","flexDirection","alignItems","mb","py","opacity","completed","direction","minWidth","mr","checked","onChange","id","size","value","e","target","style","fontSize","flex","marginRight","autoFocus","onClick","primary","title","primaryTypographyProps","textDecoration","secondary","timeEstimate","secondaryTypographyProps","dependsOn","spacing","ml","className","pt","depId"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/SubtaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './SubtaskList.css';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Checkbox from '@mui/material/Checkbox';\nimport Chip from '@mui/material/Chip';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\n// Define the structure of a subtask\ninterface Subtask {\n  id: string | number;\n  title: string;\n  dependsOn: (string | number)[];\n  timeEstimate?: string;\n  completed: boolean;\n}\n\n// Define the props for the SubtaskList component\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Check';\nimport CancelIcon from '@mui/icons-material/Close';\n\ninterface SubtaskListProps {\n  subtasks: Subtask[];\n  onToggleSubTask: (subTaskId: string | number) => void;\n  onDeleteSubTask: (subTaskId: string | number) => void;\n  onEditSubTask: (subTaskId: string | number, newTitle: string) => void;\n}\n\n\nconst SubtaskList: React.FC<SubtaskListProps> = ({ subtasks, onToggleSubTask, onDeleteSubTask, onEditSubTask }) => {\n  const [editingId, setEditingId] = useState<string | number | null>(null);\n  const [editValue, setEditValue] = useState('');\n  if (!subtasks || subtasks.length === 0) {\n    return <Typography variant=\"body2\" color=\"text.secondary\" sx={{ pl: 4, mt: 1 }}>No subtasks generated.</Typography>;\n  }\n\n\n\n  return (\n    <List dense sx={{ width: '100%', bgcolor: 'background.paper', mt: 1, pl: 4 }}>\n      {subtasks.map((subtask) => (\n        <ListItem\n          key={subtask.id}\n          disableGutters\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            mb: 1,\n            py: 0.5,\n            opacity: subtask.completed ? 0.6 : 1,\n          }}\n        >\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ width: '100%' }}>\n            <ListItemIcon sx={{ minWidth: 'auto', mr: 1 }}>\n              <Checkbox\n                checked={subtask.completed}\n                onChange={() => onToggleSubTask(subtask.id)}\n                size=\"small\"\n              />\n            </ListItemIcon>\n            {editingId === subtask.id ? (\n              <>\n                <input\n                  value={editValue}\n                  onChange={e => setEditValue(e.target.value)}\n                  style={{ fontSize: 16, flex: 1, marginRight: 8 }}\n                  autoFocus\n                />\n                <IconButton size=\"small\" onClick={() => { onEditSubTask(subtask.id, editValue); setEditingId(null); }}><SaveIcon fontSize=\"small\" /></IconButton>\n                <IconButton size=\"small\" onClick={() => setEditingId(null)}><CancelIcon fontSize=\"small\" /></IconButton>\n              </>\n            ) : (\n              <>\n                <ListItemText\n                  primary={\n                    <span>\n                      <strong>{subtask.id}.</strong> {subtask.title}\n                    </span>\n                  }\n                  primaryTypographyProps={{\n                    sx: { textDecoration: subtask.completed ? 'line-through' : 'none' }\n                  }}\n                  secondary={subtask.timeEstimate ? `Est: ${subtask.timeEstimate}` : 'No estimate'}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                  sx={{ mb: subtask.dependsOn.length > 0 ? 0.5 : 0 }}\n                />\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{ ml: 1, minWidth: 0 }} className=\"subtask-actions\">\n                  <IconButton size=\"small\" aria-label=\"Edit subtask\" onClick={() => { setEditingId(subtask.id); setEditValue(subtask.title); }} sx={{ mr: 0.5 }}>\n                    <EditIcon fontSize=\"small\" />\n                  </IconButton>\n                  <IconButton size=\"small\" aria-label=\"Delete subtask\" onClick={() => onDeleteSubTask(subtask.id)} color=\"error\">\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Stack>\n              </>\n            )}\n          </Stack>\n          {subtask.dependsOn.length > 0 && (\n            <Stack direction=\"row\" spacing={0.5} sx={{ pl: 5, pt: 0.5 }}>\n              {subtask.dependsOn.map((depId: string | number) => (\n                <Typography\n                  key={`${subtask.id}-dep-${depId}`}\n                  variant=\"caption\"\n                  color=\"text.secondary\"\n                  sx={{ mr: 1 }}\n                >\n                  Needs task {depId} to be completed\n                </Typography>\n              ))}\n            </Stack>\n          )}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default SubtaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}