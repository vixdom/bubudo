{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check for existing session on load\n    const checkSession = async () => {\n      try {\n        const token = localStorage.getItem('accessToken');\n        if (token) {\n          // Fetch user profile using the token\n          const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n          } else {\n            // Token invalid, remove it\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n          }\n        }\n      } catch (err) {\n        console.error('Session check error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkSession();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n      const data = await response.json();\n\n      // Store tokens\n      localStorage.setItem('accessToken', data.accessToken);\n      localStorage.setItem('refreshToken', data.refreshToken);\n\n      // Set user\n      setUser({\n        id: data.id,\n        name: data.name,\n        email: data.email\n      });\n      navigate('/');\n    } catch (err) {\n      setError(err.message || 'An error occurred during login');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Registration failed');\n      }\n      const data = await response.json();\n\n      // Store tokens\n      localStorage.setItem('accessToken', data.accessToken);\n      localStorage.setItem('refreshToken', data.refreshToken);\n\n      // Set user\n      setUser({\n        id: data.id,\n        name: data.name,\n        email: data.email\n      });\n      navigate('/');\n    } catch (err) {\n      setError(err.message || 'An error occurred during registration');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setLoading(true);\n      await fetch(`${process.env.REACT_APP_API_URL}/api/auth/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n\n      // Clear tokens and user\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      setUser(null);\n      navigate('/login');\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"d1+zLFPuYCTHzOWgvgMVqQqBcrg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","checkSession","token","localStorage","getItem","response","fetch","process","env","REACT_APP_API_URL","headers","ok","userData","json","removeItem","err","console","login","email","password","method","body","JSON","stringify","errorData","Error","message","data","setItem","accessToken","refreshToken","id","name","register","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabaseClient } from '../api/supabase';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  error: string | null;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check for existing session on load\n    const checkSession = async () => {\n      try {\n        const token = localStorage.getItem('accessToken');\n        \n        if (token) {\n          // Fetch user profile using the token\n          const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/me`, {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n          } else {\n            // Token invalid, remove it\n            localStorage.removeItem('accessToken');\n            localStorage.removeItem('refreshToken');\n          }\n        }\n      } catch (err) {\n        console.error('Session check error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    checkSession();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Login failed');\n      }\n      \n      const data = await response.json();\n      \n      // Store tokens\n      localStorage.setItem('accessToken', data.accessToken);\n      localStorage.setItem('refreshToken', data.refreshToken);\n      \n      // Set user\n      setUser({\n        id: data.id,\n        name: data.name,\n        email: data.email\n      });\n      \n      navigate('/');\n    } catch (err: any) {\n      setError(err.message || 'An error occurred during login');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name, email, password })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Registration failed');\n      }\n      \n      const data = await response.json();\n      \n      // Store tokens\n      localStorage.setItem('accessToken', data.accessToken);\n      localStorage.setItem('refreshToken', data.refreshToken);\n      \n      // Set user\n      setUser({\n        id: data.id,\n        name: data.name,\n        email: data.email\n      });\n      \n      navigate('/');\n    } catch (err: any) {\n      setError(err.message || 'An error occurred during registration');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      setLoading(true);\n      \n      await fetch(`${process.env.REACT_APP_API_URL}/api/auth/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      \n      // Clear tokens and user\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      setUser(null);\n      \n      navigate('/login');\n    } catch (err) {\n      console.error('Logout error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, register, logout, error }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}