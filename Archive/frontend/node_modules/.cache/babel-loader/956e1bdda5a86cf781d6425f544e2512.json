{"ast":null,"code":"var _jsxFileName = \"/Users/mvikr/Projects/TaskApp/frontend/src/components/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n// Import your authentication context or hook here\n// Example: import { useAuth } from '../context/AuthContext';\n\nconst PrivateRoute = () => {\n  // Replace with your actual authentication check\n  const isAuthenticated = false; // Placeholder: Check if user is logged in\n\n  return isAuthenticated ? /*#__PURE__*/React.createElement(Outlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(Navigate, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 41\n    }\n  });\n};\nexport default PrivateRoute;","map":{"version":3,"names":["React","Navigate","Outlet","PrivateRoute","isAuthenticated","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to"],"sources":["/Users/mvikr/Projects/TaskApp/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n// Import your authentication context or hook here\n// Example: import { useAuth } from '../context/AuthContext';\n\nconst PrivateRoute: React.FC = () => {\n  // Replace with your actual authentication check\n  const isAuthenticated = false; // Placeholder: Check if user is logged in\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD;AACA;;AAEA,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EACnC;EACA,MAAMC,eAAe,GAAG,KAAK,CAAC,CAAC;;EAE/B,OAAOA,eAAe,gBAAGJ,KAAA,CAAAK,aAAA,CAACH,MAAM;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAAGX,KAAA,CAAAK,aAAA,CAACJ,QAAQ;IAACW,EAAE,EAAC,QAAQ;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAChE,CAAC;AAED,eAAeR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}